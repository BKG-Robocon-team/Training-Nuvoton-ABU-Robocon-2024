Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Small function inlining results

Inlined function __aeabi_idiv0 from idiv0.o at offset 0x160 in aeabi_sdiv.o(.text).
Inlined Instruction: BX       lr
Inlined function __aeabi_idiv0 from idiv0.o at offset 0xc in aeabi_sdiv_div0.o(.text).
Inlined Instruction: BX       lr
Inlined function __aeabi_idiv0 from idiv0.o at offset 0x176 in aeabi_sdiv_div0.o(.text).
Inlined Instruction: BX       lr
Inlined function __aeabi_idiv0 from idiv0.o at offset 0x18 in uidiv_div0.o(.text).
Inlined Instruction: BX       lr
Inlined function __aeabi_idiv0 from idiv0.o at offset 0x42 in idiv_div0.o(.text).
Inlined Instruction: BX       lr
Inlined total of 5 calls.

==============================================================================

Section Cross References

    system_m251.o(.text.SystemCoreClockUpdate) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    system_m251.o(.text.SystemCoreClockUpdate) refers to system_m251.o(.data.PllClock) for PllClock
    system_m251.o(.text.SystemCoreClockUpdate) refers to system_m251.o(.rodata.gau32ClkSrcTbl) for gau32ClkSrcTbl
    system_m251.o(.text.SystemCoreClockUpdate) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    system_m251.o(.text.SystemCoreClockUpdate) refers to system_m251.o(.data.CyclesPerUs) for CyclesPerUs
    system_m251.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_m251.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_m251.o(.text.SystemInit) refers to startup_m251.o(RESET) for __Vectors
    system_m251.o(.ARM.exidx.text.SystemInit) refers to system_m251.o(.text.SystemInit) for [Anonymous Symbol]
    system_m251.o(.ARM.exidx.text.Uart0DefaultMPF) refers to system_m251.o(.text.Uart0DefaultMPF) for [Anonymous Symbol]
    startup_m251.o(RESET) refers to startup_m251.o(STACK) for __initial_sp
    startup_m251.o(RESET) refers to startup_m251.o(.text) for Reset_Handler
    startup_m251.o(RESET) refers to retarget.o(.text.SendChar_ToUART) for SendChar_ToUART
    startup_m251.o(RESET) refers to retarget.o(.text.GetChar) for GetChar
    startup_m251.o(RESET) refers to int_handler.o(.text.UART0_IRQHandler) for UART0_IRQHandler
    startup_m251.o(RESET) refers to int_handler.o(.text.UART2_IRQHandler) for UART2_IRQHandler
    startup_m251.o(.text) refers to system_m251.o(.text.SystemInit) for SystemInit
    startup_m251.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_m251.o(.text) refers to retarget.o(.text.ProcessHardFault) for ProcessHardFault
    startup_m251.o(.text) refers to retarget.o(.text.SH_Return) for SH_Return
    clk.o(.ARM.exidx.text.CLK_DisableCKO) refers to clk.o(.text.CLK_DisableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableCKO) refers to clk.o(.text.CLK_EnableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_PowerDown) refers to clk.o(.text.CLK_PowerDown) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_Idle) refers to clk.o(.text.CLK_Idle) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetHXTFreq) refers to clk.o(.text.CLK_GetHXTFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetLXTFreq) refers to clk.o(.text.CLK_GetLXTFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK0Freq) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK0Freq) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq) refers to clk.o(.text.CLK_GetPCLK0Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK1Freq) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK1Freq) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq) refers to clk.o(.text.CLK_GetPCLK1Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetHCLKFreq) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetHCLKFreq) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetHCLKFreq) refers to clk.o(.text.CLK_GetHCLKFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetCPUFreq) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetCPUFreq) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetCPUFreq) refers to clk.o(.text.CLK_GetCPUFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetPLLClockFreq) refers to clk.o(.text.CLK_GetPLLClockFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisablePLL) refers to clk.o(.text.CLK_DisablePLL) for [Anonymous Symbol]
    clk.o(.text.CLK_EnablePLL) refers to clk.o(.text.CLK_DisablePLL) for CLK_DisablePLL
    clk.o(.text.CLK_EnablePLL) refers to clk.o(.text.CLK_WaitClockReady) for CLK_WaitClockReady
    clk.o(.text.CLK_EnablePLL) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    clk.o(.ARM.exidx.text.CLK_EnablePLL) refers to clk.o(.text.CLK_EnablePLL) for [Anonymous Symbol]
    clk.o(.text.CLK_WaitClockReady) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_WaitClockReady) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.ARM.exidx.text.CLK_WaitClockReady) refers to clk.o(.text.CLK_WaitClockReady) for [Anonymous Symbol]
    clk.o(.text.CLK_SetHCLK) refers to clk.o(.text.CLK_WaitClockReady) for CLK_WaitClockReady
    clk.o(.text.CLK_SetHCLK) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.ARM.exidx.text.CLK_SetHCLK) refers to clk.o(.text.CLK_SetHCLK) for [Anonymous Symbol]
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_WaitClockReady) for CLK_WaitClockReady
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_SetHCLK) for CLK_SetHCLK
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_EnablePLL) for CLK_EnablePLL
    clk.o(.ARM.exidx.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_SetCoreClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetModuleClock) refers to clk.o(.text.CLK_SetModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc) refers to clk.o(.text.CLK_SetSysTickClockSrc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableXtalRC) refers to clk.o(.text.CLK_EnableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableXtalRC) refers to clk.o(.text.CLK_DisableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableModuleClock) refers to clk.o(.text.CLK_EnableModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableModuleClock) refers to clk.o(.text.CLK_DisableModuleClock) for [Anonymous Symbol]
    clk.o(.text.CLK_WaitClockDisable) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_WaitClockDisable) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.ARM.exidx.text.CLK_WaitClockDisable) refers to clk.o(.text.CLK_WaitClockDisable) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableSysTick) refers to clk.o(.text.CLK_EnableSysTick) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableSysTick) refers to clk.o(.text.CLK_DisableSysTick) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetPowerDownMode) refers to clk.o(.text.CLK_SetPowerDownMode) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin) refers to clk.o(.text.CLK_EnableDPDWKPin) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin0) refers to clk.o(.text.CLK_EnableDPDWKPin0) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin1) refers to clk.o(.text.CLK_EnableDPDWKPin1) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin2) refers to clk.o(.text.CLK_EnableDPDWKPin2) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin3) refers to clk.o(.text.CLK_EnableDPDWKPin3) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin4) refers to clk.o(.text.CLK_EnableDPDWKPin4) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetPMUWKSrc) refers to clk.o(.text.CLK_GetPMUWKSrc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetModuleClockSource) refers to clk.o(.text.CLK_GetModuleClockSource) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetModuleClockDivider) refers to clk.o(.text.CLK_GetModuleClockDivider) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetMode) refers to gpio.o(.text.GPIO_SetMode) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_EnableInt) refers to gpio.o(.text.GPIO_EnableInt) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_DisableInt) refers to gpio.o(.text.GPIO_DisableInt) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetSlewCtl) refers to gpio.o(.text.GPIO_SetSlewCtl) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetPullCtl) refers to gpio.o(.text.GPIO_SetPullCtl) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SH_Return) refers to retarget.o(.text.SH_Return) for [Anonymous Symbol]
    retarget.o(.text.ProcessHardFault) refers to printfa.o(i.__0printf) for printf
    retarget.o(.text.ProcessHardFault) refers to retarget.o(.text.DumpStack) for DumpStack
    retarget.o(.text.ProcessHardFault) refers to retarget.o(.rodata.str1.1) for [Anonymous Symbol]
    retarget.o(.text.ProcessHardFault) refers to retarget.o(.data.g_ICE_Connected) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.ProcessHardFault) refers to retarget.o(.text.ProcessHardFault) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.DumpStack) refers to retarget.o(.text.DumpStack) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SendChar_ToUART) refers to retarget.o(.text.SendChar_ToUART) for [Anonymous Symbol]
    retarget.o(.text.SendChar) refers to retarget.o(.text.SendChar_ToUART) for SendChar_ToUART
    retarget.o(.ARM.exidx.text.SendChar) refers to retarget.o(.text.SendChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.GetChar) refers to retarget.o(.text.GetChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.kbhit) refers to retarget.o(.text.kbhit) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.IsDebugFifoEmpty) refers to retarget.o(.text.IsDebugFifoEmpty) for [Anonymous Symbol]
    retarget.o(.text._ttywrch) refers to retarget.o(.text.SendChar) for SendChar
    retarget.o(.ARM.exidx.text._ttywrch) refers to retarget.o(.text._ttywrch) for [Anonymous Symbol]
    retarget.o(.text.fputc) refers to retarget.o(.text.SendChar) for SendChar
    retarget.o(.ARM.exidx.text.fputc) refers to retarget.o(.text.fputc) for [Anonymous Symbol]
    retarget.o(.text.fgetc) refers to retarget.o(.text.GetChar) for GetChar
    retarget.o(.ARM.exidx.text.fgetc) refers to retarget.o(.text.fgetc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.ferror) refers to retarget.o(.text.ferror) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ClearResetSrc) refers to sys.o(.text.SYS_ClearResetSrc) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_GetBODStatus) refers to sys.o(.text.SYS_GetBODStatus) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_GetResetSrc) refers to sys.o(.text.SYS_GetResetSrc) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_IsRegLocked) refers to sys.o(.text.SYS_IsRegLocked) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ReadPDID) refers to sys.o(.text.SYS_ReadPDID) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetChip) refers to sys.o(.text.SYS_ResetChip) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetCPU) refers to sys.o(.text.SYS_ResetCPU) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetModule) refers to sys.o(.text.SYS_ResetModule) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_EnableBOD) refers to sys.o(.text.SYS_EnableBOD) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_DisableBOD) refers to sys.o(.text.SYS_DisableBOD) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_SetPowerLevel) refers to sys.o(.text.SYS_SetPowerLevel) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_ClearIntFlag) refers to uart.o(.text.UART_ClearIntFlag) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Close) refers to uart.o(.text.UART_Close) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableFlowCtrl) refers to uart.o(.text.UART_DisableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableInt) refers to uart.o(.text.UART_DisableInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableFlowCtrl) refers to uart.o(.text.UART_EnableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableInt) refers to uart.o(.text.UART_EnableInt) for [Anonymous Symbol]
    uart.o(.text.UART_Open) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.text.UART_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    uart.o(.text.UART_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    uart.o(.text.UART_Open) refers to uart.o(.rodata..L__const.UART_Open.au32ClkTbl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Open) refers to uart.o(.text.UART_Open) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Read) refers to uart.o(.text.UART_Read) for [Anonymous Symbol]
    uart.o(.text.UART_SetLine_Config) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.text.UART_SetLine_Config) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    uart.o(.text.UART_SetLine_Config) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    uart.o(.text.UART_SetLine_Config) refers to uart.o(.rodata..L__const.UART_SetLine_Config.au32ClkTbl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SetLine_Config) refers to uart.o(.text.UART_SetLine_Config) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SetTimeoutCnt) refers to uart.o(.text.UART_SetTimeoutCnt) for [Anonymous Symbol]
    uart.o(.text.UART_SelectIrDAMode) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.text.UART_SelectIrDAMode) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    uart.o(.text.UART_SelectIrDAMode) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    uart.o(.text.UART_SelectIrDAMode) refers to uart.o(.rodata..L__const.UART_SelectIrDAMode.au32ClkTbl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectIrDAMode) refers to uart.o(.text.UART_SelectIrDAMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectRS485Mode) refers to uart.o(.text.UART_SelectRS485Mode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectLINMode) refers to uart.o(.text.UART_SelectLINMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Write) refers to uart.o(.text.UART_Write) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectSingleWireMode) refers to uart.o(.text.UART_SelectSingleWireMode) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_Open) refers to tk.o(.text.TK_Open) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_Close) refers to tk.o(.text.TK_Close) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_SetScanMode) refers to tk.o(.text.TK_SetScanMode) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_ConfigSensitivity) refers to tk.o(.text.TK_ConfigSensitivity) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_SetCapBankPol) refers to tk.o(.text.TK_SetCapBankPol) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_SetTkPol) refers to tk.o(.text.TK_SetTkPol) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_EnableTkPolarity) refers to tk.o(.text.TK_EnableTkPolarity) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_DisableTkPolarity) refers to tk.o(.text.TK_DisableTkPolarity) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_SetCompCapBankData) refers to tk.o(.text.TK_SetCompCapBankData) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_SetRefKeyCapBankData) refers to tk.o(.text.TK_SetRefKeyCapBankData) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_SetRefCapBankData) refers to tk.o(.text.TK_SetRefCapBankData) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_SetScanThreshold) refers to tk.o(.text.TK_SetScanThreshold) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_EnableInt) refers to tk.o(.text.TK_EnableInt) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_DisableInt) refers to tk.o(.text.TK_DisableInt) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_DisableAllChannel) refers to tk.o(.text.TK_DisableAllChannel) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_ClearTKIF) refers to tk.o(.text.TK_ClearTKIF) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_EnableScanAll) refers to tk.o(.text.TK_EnableScanAll) for [Anonymous Symbol]
    tk.o(.ARM.exidx.text.TK_DisableScanAll) refers to tk.o(.text.TK_DisableScanAll) for [Anonymous Symbol]
    acmp.o(.ARM.exidx.text.ACMP_Open) refers to acmp.o(.text.ACMP_Open) for [Anonymous Symbol]
    acmp.o(.ARM.exidx.text.ACMP_Close) refers to acmp.o(.text.ACMP_Close) for [Anonymous Symbol]
    bpwm.o(.text.BPWM_ConfigCaptureChannel) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    bpwm.o(.text.BPWM_ConfigCaptureChannel) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    bpwm.o(.text.BPWM_ConfigCaptureChannel) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    bpwm.o(.text.BPWM_ConfigCaptureChannel) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    bpwm.o(.ARM.exidx.text.BPWM_ConfigCaptureChannel) refers to bpwm.o(.text.BPWM_ConfigCaptureChannel) for [Anonymous Symbol]
    bpwm.o(.text.BPWM_ConfigOutputChannel) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    bpwm.o(.text.BPWM_ConfigOutputChannel) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    bpwm.o(.text.BPWM_ConfigOutputChannel) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    bpwm.o(.text.BPWM_ConfigOutputChannel) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    bpwm.o(.ARM.exidx.text.BPWM_ConfigOutputChannel) refers to bpwm.o(.text.BPWM_ConfigOutputChannel) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_Start) refers to bpwm.o(.text.BPWM_Start) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_Stop) refers to bpwm.o(.text.BPWM_Stop) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_ForceStop) refers to bpwm.o(.text.BPWM_ForceStop) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_EnableADCTrigger) refers to bpwm.o(.text.BPWM_EnableADCTrigger) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_DisableADCTrigger) refers to bpwm.o(.text.BPWM_DisableADCTrigger) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_ClearADCTriggerFlag) refers to bpwm.o(.text.BPWM_ClearADCTriggerFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_GetADCTriggerFlag) refers to bpwm.o(.text.BPWM_GetADCTriggerFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_EnableCapture) refers to bpwm.o(.text.BPWM_EnableCapture) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_DisableCapture) refers to bpwm.o(.text.BPWM_DisableCapture) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_EnableOutput) refers to bpwm.o(.text.BPWM_EnableOutput) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_DisableOutput) refers to bpwm.o(.text.BPWM_DisableOutput) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_EnableCaptureInt) refers to bpwm.o(.text.BPWM_EnableCaptureInt) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_DisableCaptureInt) refers to bpwm.o(.text.BPWM_DisableCaptureInt) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_ClearCaptureIntFlag) refers to bpwm.o(.text.BPWM_ClearCaptureIntFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_GetCaptureIntFlag) refers to bpwm.o(.text.BPWM_GetCaptureIntFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_EnableDutyInt) refers to bpwm.o(.text.BPWM_EnableDutyInt) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_DisableDutyInt) refers to bpwm.o(.text.BPWM_DisableDutyInt) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_ClearDutyIntFlag) refers to bpwm.o(.text.BPWM_ClearDutyIntFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_GetDutyIntFlag) refers to bpwm.o(.text.BPWM_GetDutyIntFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_EnablePeriodInt) refers to bpwm.o(.text.BPWM_EnablePeriodInt) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_DisablePeriodInt) refers to bpwm.o(.text.BPWM_DisablePeriodInt) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_ClearPeriodIntFlag) refers to bpwm.o(.text.BPWM_ClearPeriodIntFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_GetPeriodIntFlag) refers to bpwm.o(.text.BPWM_GetPeriodIntFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_EnableZeroInt) refers to bpwm.o(.text.BPWM_EnableZeroInt) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_DisableZeroInt) refers to bpwm.o(.text.BPWM_DisableZeroInt) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_ClearZeroIntFlag) refers to bpwm.o(.text.BPWM_ClearZeroIntFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_GetZeroIntFlag) refers to bpwm.o(.text.BPWM_GetZeroIntFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_EnableLoadMode) refers to bpwm.o(.text.BPWM_EnableLoadMode) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_DisableLoadMode) refers to bpwm.o(.text.BPWM_DisableLoadMode) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_SetClockSource) refers to bpwm.o(.text.BPWM_SetClockSource) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_GetWrapAroundFlag) refers to bpwm.o(.text.BPWM_GetWrapAroundFlag) for [Anonymous Symbol]
    bpwm.o(.ARM.exidx.text.BPWM_ClearWrapAroundFlag) refers to bpwm.o(.text.BPWM_ClearWrapAroundFlag) for [Anonymous Symbol]
    crc.o(.ARM.exidx.text.CRC_Open) refers to crc.o(.text.CRC_Open) for [Anonymous Symbol]
    crc.o(.ARM.exidx.text.CRC_GetChecksum) refers to crc.o(.text.CRC_GetChecksum) for [Anonymous Symbol]
    crypto.o(.text.AES_Open) refers to crypto.o(.bss.g_AES_au32CTL) for [Anonymous Symbol]
    crypto.o(.ARM.exidx.text.AES_Open) refers to crypto.o(.text.AES_Open) for [Anonymous Symbol]
    crypto.o(.text.AES_Start) refers to crypto.o(.bss.g_AES_au32CTL) for [Anonymous Symbol]
    crypto.o(.ARM.exidx.text.AES_Start) refers to crypto.o(.text.AES_Start) for [Anonymous Symbol]
    crypto.o(.ARM.exidx.text.AES_SetKey) refers to crypto.o(.text.AES_SetKey) for [Anonymous Symbol]
    crypto.o(.ARM.exidx.text.AES_SetInitVect) refers to crypto.o(.text.AES_SetInitVect) for [Anonymous Symbol]
    crypto.o(.ARM.exidx.text.AES_SetDMATransfer) refers to crypto.o(.text.AES_SetDMATransfer) for [Anonymous Symbol]
    dac.o(.ARM.exidx.text.DAC_Open) refers to dac.o(.text.DAC_Open) for [Anonymous Symbol]
    dac.o(.ARM.exidx.text.DAC_Close) refers to dac.o(.text.DAC_Close) for [Anonymous Symbol]
    dac.o(.text.DAC_SetDelayTime) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    dac.o(.ARM.exidx.text.DAC_SetDelayTime) refers to dac.o(.text.DAC_SetDelayTime) for [Anonymous Symbol]
    eadc.o(.text.EADC_Open) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    eadc.o(.text.EADC_Open) refers to eadc.o(.bss.g_EADC_i32ErrCode) for g_EADC_i32ErrCode
    eadc.o(.ARM.exidx.text.EADC_Open) refers to eadc.o(.text.EADC_Open) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_Close) refers to eadc.o(.text.EADC_Close) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_ConfigSampleModule) refers to eadc.o(.text.EADC_ConfigSampleModule) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_SetTriggerDelayTime) refers to eadc.o(.text.EADC_SetTriggerDelayTime) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_SetExtendSampleTime) refers to eadc.o(.text.EADC_SetExtendSampleTime) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_Open) refers to ebi.o(.text.EBI_Open) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_Close) refers to ebi.o(.text.EBI_Close) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_SetBusTiming) refers to ebi.o(.text.EBI_SetBusTiming) for [Anonymous Symbol]
    fmc.o(.ARM.exidx.text.FMC_SetBootSource) refers to fmc.o(.text.FMC_SetBootSource) for [Anonymous Symbol]
    fmc.o(.ARM.exidx.text.FMC_Close) refers to fmc.o(.text.FMC_Close) for [Anonymous Symbol]
    fmc.o(.ARM.exidx.text.FMC_GetBootSource) refers to fmc.o(.text.FMC_GetBootSource) for [Anonymous Symbol]
    fmc.o(.ARM.exidx.text.FMC_Open) refers to fmc.o(.text.FMC_Open) for [Anonymous Symbol]
    fmc.o(.text.FMC_ReadConfig) refers to fmc.o(.text.FMC_Read) for FMC_Read
    fmc.o(.text.FMC_ReadConfig) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.ARM.exidx.text.FMC_ReadConfig) refers to fmc.o(.text.FMC_ReadConfig) for [Anonymous Symbol]
    fmc.o(.text.FMC_Read) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.text.FMC_Read) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    fmc.o(.ARM.exidx.text.FMC_Read) refers to fmc.o(.text.FMC_Read) for [Anonymous Symbol]
    fmc.o(.text.FMC_WriteConfig) refers to fmc.o(.text.FMC_Write) for FMC_Write
    fmc.o(.text.FMC_WriteConfig) refers to fmc.o(.text.FMC_Read) for FMC_Read
    fmc.o(.ARM.exidx.text.FMC_WriteConfig) refers to fmc.o(.text.FMC_WriteConfig) for [Anonymous Symbol]
    fmc.o(.text.FMC_Write) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.text.FMC_Write) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    fmc.o(.ARM.exidx.text.FMC_Write) refers to fmc.o(.text.FMC_Write) for [Anonymous Symbol]
    fmc.o(.text.FMC_GetChkSum) refers to fmc.o(.text.FMC_GetCheckSum) for FMC_GetCheckSum
    fmc.o(.ARM.exidx.text.FMC_GetChkSum) refers to fmc.o(.text.FMC_GetChkSum) for [Anonymous Symbol]
    fmc.o(.text.FMC_GetCheckSum) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.text.FMC_GetCheckSum) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    fmc.o(.ARM.exidx.text.FMC_GetCheckSum) refers to fmc.o(.text.FMC_GetCheckSum) for [Anonymous Symbol]
    fmc.o(.text.FMC_CheckAllOne) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.text.FMC_CheckAllOne) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    fmc.o(.ARM.exidx.text.FMC_CheckAllOne) refers to fmc.o(.text.FMC_CheckAllOne) for [Anonymous Symbol]
    fmc.o(.ARM.exidx.text.FMC_Is_XOM_Actived) refers to fmc.o(.text.FMC_Is_XOM_Actived) for [Anonymous Symbol]
    fmc.o(.text.FMC_Config_XOM) refers to fmc.o(.text.FMC_Is_XOM_Actived) for FMC_Is_XOM_Actived
    fmc.o(.text.FMC_Config_XOM) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.text.FMC_Config_XOM) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    fmc.o(.ARM.exidx.text.FMC_Config_XOM) refers to fmc.o(.text.FMC_Config_XOM) for [Anonymous Symbol]
    fmc.o(.text.FMC_Erase_XOM) refers to fmc.o(.text.FMC_Is_XOM_Actived) for FMC_Is_XOM_Actived
    fmc.o(.text.FMC_Erase_XOM) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.text.FMC_Erase_XOM) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    fmc.o(.ARM.exidx.text.FMC_Erase_XOM) refers to fmc.o(.text.FMC_Erase_XOM) for [Anonymous Symbol]
    fmc.o(.text.FMC_Erase) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.text.FMC_Erase) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    fmc.o(.ARM.exidx.text.FMC_Erase) refers to fmc.o(.text.FMC_Erase) for [Anonymous Symbol]
    fmc.o(.text.FMC_Write128) refers to fmc.o(.bss.g_FMC_i32ErrCode) for g_FMC_i32ErrCode
    fmc.o(.text.FMC_Write128) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    fmc.o(.ARM.exidx.text.FMC_Write128) refers to fmc.o(.text.FMC_Write128) for [Anonymous Symbol]
    i2c.o(.text.I2C_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    i2c.o(.text.I2C_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    i2c.o(.ARM.exidx.text.I2C_Open) refers to i2c.o(.text.I2C_Open) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_Close) refers to i2c.o(.text.I2C_Close) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_ClearTimeoutFlag) refers to i2c.o(.text.I2C_ClearTimeoutFlag) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_Trigger) refers to i2c.o(.text.I2C_Trigger) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_DisableInt) refers to i2c.o(.text.I2C_DisableInt) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_EnableInt) refers to i2c.o(.text.I2C_EnableInt) for [Anonymous Symbol]
    i2c.o(.text.I2C_GetBusClockFreq) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    i2c.o(.text.I2C_GetBusClockFreq) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    i2c.o(.ARM.exidx.text.I2C_GetBusClockFreq) refers to i2c.o(.text.I2C_GetBusClockFreq) for [Anonymous Symbol]
    i2c.o(.text.I2C_SetBusClockFreq) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    i2c.o(.text.I2C_SetBusClockFreq) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    i2c.o(.ARM.exidx.text.I2C_SetBusClockFreq) refers to i2c.o(.text.I2C_SetBusClockFreq) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_GetIntFlag) refers to i2c.o(.text.I2C_GetIntFlag) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_GetStatus) refers to i2c.o(.text.I2C_GetStatus) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_GetData) refers to i2c.o(.text.I2C_GetData) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SetData) refers to i2c.o(.text.I2C_SetData) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SetSlaveAddr) refers to i2c.o(.text.I2C_SetSlaveAddr) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SetSlaveAddrMask) refers to i2c.o(.text.I2C_SetSlaveAddrMask) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_EnableTimeout) refers to i2c.o(.text.I2C_EnableTimeout) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_DisableTimeout) refers to i2c.o(.text.I2C_DisableTimeout) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_EnableWakeup) refers to i2c.o(.text.I2C_EnableWakeup) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_DisableWakeup) refers to i2c.o(.text.I2C_DisableWakeup) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusGetStatus) refers to i2c.o(.text.I2C_SMBusGetStatus) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusClearInterruptFlag) refers to i2c.o(.text.I2C_SMBusClearInterruptFlag) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusSetPacketByteCount) refers to i2c.o(.text.I2C_SMBusSetPacketByteCount) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusOpen) refers to i2c.o(.text.I2C_SMBusOpen) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusClose) refers to i2c.o(.text.I2C_SMBusClose) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusPECTxEnable) refers to i2c.o(.text.I2C_SMBusPECTxEnable) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusGetPECValue) refers to i2c.o(.text.I2C_SMBusGetPECValue) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusIdleTimeout) refers to i2c.o(.text.I2C_SMBusIdleTimeout) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusTimeout) refers to i2c.o(.text.I2C_SMBusTimeout) for [Anonymous Symbol]
    i2c.o(.ARM.exidx.text.I2C_SMBusClockLoTimeout) refers to i2c.o(.text.I2C_SMBusClockLoTimeout) for [Anonymous Symbol]
    i2c.o(.text.I2C_WriteByte) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_WriteByte) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_WriteByte) refers to i2c.o(.text.I2C_WriteByte) for [Anonymous Symbol]
    i2c.o(.text.I2C_WriteMultiBytes) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_WriteMultiBytes) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_WriteMultiBytes) refers to i2c.o(.text.I2C_WriteMultiBytes) for [Anonymous Symbol]
    i2c.o(.text.I2C_WriteByteOneReg) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_WriteByteOneReg) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_WriteByteOneReg) refers to i2c.o(.text.I2C_WriteByteOneReg) for [Anonymous Symbol]
    i2c.o(.text.I2C_WriteMultiBytesOneReg) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_WriteMultiBytesOneReg) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_WriteMultiBytesOneReg) refers to i2c.o(.text.I2C_WriteMultiBytesOneReg) for [Anonymous Symbol]
    i2c.o(.text.I2C_WriteByteTwoRegs) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_WriteByteTwoRegs) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_WriteByteTwoRegs) refers to i2c.o(.text.I2C_WriteByteTwoRegs) for [Anonymous Symbol]
    i2c.o(.text.I2C_WriteMultiBytesTwoRegs) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_WriteMultiBytesTwoRegs) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_WriteMultiBytesTwoRegs) refers to i2c.o(.text.I2C_WriteMultiBytesTwoRegs) for [Anonymous Symbol]
    i2c.o(.text.I2C_ReadByte) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_ReadByte) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_ReadByte) refers to i2c.o(.text.I2C_ReadByte) for [Anonymous Symbol]
    i2c.o(.text.I2C_ReadMultiBytes) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_ReadMultiBytes) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_ReadMultiBytes) refers to i2c.o(.text.I2C_ReadMultiBytes) for [Anonymous Symbol]
    i2c.o(.text.I2C_ReadByteOneReg) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_ReadByteOneReg) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_ReadByteOneReg) refers to i2c.o(.text.I2C_ReadByteOneReg) for [Anonymous Symbol]
    i2c.o(.text.I2C_ReadMultiBytesOneReg) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_ReadMultiBytesOneReg) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_ReadMultiBytesOneReg) refers to i2c.o(.text.I2C_ReadMultiBytesOneReg) for [Anonymous Symbol]
    i2c.o(.text.I2C_ReadByteTwoRegs) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_ReadByteTwoRegs) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_ReadByteTwoRegs) refers to i2c.o(.text.I2C_ReadByteTwoRegs) for [Anonymous Symbol]
    i2c.o(.text.I2C_ReadMultiBytesTwoRegs) refers to i2c.o(.bss.g_I2C_i32ErrCode) for g_I2C_i32ErrCode
    i2c.o(.text.I2C_ReadMultiBytesTwoRegs) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    i2c.o(.ARM.exidx.text.I2C_ReadMultiBytesTwoRegs) refers to i2c.o(.text.I2C_ReadMultiBytesTwoRegs) for [Anonymous Symbol]
    lcd.o(.text.LCD_Open) refers to lcd.o(.text.LCD_SetAllPixels) for LCD_SetAllPixels
    lcd.o(.text.LCD_Open) refers to clk.o(.text.CLK_EnableModuleClock) for CLK_EnableModuleClock
    lcd.o(.text.LCD_Open) refers to clk.o(.text.CLK_DisableModuleClock) for CLK_DisableModuleClock
    lcd.o(.text.LCD_Open) refers to lcd.o(.bss.g_LCDFrameRate) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_Open) refers to lcd.o(.text.LCD_Open) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_SetAllPixels) refers to lcd.o(.text.LCD_SetAllPixels) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_Close) refers to lcd.o(.text.LCD_Close) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_SetPixel) refers to lcd.o(.text.LCD_SetPixel) for [Anonymous Symbol]
    lcd.o(.text.LCD_EnableBlink) refers to lcd.o(.bss.g_LCDFrameRate) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_EnableBlink) refers to lcd.o(.text.LCD_EnableBlink) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_DisableBlink) refers to lcd.o(.text.LCD_DisableBlink) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_EnableInt) refers to lcd.o(.text.LCD_EnableInt) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_DisableInt) refers to lcd.o(.text.LCD_DisableInt) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_SetSavingMode) refers to lcd.o(.text.LCD_SetSavingMode) for [Anonymous Symbol]
    pdma.o(.text.PDMA_Open) refers to pdma.o(.bss.u8ChSelect) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_Open) refers to pdma.o(.text.PDMA_Open) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_Close) refers to pdma.o(.text.PDMA_Close) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_SetTransferCnt) refers to pdma.o(.text.PDMA_SetTransferCnt) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_SetStride) refers to pdma.o(.text.PDMA_SetStride) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_SetTransferAddr) refers to pdma.o(.text.PDMA_SetTransferAddr) for [Anonymous Symbol]
    pdma.o(.text.PDMA_SetTransferMode) refers to pdma.o(.bss.u8ChSelect) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_SetTransferMode) refers to pdma.o(.text.PDMA_SetTransferMode) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_SetBurstType) refers to pdma.o(.text.PDMA_SetBurstType) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_EnableTimeout) refers to pdma.o(.text.PDMA_EnableTimeout) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_DisableTimeout) refers to pdma.o(.text.PDMA_DisableTimeout) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_SetTimeOut) refers to pdma.o(.text.PDMA_SetTimeOut) for [Anonymous Symbol]
    pdma.o(.text.PDMA_Trigger) refers to pdma.o(.bss.u8ChSelect) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_Trigger) refers to pdma.o(.text.PDMA_Trigger) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_EnableInt) refers to pdma.o(.text.PDMA_EnableInt) for [Anonymous Symbol]
    pdma.o(.ARM.exidx.text.PDMA_DisableInt) refers to pdma.o(.text.PDMA_DisableInt) for [Anonymous Symbol]
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    pwm.o(.ARM.exidx.text.PWM_ConfigCaptureChannel) refers to pwm.o(.text.PWM_ConfigCaptureChannel) for [Anonymous Symbol]
    pwm.o(.text.PWM_ConfigOutputChannel) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    pwm.o(.text.PWM_ConfigOutputChannel) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    pwm.o(.text.PWM_ConfigOutputChannel) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    pwm.o(.text.PWM_ConfigOutputChannel) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    pwm.o(.ARM.exidx.text.PWM_ConfigOutputChannel) refers to pwm.o(.text.PWM_ConfigOutputChannel) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_Start) refers to pwm.o(.text.PWM_Start) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_Stop) refers to pwm.o(.text.PWM_Stop) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ForceStop) refers to pwm.o(.text.PWM_ForceStop) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableADCTrigger) refers to pwm.o(.text.PWM_EnableADCTrigger) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableADCTrigger) refers to pwm.o(.text.PWM_DisableADCTrigger) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearADCTriggerFlag) refers to pwm.o(.text.PWM_ClearADCTriggerFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetADCTriggerFlag) refers to pwm.o(.text.PWM_GetADCTriggerFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableFaultBrake) refers to pwm.o(.text.PWM_EnableFaultBrake) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableCapture) refers to pwm.o(.text.PWM_EnableCapture) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableCapture) refers to pwm.o(.text.PWM_DisableCapture) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableOutput) refers to pwm.o(.text.PWM_EnableOutput) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableOutput) refers to pwm.o(.text.PWM_DisableOutput) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableDeadZone) refers to pwm.o(.text.PWM_EnableDeadZone) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableDeadZone) refers to pwm.o(.text.PWM_DisableDeadZone) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableCaptureInt) refers to pwm.o(.text.PWM_EnableCaptureInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableCaptureInt) refers to pwm.o(.text.PWM_DisableCaptureInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearCaptureIntFlag) refers to pwm.o(.text.PWM_ClearCaptureIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetCaptureIntFlag) refers to pwm.o(.text.PWM_GetCaptureIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableDutyInt) refers to pwm.o(.text.PWM_EnableDutyInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableDutyInt) refers to pwm.o(.text.PWM_DisableDutyInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearDutyIntFlag) refers to pwm.o(.text.PWM_ClearDutyIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetDutyIntFlag) refers to pwm.o(.text.PWM_GetDutyIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableLoadMode) refers to pwm.o(.text.PWM_EnableLoadMode) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableLoadMode) refers to pwm.o(.text.PWM_DisableLoadMode) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableFaultBrakeInt) refers to pwm.o(.text.PWM_EnableFaultBrakeInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableFaultBrakeInt) refers to pwm.o(.text.PWM_DisableFaultBrakeInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearFaultBrakeIntFlag) refers to pwm.o(.text.PWM_ClearFaultBrakeIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetFaultBrakeIntFlag) refers to pwm.o(.text.PWM_GetFaultBrakeIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnablePeriodInt) refers to pwm.o(.text.PWM_EnablePeriodInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisablePeriodInt) refers to pwm.o(.text.PWM_DisablePeriodInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearPeriodIntFlag) refers to pwm.o(.text.PWM_ClearPeriodIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetPeriodIntFlag) refers to pwm.o(.text.PWM_GetPeriodIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableZeroInt) refers to pwm.o(.text.PWM_EnableZeroInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableZeroInt) refers to pwm.o(.text.PWM_DisableZeroInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearZeroIntFlag) refers to pwm.o(.text.PWM_ClearZeroIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetZeroIntFlag) refers to pwm.o(.text.PWM_GetZeroIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_SetClockSource) refers to pwm.o(.text.PWM_SetClockSource) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableBrakeNoiseFilter) refers to pwm.o(.text.PWM_EnableBrakeNoiseFilter) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableBrakeNoiseFilter) refers to pwm.o(.text.PWM_DisableBrakeNoiseFilter) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableBrakePinInverse) refers to pwm.o(.text.PWM_EnableBrakePinInverse) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableBrakePinInverse) refers to pwm.o(.text.PWM_DisableBrakePinInverse) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_SetBrakePinSource) refers to pwm.o(.text.PWM_SetBrakePinSource) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetWrapAroundFlag) refers to pwm.o(.text.PWM_GetWrapAroundFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearWrapAroundFlag) refers to pwm.o(.text.PWM_ClearWrapAroundFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnablePDMA) refers to pwm.o(.text.PWM_EnablePDMA) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisablePDMA) refers to pwm.o(.text.PWM_DisablePDMA) for [Anonymous Symbol]
    qspi.o(.text.QSPI_Open) refers to clk.o(.text.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    qspi.o(.text.QSPI_Open) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    qspi.o(.text.QSPI_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    qspi.o(.ARM.exidx.text.QSPI_Open) refers to qspi.o(.text.QSPI_Open) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_Close) refers to qspi.o(.text.QSPI_Close) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_ClearRxFIFO) refers to qspi.o(.text.QSPI_ClearRxFIFO) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_ClearTxFIFO) refers to qspi.o(.text.QSPI_ClearTxFIFO) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_DisableAutoSS) refers to qspi.o(.text.QSPI_DisableAutoSS) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_EnableAutoSS) refers to qspi.o(.text.QSPI_EnableAutoSS) for [Anonymous Symbol]
    qspi.o(.text.QSPI_SetBusClock) refers to clk.o(.text.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    qspi.o(.text.QSPI_SetBusClock) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    qspi.o(.text.QSPI_SetBusClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    qspi.o(.ARM.exidx.text.QSPI_SetBusClock) refers to qspi.o(.text.QSPI_SetBusClock) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_SetFIFO) refers to qspi.o(.text.QSPI_SetFIFO) for [Anonymous Symbol]
    qspi.o(.text.QSPI_GetBusClock) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    qspi.o(.text.QSPI_GetBusClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    qspi.o(.ARM.exidx.text.QSPI_GetBusClock) refers to qspi.o(.text.QSPI_GetBusClock) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_EnableInt) refers to qspi.o(.text.QSPI_EnableInt) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_DisableInt) refers to qspi.o(.text.QSPI_DisableInt) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_GetIntFlag) refers to qspi.o(.text.QSPI_GetIntFlag) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_ClearIntFlag) refers to qspi.o(.text.QSPI_ClearIntFlag) for [Anonymous Symbol]
    qspi.o(.ARM.exidx.text.QSPI_GetStatus) refers to qspi.o(.text.QSPI_GetStatus) for [Anonymous Symbol]
    rtc.o(.text.RTC_Open) refers to rtc.o(.text.RTC_SetDateAndTime) for RTC_SetDateAndTime
    rtc.o(.text.RTC_Open) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    rtc.o(.ARM.exidx.text.RTC_Open) refers to rtc.o(.text.RTC_Open) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetDateAndTime) refers to rtc.o(.text.RTC_SetDateAndTime) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_Close) refers to rtc.o(.text.RTC_Close) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_32KCalibration) refers to rtc.o(.text.RTC_32KCalibration) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32HiYear) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32LoYear) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32HiMonth) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32LoMonth) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32HiDay) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32LoDay) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32HiHour) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32LoHour) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32HiMin) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32LoMin) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32HiSec) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetDateAndTime) refers to rtc.o(.bss.g_u32LoSec) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_GetDateAndTime) refers to rtc.o(.text.RTC_GetDateAndTime) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32HiYear) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32LoYear) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32HiMonth) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32LoMonth) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32HiDay) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32LoDay) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32HiHour) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32LoHour) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32HiMin) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32LoMin) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32HiSec) for [Anonymous Symbol]
    rtc.o(.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.bss.g_u32LoSec) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_GetAlarmDateAndTime) refers to rtc.o(.text.RTC_GetAlarmDateAndTime) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetAlarmDateAndTime) refers to rtc.o(.text.RTC_SetAlarmDateAndTime) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetDate) refers to rtc.o(.text.RTC_SetDate) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetTime) refers to rtc.o(.text.RTC_SetTime) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetAlarmDate) refers to rtc.o(.text.RTC_SetAlarmDate) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetAlarmTime) refers to rtc.o(.text.RTC_SetAlarmTime) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetAlarmDateMask) refers to rtc.o(.text.RTC_SetAlarmDateMask) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetAlarmTimeMask) refers to rtc.o(.text.RTC_SetAlarmTimeMask) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_GetDayOfWeek) refers to rtc.o(.text.RTC_GetDayOfWeek) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_SetTickPeriod) refers to rtc.o(.text.RTC_SetTickPeriod) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_EnableInt) refers to rtc.o(.text.RTC_EnableInt) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_DisableInt) refers to rtc.o(.text.RTC_DisableInt) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_EnableSpareAccess) refers to rtc.o(.text.RTC_EnableSpareAccess) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_DisableSpareRegister) refers to rtc.o(.text.RTC_DisableSpareRegister) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_StaticTamperEnable) refers to rtc.o(.text.RTC_StaticTamperEnable) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.RTC_StaticTamperDisable) refers to rtc.o(.text.RTC_StaticTamperDisable) for [Anonymous Symbol]
    sc.o(.text.SC_IsCardInserted) refers to sc.o(.bss.u32CardStateIgnore) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_IsCardInserted) refers to sc.o(.text.SC_IsCardInserted) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_ClearFIFO) refers to sc.o(.text.SC_ClearFIFO) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_Close) refers to sc.o(.text.SC_Close) for [Anonymous Symbol]
    sc.o(.text.SC_Open) refers to sc.o(.bss.u32CardStateIgnore) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_Open) refers to sc.o(.text.SC_Open) for [Anonymous Symbol]
    sc.o(.text.SC_ResetReader) refers to sc.o(.bss.u32CardStateIgnore) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_ResetReader) refers to sc.o(.text.SC_ResetReader) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_SetBlockGuardTime) refers to sc.o(.text.SC_SetBlockGuardTime) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_SetCharGuardTime) refers to sc.o(.text.SC_SetCharGuardTime) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_StopAllTimer) refers to sc.o(.text.SC_StopAllTimer) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_StartTimer) refers to sc.o(.text.SC_StartTimer) for [Anonymous Symbol]
    sc.o(.ARM.exidx.text.SC_StopTimer) refers to sc.o(.text.SC_StopTimer) for [Anonymous Symbol]
    sc.o(.text.SC_GetInterfaceClock) refers to clk.o(.text.CLK_GetModuleClockSource) for CLK_GetModuleClockSource
    sc.o(.text.SC_GetInterfaceClock) refers to clk.o(.text.CLK_GetModuleClockDivider) for CLK_GetModuleClockDivider
    sc.o(.text.SC_GetInterfaceClock) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    sc.o(.text.SC_GetInterfaceClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    sc.o(.text.SC_GetInterfaceClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    sc.o(.ARM.exidx.text.SC_GetInterfaceClock) refers to sc.o(.text.SC_GetInterfaceClock) for [Anonymous Symbol]
    scuart.o(.ARM.exidx.text.SCUART_Close) refers to scuart.o(.text.SCUART_Close) for [Anonymous Symbol]
    scuart.o(.text.SCUART_Open) refers to scuart.o(.text.SCUART_GetClock) for SCUART_GetClock
    scuart.o(.ARM.exidx.text.SCUART_Open) refers to scuart.o(.text.SCUART_Open) for [Anonymous Symbol]
    scuart.o(.text.SCUART_GetClock) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    scuart.o(.text.SCUART_GetClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    scuart.o(.text.SCUART_GetClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    scuart.o(.ARM.exidx.text.SCUART_GetClock) refers to scuart.o(.text.SCUART_GetClock) for [Anonymous Symbol]
    scuart.o(.ARM.exidx.text.SCUART_Read) refers to scuart.o(.text.SCUART_Read) for [Anonymous Symbol]
    scuart.o(.text.SCUART_SetLineConfig) refers to scuart.o(.text.SCUART_GetClock) for SCUART_GetClock
    scuart.o(.ARM.exidx.text.SCUART_SetLineConfig) refers to scuart.o(.text.SCUART_SetLineConfig) for [Anonymous Symbol]
    scuart.o(.ARM.exidx.text.SCUART_SetTimeoutCnt) refers to scuart.o(.text.SCUART_SetTimeoutCnt) for [Anonymous Symbol]
    scuart.o(.text.SCUART_Write) refers to scuart.o(.text.SCUART_GetClock) for SCUART_GetClock
    scuart.o(.text.SCUART_Write) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    scuart.o(.text.SCUART_Write) refers to scuart.o(.bss.g_SCUART_i32ErrCode) for g_SCUART_i32ErrCode
    scuart.o(.ARM.exidx.text.SCUART_Write) refers to scuart.o(.text.SCUART_Write) for [Anonymous Symbol]
    spi.o(.text.SPI_Open) refers to clk.o(.text.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    spi.o(.text.SPI_Open) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(.text.SPI_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    spi.o(.ARM.exidx.text.SPI_Open) refers to spi.o(.text.SPI_Open) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_Close) refers to spi.o(.text.SPI_Close) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_ClearRxFIFO) refers to spi.o(.text.SPI_ClearRxFIFO) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_ClearTxFIFO) refers to spi.o(.text.SPI_ClearTxFIFO) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_DisableAutoSS) refers to spi.o(.text.SPI_DisableAutoSS) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_EnableAutoSS) refers to spi.o(.text.SPI_EnableAutoSS) for [Anonymous Symbol]
    spi.o(.text.SPI_SetBusClock) refers to clk.o(.text.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    spi.o(.text.SPI_SetBusClock) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(.text.SPI_SetBusClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    spi.o(.ARM.exidx.text.SPI_SetBusClock) refers to spi.o(.text.SPI_SetBusClock) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_SetFIFO) refers to spi.o(.text.SPI_SetFIFO) for [Anonymous Symbol]
    spi.o(.text.SPI_GetBusClock) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(.text.SPI_GetBusClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    spi.o(.ARM.exidx.text.SPI_GetBusClock) refers to spi.o(.text.SPI_GetBusClock) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_EnableInt) refers to spi.o(.text.SPI_EnableInt) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_DisableInt) refers to spi.o(.text.SPI_DisableInt) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_GetIntFlag) refers to spi.o(.text.SPI_GetIntFlag) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_ClearIntFlag) refers to spi.o(.text.SPI_ClearIntFlag) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_GetStatus) refers to spi.o(.text.SPI_GetStatus) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_GetStatus2) refers to spi.o(.text.SPI_GetStatus2) for [Anonymous Symbol]
    spi.o(.text.SPII2S_Open) refers to spi.o(.text.SPII2S_GetSourceClockFreq) for SPII2S_GetSourceClockFreq
    spi.o(.text.SPII2S_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    spi.o(.ARM.exidx.text.SPII2S_Open) refers to spi.o(.text.SPII2S_Open) for [Anonymous Symbol]
    spi.o(.text.SPII2S_GetSourceClockFreq) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(.text.SPII2S_GetSourceClockFreq) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    spi.o(.ARM.exidx.text.SPII2S_GetSourceClockFreq) refers to spi.o(.text.SPII2S_GetSourceClockFreq) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPII2S_Close) refers to spi.o(.text.SPII2S_Close) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPII2S_EnableInt) refers to spi.o(.text.SPII2S_EnableInt) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPII2S_DisableInt) refers to spi.o(.text.SPII2S_DisableInt) for [Anonymous Symbol]
    spi.o(.text.SPII2S_EnableMCLK) refers to spi.o(.text.SPII2S_GetSourceClockFreq) for SPII2S_GetSourceClockFreq
    spi.o(.ARM.exidx.text.SPII2S_EnableMCLK) refers to spi.o(.text.SPII2S_EnableMCLK) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPII2S_DisableMCLK) refers to spi.o(.text.SPII2S_DisableMCLK) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPII2S_SetFIFO) refers to spi.o(.text.SPII2S_SetFIFO) for [Anonymous Symbol]
    timer.o(.text.TIMER_Open) refers to timer.o(.text.TIMER_GetModuleClock) for TIMER_GetModuleClock
    timer.o(.ARM.exidx.text.TIMER_Open) refers to timer.o(.text.TIMER_Open) for [Anonymous Symbol]
    timer.o(.text.TIMER_GetModuleClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_GetModuleClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.text.TIMER_GetModuleClock) refers to timer.o(.rodata.cst32) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_GetModuleClock) refers to timer.o(.text.TIMER_GetModuleClock) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_Close) refers to timer.o(.text.TIMER_Close) for [Anonymous Symbol]
    timer.o(.text.TIMER_Delay) refers to timer.o(.text.TIMER_GetModuleClock) for TIMER_GetModuleClock
    timer.o(.text.TIMER_Delay) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.ARM.exidx.text.TIMER_Delay) refers to timer.o(.text.TIMER_Delay) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableCapture) refers to timer.o(.text.TIMER_EnableCapture) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_CaptureSelect) refers to timer.o(.text.TIMER_CaptureSelect) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableCapture) refers to timer.o(.text.TIMER_DisableCapture) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_SetTriggerSource) refers to timer.o(.text.TIMER_SetTriggerSource) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_SetTriggerTarget) refers to timer.o(.text.TIMER_SetTriggerTarget) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableEventCounter) refers to timer.o(.text.TIMER_EnableEventCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableEventCounter) refers to timer.o(.text.TIMER_DisableEventCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableFreqCounter) refers to timer.o(.text.TIMER_EnableFreqCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableFreqCounter) refers to timer.o(.text.TIMER_DisableFreqCounter) for [Anonymous Symbol]
    timer.o(.text.TIMER_ResetCounter) refers to timer.o(.text.TIMER_GetModuleClock) for TIMER_GetModuleClock
    timer.o(.text.TIMER_ResetCounter) refers to system_m251.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.ARM.exidx.text.TIMER_ResetCounter) refers to timer.o(.text.TIMER_ResetCounter) for [Anonymous Symbol]
    timer_pwm.o(.text.TPWM_ConfigOutputFreqAndDuty) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer_pwm.o(.text.TPWM_ConfigOutputFreqAndDuty) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer_pwm.o(.ARM.exidx.text.TPWM_ConfigOutputFreqAndDuty) refers to timer_pwm.o(.text.TPWM_ConfigOutputFreqAndDuty) for [Anonymous Symbol]
    timer_pwm.o(.ARM.exidx.text.TPWM_EnableCounter) refers to timer_pwm.o(.text.TPWM_EnableCounter) for [Anonymous Symbol]
    timer_pwm.o(.ARM.exidx.text.TPWM_DisableCounter) refers to timer_pwm.o(.text.TPWM_DisableCounter) for [Anonymous Symbol]
    timer_pwm.o(.ARM.exidx.text.TPWM_EnableTrigger) refers to timer_pwm.o(.text.TPWM_EnableTrigger) for [Anonymous Symbol]
    timer_pwm.o(.ARM.exidx.text.TPWM_DisableTrigger) refers to timer_pwm.o(.text.TPWM_DisableTrigger) for [Anonymous Symbol]
    usbd.o(.text.USBD_Open) refers to usbd.o(.bss.g_USBD_sINFO) for g_USBD_sINFO
    usbd.o(.text.USBD_Open) refers to usbd.o(.bss.g_USBD_pfnClassRequest) for g_USBD_pfnClassRequest
    usbd.o(.text.USBD_Open) refers to usbd.o(.bss.g_USBD_pfnSetInterface) for g_USBD_pfnSetInterface
    usbd.o(.text.USBD_Open) refers to usbd.o(.data.s_USBD_u32CtrlMaxPktSize) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_Open) refers to usbd.o(.text.USBD_Open) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_Start) refers to usbd.o(.text.USBD_Start) for [Anonymous Symbol]
    usbd.o(.text.USBD_GetSetupPacket) refers to usbd.o(.text.USBD_MemCopy) for USBD_MemCopy
    usbd.o(.text.USBD_GetSetupPacket) refers to usbd.o(.bss.g_USBD_au8SetupPacket) for g_USBD_au8SetupPacket
    usbd.o(.ARM.exidx.text.USBD_GetSetupPacket) refers to usbd.o(.text.USBD_GetSetupPacket) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_MemCopy) refers to usbd.o(.text.USBD_MemCopy) for [Anonymous Symbol]
    usbd.o(.text.USBD_ProcessSetupPacket) refers to usbd.o(.text.USBD_MemCopy) for USBD_MemCopy
    usbd.o(.text.USBD_ProcessSetupPacket) refers to usbd.o(.text.USBD_StandardRequest) for USBD_StandardRequest
    usbd.o(.text.USBD_ProcessSetupPacket) refers to usbd.o(.bss.s_USBD_u32CtrlOutToggle) for [Anonymous Symbol]
    usbd.o(.text.USBD_ProcessSetupPacket) refers to usbd.o(.bss.g_USBD_au8SetupPacket) for g_USBD_au8SetupPacket
    usbd.o(.text.USBD_ProcessSetupPacket) refers to usbd.o(.bss.g_USBD_pfnVendorRequest) for g_USBD_pfnVendorRequest
    usbd.o(.text.USBD_ProcessSetupPacket) refers to usbd.o(.bss.g_USBD_pfnClassRequest) for g_USBD_pfnClassRequest
    usbd.o(.ARM.exidx.text.USBD_ProcessSetupPacket) refers to usbd.o(.text.USBD_ProcessSetupPacket) for [Anonymous Symbol]
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.text.USBD_PrepareCtrlOut) for USBD_PrepareCtrlOut
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.text.USBD_GetDescriptor) for USBD_GetDescriptor
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.text.USBD_GetStall) for USBD_GetStall
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.text.USBD_SetStall) for USBD_SetStall
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.s_USBD_pu8CtrlInPointer) for [Anonymous Symbol]
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.s_USBD_u32CtrlInSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.g_USBD_au8SetupPacket) for g_USBD_au8SetupPacket
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.s_USBD_u32UsbAltInterface) for [Anonymous Symbol]
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.g_USBD_pfnSetInterface) for g_USBD_pfnSetInterface
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.g_USBD_u8RemoteWakeupEn) for g_USBD_u8RemoteWakeupEn
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.s_USBD_u32UsbConfig) for [Anonymous Symbol]
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.g_USBD_pfnSetConfigCallback) for g_USBD_pfnSetConfigCallback
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.s_USBD_u32UsbAddr) for [Anonymous Symbol]
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.g_USBD_u32EpStallLock) for g_USBD_u32EpStallLock
    usbd.o(.text.USBD_StandardRequest) refers to usbd.o(.bss.g_USBD_sINFO) for g_USBD_sINFO
    usbd.o(.ARM.exidx.text.USBD_StandardRequest) refers to usbd.o(.text.USBD_StandardRequest) for [Anonymous Symbol]
    usbd.o(.text.USBD_GetDescriptor) refers to usbd.o(.text.USBD_PrepareCtrlIn) for USBD_PrepareCtrlIn
    usbd.o(.text.USBD_GetDescriptor) refers to usbd.o(.bss.s_USBD_u8CtrlInZeroFlag) for [Anonymous Symbol]
    usbd.o(.text.USBD_GetDescriptor) refers to usbd.o(.bss.g_USBD_au8SetupPacket) for g_USBD_au8SetupPacket
    usbd.o(.text.USBD_GetDescriptor) refers to usbd.o(.bss.g_USBD_sINFO) for g_USBD_sINFO
    usbd.o(.text.USBD_GetDescriptor) refers to usbd.o(.data.s_USBD_u32CtrlMaxPktSize) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_GetDescriptor) refers to usbd.o(.text.USBD_GetDescriptor) for [Anonymous Symbol]
    usbd.o(.text.USBD_PrepareCtrlIn) refers to usbd.o(.text.USBD_MemCopy) for USBD_MemCopy
    usbd.o(.text.USBD_PrepareCtrlIn) refers to usbd.o(.data.s_USBD_u32CtrlMaxPktSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_PrepareCtrlIn) refers to usbd.o(.bss.s_USBD_pu8CtrlInPointer) for [Anonymous Symbol]
    usbd.o(.text.USBD_PrepareCtrlIn) refers to usbd.o(.bss.s_USBD_u32CtrlInSize) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_PrepareCtrlIn) refers to usbd.o(.text.USBD_PrepareCtrlIn) for [Anonymous Symbol]
    usbd.o(.text.USBD_PrepareCtrlOut) refers to usbd.o(.bss.s_USBD_pu8CtrlOutPointer) for [Anonymous Symbol]
    usbd.o(.text.USBD_PrepareCtrlOut) refers to usbd.o(.bss.s_USBD_u32CtrlOutSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_PrepareCtrlOut) refers to usbd.o(.bss.s_USBD_u32CtrlOutSizeLimit) for [Anonymous Symbol]
    usbd.o(.text.USBD_PrepareCtrlOut) refers to usbd.o(.data.s_USBD_u32CtrlMaxPktSize) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_PrepareCtrlOut) refers to usbd.o(.text.USBD_PrepareCtrlOut) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_GetStall) refers to usbd.o(.text.USBD_GetStall) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_SetStall) refers to usbd.o(.text.USBD_SetStall) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlIn) refers to usbd.o(.text.USBD_MemCopy) for USBD_MemCopy
    usbd.o(.text.USBD_CtrlIn) refers to usbd.o(.bss.s_USBD_u32CtrlInSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlIn) refers to usbd.o(.bss.g_USBD_au8SetupPacket) for g_USBD_au8SetupPacket
    usbd.o(.text.USBD_CtrlIn) refers to usbd.o(.bss.s_USBD_u32UsbAddr) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlIn) refers to usbd.o(.bss.s_USBD_u8CtrlInZeroFlag) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlIn) refers to usbd.o(.data.s_USBD_u32CtrlMaxPktSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlIn) refers to usbd.o(.bss.s_USBD_pu8CtrlInPointer) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_CtrlIn) refers to usbd.o(.text.USBD_CtrlIn) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlOut) refers to usbd.o(.text.USBD_MemCopy) for USBD_MemCopy
    usbd.o(.text.USBD_CtrlOut) refers to usbd.o(.bss.s_USBD_u32CtrlOutToggle) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlOut) refers to usbd.o(.data.s_USBD_u32CtrlMaxPktSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlOut) refers to usbd.o(.bss.s_USBD_u32CtrlOutSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlOut) refers to usbd.o(.bss.s_USBD_u32CtrlOutSizeLimit) for [Anonymous Symbol]
    usbd.o(.text.USBD_CtrlOut) refers to usbd.o(.bss.s_USBD_pu8CtrlOutPointer) for [Anonymous Symbol]
    usbd.o(.ARM.exidx.text.USBD_CtrlOut) refers to usbd.o(.text.USBD_CtrlOut) for [Anonymous Symbol]
    usbd.o(.text.USBD_SwReset) refers to usbd.o(.bss.s_USBD_pu8CtrlInPointer) for [Anonymous Symbol]
    usbd.o(.text.USBD_SwReset) refers to usbd.o(.bss.s_USBD_u32CtrlInSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_SwReset) refers to usbd.o(.bss.s_USBD_pu8CtrlOutPointer) for [Anonymous Symbol]
    usbd.o(.text.USBD_SwReset) refers to usbd.o(.bss.s_USBD_u32CtrlOutSize) for [Anonymous Symbol]
    usbd.o(.text.USBD_SwReset) refers to usbd.o(.bss.s_USBD_u32CtrlOutSizeLimit) for [Anonymous Symbol]
    usbd.o(.text.USBD_SwReset) refers to usbd.o(.bss.g_USBD_u32EpStallLock) for g_USBD_u32EpStallLock
    usbd.o(.text.USBD_SwReset) refers to usbd.o(.bss.g_USBD_au8SetupPacket) for g_USBD_au8SetupPacket
    usbd.o(.ARM.exidx.text.USBD_SwReset) refers to usbd.o(.text.USBD_SwReset) for [Anonymous Symbol]
    usbd.o(.text.USBD_SetVendorRequest) refers to usbd.o(.bss.g_USBD_pfnVendorRequest) for g_USBD_pfnVendorRequest
    usbd.o(.ARM.exidx.text.USBD_SetVendorRequest) refers to usbd.o(.text.USBD_SetVendorRequest) for [Anonymous Symbol]
    usbd.o(.text.USBD_SetConfigCallback) refers to usbd.o(.bss.g_USBD_pfnSetConfigCallback) for g_USBD_pfnSetConfigCallback
    usbd.o(.ARM.exidx.text.USBD_SetConfigCallback) refers to usbd.o(.text.USBD_SetConfigCallback) for [Anonymous Symbol]
    usbd.o(.text.USBD_LockEpStall) refers to usbd.o(.bss.g_USBD_u32EpStallLock) for g_USBD_u32EpStallLock
    usbd.o(.ARM.exidx.text.USBD_LockEpStall) refers to usbd.o(.text.USBD_LockEpStall) for [Anonymous Symbol]
    usci_i2c.o(.text.UI2C_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    usci_i2c.o(.text.UI2C_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    usci_i2c.o(.ARM.exidx.text.UI2C_Open) refers to usci_i2c.o(.text.UI2C_Open) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_Close) refers to usci_i2c.o(.text.UI2C_Close) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_ClearTimeoutFlag) refers to usci_i2c.o(.text.UI2C_ClearTimeoutFlag) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_Trigger) refers to usci_i2c.o(.text.UI2C_Trigger) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_DisableInt) refers to usci_i2c.o(.text.UI2C_DisableInt) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_EnableInt) refers to usci_i2c.o(.text.UI2C_EnableInt) for [Anonymous Symbol]
    usci_i2c.o(.text.UI2C_GetBusClockFreq) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    usci_i2c.o(.text.UI2C_GetBusClockFreq) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    usci_i2c.o(.ARM.exidx.text.UI2C_GetBusClockFreq) refers to usci_i2c.o(.text.UI2C_GetBusClockFreq) for [Anonymous Symbol]
    usci_i2c.o(.text.UI2C_SetBusClockFreq) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    usci_i2c.o(.text.UI2C_SetBusClockFreq) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    usci_i2c.o(.ARM.exidx.text.UI2C_SetBusClockFreq) refers to usci_i2c.o(.text.UI2C_SetBusClockFreq) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_GetIntFlag) refers to usci_i2c.o(.text.UI2C_GetIntFlag) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_ClearIntFlag) refers to usci_i2c.o(.text.UI2C_ClearIntFlag) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_GetData) refers to usci_i2c.o(.text.UI2C_GetData) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_SetData) refers to usci_i2c.o(.text.UI2C_SetData) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_SetSlaveAddr) refers to usci_i2c.o(.text.UI2C_SetSlaveAddr) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_SetSlaveAddrMask) refers to usci_i2c.o(.text.UI2C_SetSlaveAddrMask) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_EnableTimeout) refers to usci_i2c.o(.text.UI2C_EnableTimeout) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_DisableTimeout) refers to usci_i2c.o(.text.UI2C_DisableTimeout) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_EnableWakeup) refers to usci_i2c.o(.text.UI2C_EnableWakeup) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_DisableWakeup) refers to usci_i2c.o(.text.UI2C_DisableWakeup) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_WriteByte) refers to usci_i2c.o(.text.UI2C_WriteByte) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_WriteMultiBytes) refers to usci_i2c.o(.text.UI2C_WriteMultiBytes) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_WriteByteOneReg) refers to usci_i2c.o(.text.UI2C_WriteByteOneReg) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_WriteMultiBytesOneReg) refers to usci_i2c.o(.text.UI2C_WriteMultiBytesOneReg) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_WriteByteTwoRegs) refers to usci_i2c.o(.text.UI2C_WriteByteTwoRegs) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_WriteMultiBytesTwoRegs) refers to usci_i2c.o(.text.UI2C_WriteMultiBytesTwoRegs) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_ReadByte) refers to usci_i2c.o(.text.UI2C_ReadByte) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_ReadMultiBytes) refers to usci_i2c.o(.text.UI2C_ReadMultiBytes) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_ReadByteOneReg) refers to usci_i2c.o(.text.UI2C_ReadByteOneReg) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_ReadMultiBytesOneReg) refers to usci_i2c.o(.text.UI2C_ReadMultiBytesOneReg) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_ReadByteTwoRegs) refers to usci_i2c.o(.text.UI2C_ReadByteTwoRegs) for [Anonymous Symbol]
    usci_i2c.o(.ARM.exidx.text.UI2C_ReadMultiBytesTwoRegs) refers to usci_i2c.o(.text.UI2C_ReadMultiBytesTwoRegs) for [Anonymous Symbol]
    usci_spi.o(.text.USPI_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    usci_spi.o(.text.USPI_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    usci_spi.o(.ARM.exidx.text.USPI_Open) refers to usci_spi.o(.text.USPI_Open) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_Close) refers to usci_spi.o(.text.USPI_Close) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_ClearRxBuf) refers to usci_spi.o(.text.USPI_ClearRxBuf) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_ClearTxBuf) refers to usci_spi.o(.text.USPI_ClearTxBuf) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_DisableAutoSS) refers to usci_spi.o(.text.USPI_DisableAutoSS) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_EnableAutoSS) refers to usci_spi.o(.text.USPI_EnableAutoSS) for [Anonymous Symbol]
    usci_spi.o(.text.USPI_SetBusClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    usci_spi.o(.text.USPI_SetBusClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    usci_spi.o(.ARM.exidx.text.USPI_SetBusClock) refers to usci_spi.o(.text.USPI_SetBusClock) for [Anonymous Symbol]
    usci_spi.o(.text.USPI_GetBusClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    usci_spi.o(.text.USPI_GetBusClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    usci_spi.o(.ARM.exidx.text.USPI_GetBusClock) refers to usci_spi.o(.text.USPI_GetBusClock) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_EnableInt) refers to usci_spi.o(.text.USPI_EnableInt) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_DisableInt) refers to usci_spi.o(.text.USPI_DisableInt) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_GetIntFlag) refers to usci_spi.o(.text.USPI_GetIntFlag) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_ClearIntFlag) refers to usci_spi.o(.text.USPI_ClearIntFlag) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_GetStatus) refers to usci_spi.o(.text.USPI_GetStatus) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_EnableWakeup) refers to usci_spi.o(.text.USPI_EnableWakeup) for [Anonymous Symbol]
    usci_spi.o(.ARM.exidx.text.USPI_DisableWakeup) refers to usci_spi.o(.text.USPI_DisableWakeup) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_ClearIntFlag) refers to usci_uart.o(.text.UUART_ClearIntFlag) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_GetIntFlag) refers to usci_uart.o(.text.UUART_GetIntFlag) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_Close) refers to usci_uart.o(.text.UUART_Close) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_DisableInt) refers to usci_uart.o(.text.UUART_DisableInt) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_EnableInt) refers to usci_uart.o(.text.UUART_EnableInt) for [Anonymous Symbol]
    usci_uart.o(.text.UUART_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    usci_uart.o(.text.UUART_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    usci_uart.o(.text.UUART_Open) refers to siabs.o(.text) for abs
    usci_uart.o(.ARM.exidx.text.UUART_Open) refers to usci_uart.o(.text.UUART_Open) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_Read) refers to usci_uart.o(.text.UUART_Read) for [Anonymous Symbol]
    usci_uart.o(.text.UUART_SetLine_Config) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    usci_uart.o(.text.UUART_SetLine_Config) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    usci_uart.o(.text.UUART_SetLine_Config) refers to siabs.o(.text) for abs
    usci_uart.o(.ARM.exidx.text.UUART_SetLine_Config) refers to usci_uart.o(.text.UUART_SetLine_Config) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_Write) refers to usci_uart.o(.text.UUART_Write) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_EnableWakeup) refers to usci_uart.o(.text.UUART_EnableWakeup) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_DisableWakeup) refers to usci_uart.o(.text.UUART_DisableWakeup) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_EnableFlowCtrl) refers to usci_uart.o(.text.UUART_EnableFlowCtrl) for [Anonymous Symbol]
    usci_uart.o(.ARM.exidx.text.UUART_DisableFlowCtrl) refers to usci_uart.o(.text.UUART_DisableFlowCtrl) for [Anonymous Symbol]
    wdt.o(.ARM.exidx.text.WDT_Open) refers to wdt.o(.text.WDT_Open) for [Anonymous Symbol]
    wwdt.o(.ARM.exidx.text.WWDT_Open) refers to wwdt.o(.text.WWDT_Open) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSerialWriteRegister) refers to wit_c_sdk.o(.bss.p_WitSerialWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitSerialWriteRegister) refers to wit_c_sdk.o(.text.WitSerialWriteRegister) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSerialDataIn) refers to memcpya.o(.text) for __aeabi_memcpy
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.text.__CaliSum) for __CaliSum
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.text.CopeWitData) for CopeWitData
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.text.__CRC16) for __CRC16
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.bss.p_WitRegUpdateCbFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.bss.s_uiWitDataCnt) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.bss.s_ucWitDataBuff) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.bss.s_uiReadRegIndex) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSerialDataIn) refers to wit_c_sdk.o(.bss.sReg) for sReg
    wit_c_sdk.o(.ARM.exidx.text.WitSerialDataIn) refers to wit_c_sdk.o(.text.WitSerialDataIn) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.__CaliSum) refers to wit_c_sdk.o(.text.__CaliSum) for [Anonymous Symbol]
    wit_c_sdk.o(.text.CopeWitData) refers to memcpya.o(.text) for __aeabi_memcpy
    wit_c_sdk.o(.text.CopeWitData) refers to wit_c_sdk.o(.bss.s_uiReadRegIndex) for [Anonymous Symbol]
    wit_c_sdk.o(.text.CopeWitData) refers to wit_c_sdk.o(.bss.sReg) for sReg
    wit_c_sdk.o(.text.CopeWitData) refers to wit_c_sdk.o(.bss.p_WitRegUpdateCbFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.CopeWitData) refers to wit_c_sdk.o(.text.CopeWitData) for [Anonymous Symbol]
    wit_c_sdk.o(.text.__CRC16) refers to wit_c_sdk.o(.rodata.__auchCRCHi) for [Anonymous Symbol]
    wit_c_sdk.o(.text.__CRC16) refers to wit_c_sdk.o(.rodata.__auchCRCLo) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.__CRC16) refers to wit_c_sdk.o(.text.__CRC16) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitI2cFuncRegister) refers to wit_c_sdk.o(.bss.p_WitI2cWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitI2cFuncRegister) refers to wit_c_sdk.o(.bss.p_WitI2cReadFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitI2cFuncRegister) refers to wit_c_sdk.o(.text.WitI2cFuncRegister) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitCanWriteRegister) refers to wit_c_sdk.o(.bss.p_WitCanWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitCanWriteRegister) refers to wit_c_sdk.o(.text.WitCanWriteRegister) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitCanDataIn) refers to wit_c_sdk.o(.text.CopeWitData) for CopeWitData
    wit_c_sdk.o(.text.WitCanDataIn) refers to wit_c_sdk.o(.bss.p_WitRegUpdateCbFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitCanDataIn) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitCanDataIn) refers to wit_c_sdk.o(.text.WitCanDataIn) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitRegisterCallBack) refers to wit_c_sdk.o(.bss.p_WitRegUpdateCbFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitRegisterCallBack) refers to wit_c_sdk.o(.text.WitRegisterCallBack) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitWriteReg) refers to wit_c_sdk.o(.text.__CRC16) for __CRC16
    wit_c_sdk.o(.text.WitWriteReg) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitWriteReg) refers to wit_c_sdk.o(.bss.p_WitI2cWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitWriteReg) refers to wit_c_sdk.o(.data.s_ucAddr) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitWriteReg) refers to wit_c_sdk.o(.bss.p_WitCanWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitWriteReg) refers to wit_c_sdk.o(.bss.p_WitSerialWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitWriteReg) refers to wit_c_sdk.o(.text.WitWriteReg) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.text.__CRC16) for __CRC16
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.bss.p_WitI2cReadFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.data.s_ucAddr) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.bss.s_ucWitDataBuff) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.bss.p_WitRegUpdateCbFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.bss.sReg) for sReg
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.bss.p_WitCanWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.bss.p_WitSerialWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitReadReg) refers to wit_c_sdk.o(.bss.s_uiReadRegIndex) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitReadReg) refers to wit_c_sdk.o(.text.WitReadReg) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitInit) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitInit) refers to wit_c_sdk.o(.data.s_ucAddr) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitInit) refers to wit_c_sdk.o(.bss.s_uiWitDataCnt) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitInit) refers to wit_c_sdk.o(.text.WitInit) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDeInit) refers to wit_c_sdk.o(.bss.p_WitSerialWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDeInit) refers to wit_c_sdk.o(.bss.p_WitI2cWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDeInit) refers to wit_c_sdk.o(.bss.p_WitI2cReadFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDeInit) refers to wit_c_sdk.o(.bss.p_WitCanWriteFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDeInit) refers to wit_c_sdk.o(.bss.p_WitRegUpdateCbFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDeInit) refers to wit_c_sdk.o(.data.s_ucAddr) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDeInit) refers to wit_c_sdk.o(.bss.s_uiWitDataCnt) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDeInit) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitDeInit) refers to wit_c_sdk.o(.text.WitDeInit) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitDelayMsRegister) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitDelayMsRegister) refers to wit_c_sdk.o(.text.WitDelayMsRegister) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.CheckRange) refers to wit_c_sdk.o(.text.CheckRange) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitStartAccCali) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitStartAccCali) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitStartAccCali) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitStartAccCali) refers to wit_c_sdk.o(.text.WitStartAccCali) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitStopAccCali) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitStopAccCali) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitStopAccCali) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitStopAccCali) refers to wit_c_sdk.o(.text.WitStopAccCali) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitStartMagCali) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitStartMagCali) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitStartMagCali) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitStartMagCali) refers to wit_c_sdk.o(.text.WitStartMagCali) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitStopMagCali) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitStopMagCali) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitStopMagCali) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitStopMagCali) refers to wit_c_sdk.o(.text.WitStopMagCali) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetUartBaud) refers to wit_c_sdk.o(.text.CheckRange) for CheckRange
    wit_c_sdk.o(.text.WitSetUartBaud) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitSetUartBaud) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetUartBaud) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitSetUartBaud) refers to wit_c_sdk.o(.text.WitSetUartBaud) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetCanBaud) refers to wit_c_sdk.o(.text.CheckRange) for CheckRange
    wit_c_sdk.o(.text.WitSetCanBaud) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitSetCanBaud) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetCanBaud) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitSetCanBaud) refers to wit_c_sdk.o(.text.WitSetCanBaud) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetBandwidth) refers to wit_c_sdk.o(.text.CheckRange) for CheckRange
    wit_c_sdk.o(.text.WitSetBandwidth) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitSetBandwidth) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetBandwidth) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitSetBandwidth) refers to wit_c_sdk.o(.text.WitSetBandwidth) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetOutputRate) refers to wit_c_sdk.o(.text.CheckRange) for CheckRange
    wit_c_sdk.o(.text.WitSetOutputRate) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitSetOutputRate) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetOutputRate) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitSetOutputRate) refers to wit_c_sdk.o(.text.WitSetOutputRate) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetContent) refers to wit_c_sdk.o(.text.CheckRange) for CheckRange
    wit_c_sdk.o(.text.WitSetContent) refers to wit_c_sdk.o(.text.WitWriteReg) for WitWriteReg
    wit_c_sdk.o(.text.WitSetContent) refers to wit_c_sdk.o(.bss.s_uiProtoclo) for [Anonymous Symbol]
    wit_c_sdk.o(.text.WitSetContent) refers to wit_c_sdk.o(.bss.p_WitDelaymsFunc) for [Anonymous Symbol]
    wit_c_sdk.o(.ARM.exidx.text.WitSetContent) refers to wit_c_sdk.o(.text.WitSetContent) for [Anonymous Symbol]
    main.o(.text.System_Init) refers to main.o(.text.SYS_UnlockReg) for SYS_UnlockReg
    main.o(.text.System_Init) refers to clk_conf.o(.text.Clock_Init) for Clock_Init
    main.o(.text.System_Init) refers to pin_conf.o(.text.Pin_Init) for Pin_Init
    main.o(.text.System_Init) refers to periph_conf.o(.text.Periph_Init) for Periph_Init
    main.o(.text.System_Init) refers to main.o(.text.SYS_LockReg) for SYS_LockReg
    main.o(.ARM.exidx.text.System_Init) refers to main.o(.text.System_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.SYS_UnlockReg) refers to main.o(.text.SYS_UnlockReg) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.SYS_LockReg) refers to main.o(.text.SYS_LockReg) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.System_Init) for System_Init
    main.o(.text.main) refers to main.o(.text.Write_Data_Modbus) for Write_Data_Modbus
    main.o(.text.main) refers to main.o(.text.delay) for delay
    main.o(.text.main) refers to wit_c_sdk.o(.text.WitInit) for WitInit
    main.o(.text.main) refers to wit_c_sdk.o(.text.WitSerialWriteRegister) for WitSerialWriteRegister
    main.o(.text.main) refers to wit_c_sdk.o(.text.WitRegisterCallBack) for WitRegisterCallBack
    main.o(.text.main) refers to wit_c_sdk.o(.text.WitDelayMsRegister) for WitDelayMsRegister
    main.o(.text.main) refers to timer.o(.text.TIMER_Delay) for TIMER_Delay
    main.o(.text.main) refers to main.o(.data.CTRL_CMD) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.data.ACC_ADDR) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.data.DEC_ADDR) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.SensorUartSend) for SensorUartSend
    main.o(.text.main) refers to main.o(.text.SensorDataUpdata) for SensorDataUpdata
    main.o(.text.main) refers to main.o(.text.Delayms) for Delayms
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.Write_Data_Modbus) refers to main.o(.text.crc16) for crc16
    main.o(.text.Write_Data_Modbus) refers to uart.o(.text.UART_Write) for UART_Write
    main.o(.text.Write_Data_Modbus) refers to timer.o(.text.TIMER_Delay) for TIMER_Delay
    main.o(.ARM.exidx.text.Write_Data_Modbus) refers to main.o(.text.Write_Data_Modbus) for [Anonymous Symbol]
    main.o(.text.delay) refers to timer.o(.text.TIMER_Delay) for TIMER_Delay
    main.o(.ARM.exidx.text.delay) refers to main.o(.text.delay) for [Anonymous Symbol]
    main.o(.text.SensorUartSend) refers to uart.o(.text.UART_Write) for UART_Write
    main.o(.ARM.exidx.text.SensorUartSend) refers to main.o(.text.SensorUartSend) for [Anonymous Symbol]
    main.o(.text.SensorDataUpdata) refers to main.o(.bss.s_cDataUpdate) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.SensorDataUpdata) refers to main.o(.text.SensorDataUpdata) for [Anonymous Symbol]
    main.o(.text.Delayms) refers to timer.o(.text.TIMER_Delay) for TIMER_Delay
    main.o(.ARM.exidx.text.Delayms) refers to main.o(.text.Delayms) for [Anonymous Symbol]
    main.o(.text.crc16) refers to main.o(.rodata.table_crc_hi) for [Anonymous Symbol]
    main.o(.text.crc16) refers to main.o(.rodata.table_crc_lo) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.crc16) refers to main.o(.text.crc16) for [Anonymous Symbol]
    clk_conf.o(.text.Clock_Init) refers to clk.o(.text.CLK_EnableXtalRC) for CLK_EnableXtalRC
    clk_conf.o(.text.Clock_Init) refers to clk.o(.text.CLK_WaitClockReady) for CLK_WaitClockReady
    clk_conf.o(.text.Clock_Init) refers to clk.o(.text.CLK_SetHCLK) for CLK_SetHCLK
    clk_conf.o(.text.Clock_Init) refers to clk.o(.text.CLK_EnableModuleClock) for CLK_EnableModuleClock
    clk_conf.o(.text.Clock_Init) refers to clk.o(.text.CLK_SetModuleClock) for CLK_SetModuleClock
    clk_conf.o(.text.Clock_Init) refers to system_m251.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk_conf.o(.ARM.exidx.text.Clock_Init) refers to clk_conf.o(.text.Clock_Init) for [Anonymous Symbol]
    periph_conf.o(.ARM.exidx.text.GPIO_Init) refers to periph_conf.o(.text.GPIO_Init) for [Anonymous Symbol]
    periph_conf.o(.text.UART0_Init) refers to uart.o(.text.UART_Open) for UART_Open
    periph_conf.o(.text.UART0_Init) refers to uart.o(.text.UART_EnableInt) for UART_EnableInt
    periph_conf.o(.text.UART0_Init) refers to periph_conf.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    periph_conf.o(.ARM.exidx.text.UART0_Init) refers to periph_conf.o(.text.UART0_Init) for [Anonymous Symbol]
    periph_conf.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to periph_conf.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    periph_conf.o(.text.UART1_Init) refers to uart.o(.text.UART_Open) for UART_Open
    periph_conf.o(.ARM.exidx.text.UART1_Init) refers to periph_conf.o(.text.UART1_Init) for [Anonymous Symbol]
    periph_conf.o(.text.UART2_Init) refers to uart.o(.text.UART_Open) for UART_Open
    periph_conf.o(.text.UART2_Init) refers to uart.o(.text.UART_EnableInt) for UART_EnableInt
    periph_conf.o(.text.UART2_Init) refers to periph_conf.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    periph_conf.o(.ARM.exidx.text.UART2_Init) refers to periph_conf.o(.text.UART2_Init) for [Anonymous Symbol]
    periph_conf.o(.text.Periph_Init) refers to periph_conf.o(.text.UART0_Init) for UART0_Init
    periph_conf.o(.text.Periph_Init) refers to periph_conf.o(.text.UART1_Init) for UART1_Init
    periph_conf.o(.text.Periph_Init) refers to periph_conf.o(.text.UART2_Init) for UART2_Init
    periph_conf.o(.text.Periph_Init) refers to periph_conf.o(.text.GPIO_Init) for GPIO_Init
    periph_conf.o(.ARM.exidx.text.Periph_Init) refers to periph_conf.o(.text.Periph_Init) for [Anonymous Symbol]
    pin_conf.o(.ARM.exidx.text.Pin_Init) refers to pin_conf.o(.text.Pin_Init) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to printfa.o(i.__0printf) for printf
    int_handler.o(.text.UART0_IRQHandler) refers to uart.o(.text.UART_ClearIntFlag) for UART_ClearIntFlag
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.text.robot_Run) for robot_Run
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.text.robot_Rotate) for robot_Rotate
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.text.robot_Stop) for robot_Stop
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.text.Write_Data_Modbus) for Write_Data_Modbus
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.rodata.str1.1) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.bss.fAngle) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.bss.offSet_z) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.data.SPEED_ADDR) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.bss.speed3) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.bss.speed2) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.bss.speed1) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.data.CTRL_CMD) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.bss.dir3) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.bss.dir2) for [Anonymous Symbol]
    int_handler.o(.text.UART0_IRQHandler) refers to int_handler.o(.bss.dir1) for [Anonymous Symbol]
    int_handler.o(.ARM.exidx.text.UART0_IRQHandler) refers to int_handler.o(.text.UART0_IRQHandler) for [Anonymous Symbol]
    int_handler.o(.text.robot_Run) refers to dflti.o(.text) for __aeabi_i2d
    int_handler.o(.text.robot_Run) refers to fflti.o(.text) for __aeabi_i2f
    int_handler.o(.text.robot_Run) refers to fmul.o(.text) for __aeabi_fmul
    int_handler.o(.text.robot_Run) refers to f2d.o(.text) for __aeabi_f2d
    int_handler.o(.text.robot_Run) refers to sin.o(i.sin) for sin
    int_handler.o(.text.robot_Run) refers to dmul.o(.text) for __aeabi_dmul
    int_handler.o(.text.robot_Run) refers to dadd.o(.text) for __aeabi_dadd
    int_handler.o(.text.robot_Run) refers to dfixi.o(.text) for __aeabi_d2iz
    int_handler.o(.text.robot_Run) refers to cos.o(i.cos) for cos
    int_handler.o(.text.robot_Run) refers to siabs.o(.text) for abs
    int_handler.o(.text.robot_Run) refers to int_handler.o(.bss.x) for [Anonymous Symbol]
    int_handler.o(.text.robot_Run) refers to int_handler.o(.bss.speed1) for [Anonymous Symbol]
    int_handler.o(.text.robot_Run) refers to int_handler.o(.bss.speed2) for [Anonymous Symbol]
    int_handler.o(.text.robot_Run) refers to int_handler.o(.bss.speed3) for [Anonymous Symbol]
    int_handler.o(.text.robot_Run) refers to int_handler.o(.bss.dir1) for [Anonymous Symbol]
    int_handler.o(.text.robot_Run) refers to int_handler.o(.bss.dir2) for [Anonymous Symbol]
    int_handler.o(.text.robot_Run) refers to int_handler.o(.bss.dir3) for [Anonymous Symbol]
    int_handler.o(.ARM.exidx.text.robot_Run) refers to int_handler.o(.text.robot_Run) for [Anonymous Symbol]
    int_handler.o(.text.robot_Rotate) refers to siabs.o(.text) for abs
    int_handler.o(.text.robot_Rotate) refers to int_handler.o(.bss.dir1) for [Anonymous Symbol]
    int_handler.o(.text.robot_Rotate) refers to int_handler.o(.bss.dir2) for [Anonymous Symbol]
    int_handler.o(.text.robot_Rotate) refers to int_handler.o(.bss.dir3) for [Anonymous Symbol]
    int_handler.o(.text.robot_Rotate) refers to int_handler.o(.bss.speed1) for [Anonymous Symbol]
    int_handler.o(.text.robot_Rotate) refers to int_handler.o(.bss.speed2) for [Anonymous Symbol]
    int_handler.o(.text.robot_Rotate) refers to int_handler.o(.bss.speed3) for [Anonymous Symbol]
    int_handler.o(.ARM.exidx.text.robot_Rotate) refers to int_handler.o(.text.robot_Rotate) for [Anonymous Symbol]
    int_handler.o(.text.robot_Stop) refers to int_handler.o(.text.Write_Data_Modbus) for Write_Data_Modbus
    int_handler.o(.text.robot_Stop) refers to int_handler.o(.bss.speed1) for [Anonymous Symbol]
    int_handler.o(.text.robot_Stop) refers to int_handler.o(.bss.speed2) for [Anonymous Symbol]
    int_handler.o(.text.robot_Stop) refers to int_handler.o(.bss.speed3) for [Anonymous Symbol]
    int_handler.o(.text.robot_Stop) refers to int_handler.o(.data.CTRL_CMD) for [Anonymous Symbol]
    int_handler.o(.text.robot_Stop) refers to int_handler.o(.data.SPEED_ADDR) for [Anonymous Symbol]
    int_handler.o(.ARM.exidx.text.robot_Stop) refers to int_handler.o(.text.robot_Stop) for [Anonymous Symbol]
    int_handler.o(.text.Write_Data_Modbus) refers to int_handler.o(.text.crc16) for crc16
    int_handler.o(.text.Write_Data_Modbus) refers to uart.o(.text.UART_Write) for UART_Write
    int_handler.o(.text.Write_Data_Modbus) refers to timer.o(.text.TIMER_Delay) for TIMER_Delay
    int_handler.o(.ARM.exidx.text.Write_Data_Modbus) refers to int_handler.o(.text.Write_Data_Modbus) for [Anonymous Symbol]
    int_handler.o(.text.UART2_IRQHandler) refers to wit_c_sdk.o(.text.WitSerialDataIn) for WitSerialDataIn
    int_handler.o(.text.UART2_IRQHandler) refers to fflti.o(.text) for __aeabi_i2f
    int_handler.o(.text.UART2_IRQHandler) refers to fdiv.o(.text) for __aeabi_fdiv
    int_handler.o(.text.UART2_IRQHandler) refers to fmul.o(.text) for __aeabi_fmul
    int_handler.o(.text.UART2_IRQHandler) refers to uart.o(.text.UART_ClearIntFlag) for UART_ClearIntFlag
    int_handler.o(.text.UART2_IRQHandler) refers to int_handler.o(.bss.s_cDataUpdate) for [Anonymous Symbol]
    int_handler.o(.text.UART2_IRQHandler) refers to wit_c_sdk.o(.bss.sReg) for sReg
    int_handler.o(.text.UART2_IRQHandler) refers to int_handler.o(.bss.fAcc) for [Anonymous Symbol]
    int_handler.o(.text.UART2_IRQHandler) refers to int_handler.o(.bss.fGyro) for [Anonymous Symbol]
    int_handler.o(.text.UART2_IRQHandler) refers to int_handler.o(.bss.fAngle) for [Anonymous Symbol]
    int_handler.o(.ARM.exidx.text.UART2_IRQHandler) refers to int_handler.o(.text.UART2_IRQHandler) for [Anonymous Symbol]
    int_handler.o(.text.crc16) refers to int_handler.o(.rodata.table_crc_hi) for [Anonymous Symbol]
    int_handler.o(.text.crc16) refers to int_handler.o(.rodata.table_crc_lo) for [Anonymous Symbol]
    int_handler.o(.ARM.exidx.text.crc16) refers to int_handler.o(.text.crc16) for [Anonymous Symbol]
    cos.o(i.__softfp_cos) refers (Special) to iusefp.o(.text) for __I$use$fp
    cos.o(i.__softfp_cos) refers to cos.o(i.cos) for cos
    cos.o(i.cos) refers (Special) to iusefp.o(.text) for __I$use$fp
    cos.o(i.cos) refers to errno.o(i.__set_errno) for __set_errno
    cos.o(i.cos) refers to dunder.o(i.__mathlib_dbl_invalid) for __mathlib_dbl_invalid
    cos.o(i.cos) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    cos.o(i.cos) refers to rred.o(i.__ieee754_rem_pio2) for __ieee754_rem_pio2
    cos.o(i.cos) refers to sin_i.o(i.__kernel_sin) for __kernel_sin
    cos.o(i.cos) refers to cos_i.o(i.__kernel_cos) for __kernel_cos
    sin.o(i.__softfp_sin) refers (Special) to iusefp.o(.text) for __I$use$fp
    sin.o(i.__softfp_sin) refers to sin.o(i.sin) for sin
    sin.o(i.sin) refers (Special) to iusefp.o(.text) for __I$use$fp
    sin.o(i.sin) refers to errno.o(i.__set_errno) for __set_errno
    sin.o(i.sin) refers to dunder.o(i.__mathlib_dbl_invalid) for __mathlib_dbl_invalid
    sin.o(i.sin) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    sin.o(i.sin) refers to rred.o(i.__ieee754_rem_pio2) for __ieee754_rem_pio2
    sin.o(i.sin) refers to cos_i.o(i.__kernel_cos) for __kernel_cos
    sin.o(i.sin) refers to sin_i.o(i.__kernel_sin) for __kernel_sin
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to retarget.o(.bss.__stdout) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to retarget.o(.bss.__stdout) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    cos_i.o(i.__kernel_cos) refers (Special) to iusefp.o(.text) for __I$use$fp
    cos_i.o(i.__kernel_cos) refers to dfixi.o(.text) for __aeabi_d2iz
    cos_i.o(i.__kernel_cos) refers to dmul.o(.text) for __aeabi_dmul
    cos_i.o(i.__kernel_cos) refers to poly.o(i.__kernel_poly) for __kernel_poly
    cos_i.o(i.__kernel_cos) refers to dadd.o(.text) for __aeabi_dsub
    cos_i.o(i.__kernel_cos) refers to dscalb.o(.text) for __ARM_scalbn
    cos_i.o(i.__kernel_cos) refers to cos_i.o(.constdata) for .constdata
    cos_i.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    dunder.o(i.__mathlib_dbl_divzero) refers to ddiv.o(.text) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_infnan) refers to dscalb.o(.text) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_infnan2) refers to dadd.o(.text) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_invalid) refers to ddiv.o(.text) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_overflow) refers to dscalb.o(.text) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_posinfnan) refers to dmul.o(.text) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_underflow) refers to dscalb.o(.text) for __ARM_scalbn
    rred.o(i.__ieee754_rem_pio2) refers (Special) to iusefp.o(.text) for __I$use$fp
    rred.o(i.__ieee754_rem_pio2) refers to dadd.o(.text) for __aeabi_dsub
    rred.o(i.__ieee754_rem_pio2) refers to dmul.o(.text) for __aeabi_dmul
    rred.o(i.__ieee754_rem_pio2) refers to dfixi.o(.text) for __aeabi_d2iz
    rred.o(i.__ieee754_rem_pio2) refers to dflti.o(.text) for __aeabi_i2d
    rred.o(i.__ieee754_rem_pio2) refers to rred.o(i.__ARM_common_ll_muluu) for __ARM_common_ll_muluu
    rred.o(i.__ieee754_rem_pio2) refers to dfltui.o(.text) for __aeabi_ui2d
    rred.o(i.__ieee754_rem_pio2) refers to dscalb.o(.text) for __ARM_scalbn
    rred.o(i.__ieee754_rem_pio2) refers to rred.o(.constdata) for .constdata
    rred.o(i.__use_accurate_range_reduction) refers (Special) to iusefp.o(.text) for __I$use$fp
    rred.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    sin_i.o(i.__kernel_sin) refers (Special) to iusefp.o(.text) for __I$use$fp
    sin_i.o(i.__kernel_sin) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    sin_i.o(i.__kernel_sin) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    sin_i.o(i.__kernel_sin) refers to dmul.o(.text) for __aeabi_dmul
    sin_i.o(i.__kernel_sin) refers to poly.o(i.__kernel_poly) for __kernel_poly
    sin_i.o(i.__kernel_sin) refers to dscalb.o(.text) for __ARM_scalbn
    sin_i.o(i.__kernel_sin) refers to dadd.o(.text) for __aeabi_dsub
    sin_i.o(i.__kernel_sin) refers to sin_i.o(.constdata) for .constdata
    sin_i.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_m251.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_m251.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to iusefp.o(.text) for __I$use$fp
    poly.o(i.__kernel_poly) refers (Special) to iusefp.o(.text) for __I$use$fp
    poly.o(i.__kernel_poly) refers to dmul.o(.text) for __aeabi_dmul
    poly.o(i.__kernel_poly) refers to dadd.o(.text) for __aeabi_dadd
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    dscalb.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    rred.o(i.__ARM_common_ll_muluu) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing system_m251.o(.text), (0 bytes).
    Removing system_m251.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_m251.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_m251.o(.text.Uart0DefaultMPF), (40 bytes).
    Removing system_m251.o(.ARM.exidx.text.Uart0DefaultMPF), (8 bytes).
    Removing startup_m251.o(HEAP), (0 bytes).
    Removing clk.o(.text), (0 bytes).
    Removing clk.o(.text.CLK_DisableCKO), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableCKO), (8 bytes).
    Removing clk.o(.text.CLK_EnableCKO), (64 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableCKO), (8 bytes).
    Removing clk.o(.text.CLK_PowerDown), (124 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_PowerDown), (8 bytes).
    Removing clk.o(.text.CLK_Idle), (32 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_Idle), (8 bytes).
    Removing clk.o(.text.CLK_GetHXTFreq), (40 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetLXTFreq), (40 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetLXTFreq), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetHCLKFreq), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHCLKFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetCPUFreq), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetCPUFreq), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPLLClockFreq), (8 bytes).
    Removing clk.o(.text.CLK_DisablePLL), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisablePLL), (8 bytes).
    Removing clk.o(.text.CLK_EnablePLL), (712 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnablePLL), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_WaitClockReady), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetHCLK), (8 bytes).
    Removing clk.o(.text.CLK_SetCoreClock), (184 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetCoreClock), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_SetSysTickClockSrc), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableXtalRC), (8 bytes).
    Removing clk.o(.text.CLK_DisableXtalRC), (24 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableXtalRC), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_DisableModuleClock), (52 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_WaitClockDisable), (80 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_WaitClockDisable), (8 bytes).
    Removing clk.o(.text.CLK_EnableSysTick), (124 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_DisableSysTick), (12 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_SetPowerDownMode), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetPowerDownMode), (8 bytes).
    Removing clk.o(.text.CLK_EnableDPDWKPin), (152 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin), (8 bytes).
    Removing clk.o(.text.CLK_EnableDPDWKPin0), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin0), (8 bytes).
    Removing clk.o(.text.CLK_EnableDPDWKPin1), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin1), (8 bytes).
    Removing clk.o(.text.CLK_EnableDPDWKPin2), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin2), (8 bytes).
    Removing clk.o(.text.CLK_EnableDPDWKPin3), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin3), (8 bytes).
    Removing clk.o(.text.CLK_EnableDPDWKPin4), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin4), (8 bytes).
    Removing clk.o(.text.CLK_GetPMUWKSrc), (12 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPMUWKSrc), (8 bytes).
    Removing clk.o(.text.CLK_GetModuleClockSource), (212 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetModuleClockSource), (8 bytes).
    Removing clk.o(.text.CLK_GetModuleClockDivider), (88 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetModuleClockDivider), (8 bytes).
    Removing clk.o(.rodata.cst4), (4 bytes).
    Removing clk.o(.rodata.cst16), (64 bytes).
    Removing clk.o(.rodata..L__const.CLK_EnableModuleClock.au32ClkTbl), (12 bytes).
    Removing clk.o(.rodata..L__const.CLK_DisableModuleClock.au32ClkTbl), (12 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.GPIO_SetMode), (74 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetMode), (8 bytes).
    Removing gpio.o(.text.GPIO_EnableInt), (48 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_EnableInt), (8 bytes).
    Removing gpio.o(.text.GPIO_DisableInt), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_DisableInt), (8 bytes).
    Removing gpio.o(.text.GPIO_SetSlewCtl), (74 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetSlewCtl), (8 bytes).
    Removing gpio.o(.text.GPIO_SetPullCtl), (74 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetPullCtl), (8 bytes).
    Removing retarget.o(.text), (0 bytes).
    Removing retarget.o(.ARM.exidx.text.SH_Return), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.ProcessHardFault), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.DumpStack), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.SendChar_ToUART), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.SendChar), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.GetChar), (8 bytes).
    Removing retarget.o(.text.kbhit), (20 bytes).
    Removing retarget.o(.ARM.exidx.text.kbhit), (8 bytes).
    Removing retarget.o(.text.IsDebugFifoEmpty), (20 bytes).
    Removing retarget.o(.ARM.exidx.text.IsDebugFifoEmpty), (8 bytes).
    Removing retarget.o(.text._ttywrch), (16 bytes).
    Removing retarget.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget.o(.text.fgetc), (14 bytes).
    Removing retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget.o(.text.ferror), (12 bytes).
    Removing retarget.o(.ARM.exidx.text.ferror), (8 bytes).
    Removing retarget.o(.bss.__stdin), (84 bytes).
    Removing sys.o(.text), (0 bytes).
    Removing sys.o(.text.SYS_ClearResetSrc), (24 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ClearResetSrc), (8 bytes).
    Removing sys.o(.text.SYS_GetBODStatus), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_GetBODStatus), (8 bytes).
    Removing sys.o(.text.SYS_GetResetSrc), (12 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_GetResetSrc), (8 bytes).
    Removing sys.o(.text.SYS_IsRegLocked), (20 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_IsRegLocked), (8 bytes).
    Removing sys.o(.text.SYS_ReadPDID), (8 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ReadPDID), (8 bytes).
    Removing sys.o(.text.SYS_ResetChip), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetChip), (8 bytes).
    Removing sys.o(.text.SYS_ResetCPU), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetCPU), (8 bytes).
    Removing sys.o(.text.SYS_ResetModule), (60 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetModule), (8 bytes).
    Removing sys.o(.text.SYS_EnableBOD), (52 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_EnableBOD), (8 bytes).
    Removing sys.o(.text.SYS_DisableBOD), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_DisableBOD), (8 bytes).
    Removing sys.o(.text.SYS_SetPowerLevel), (44 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_SetPowerLevel), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ClearIntFlag), (8 bytes).
    Removing uart.o(.text.UART_Close), (14 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Close), (8 bytes).
    Removing uart.o(.text.UART_DisableFlowCtrl), (20 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_DisableInt), (20 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableInt), (8 bytes).
    Removing uart.o(.text.UART_EnableFlowCtrl), (44 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableFlowCtrl), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Open), (8 bytes).
    Removing uart.o(.text.UART_Read), (106 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Read), (8 bytes).
    Removing uart.o(.text.UART_SetLine_Config), (416 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetLine_Config), (8 bytes).
    Removing uart.o(.text.UART_SetTimeoutCnt), (38 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetTimeoutCnt), (8 bytes).
    Removing uart.o(.text.UART_SelectIrDAMode), (420 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectIrDAMode), (8 bytes).
    Removing uart.o(.text.UART_SelectRS485Mode), (48 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectRS485Mode), (8 bytes).
    Removing uart.o(.text.UART_SelectLINMode), (42 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectLINMode), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Write), (8 bytes).
    Removing uart.o(.text.UART_SelectSingleWireMode), (24 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectSingleWireMode), (8 bytes).
    Removing uart.o(.rodata..L__const.UART_SetLine_Config.au32ClkTbl), (24 bytes).
    Removing uart.o(.rodata..L__const.UART_SelectIrDAMode.au32ClkTbl), (24 bytes).
    Removing tk.o(.text), (0 bytes).
    Removing tk.o(.text.TK_Open), (88 bytes).
    Removing tk.o(.ARM.exidx.text.TK_Open), (8 bytes).
    Removing tk.o(.text.TK_Close), (20 bytes).
    Removing tk.o(.ARM.exidx.text.TK_Close), (8 bytes).
    Removing tk.o(.text.TK_SetScanMode), (124 bytes).
    Removing tk.o(.ARM.exidx.text.TK_SetScanMode), (8 bytes).
    Removing tk.o(.text.TK_ConfigSensitivity), (56 bytes).
    Removing tk.o(.ARM.exidx.text.TK_ConfigSensitivity), (8 bytes).
    Removing tk.o(.text.TK_SetCapBankPol), (28 bytes).
    Removing tk.o(.ARM.exidx.text.TK_SetCapBankPol), (8 bytes).
    Removing tk.o(.text.TK_SetTkPol), (172 bytes).
    Removing tk.o(.ARM.exidx.text.TK_SetTkPol), (8 bytes).
    Removing tk.o(.text.TK_EnableTkPolarity), (64 bytes).
    Removing tk.o(.ARM.exidx.text.TK_EnableTkPolarity), (8 bytes).
    Removing tk.o(.text.TK_DisableTkPolarity), (64 bytes).
    Removing tk.o(.ARM.exidx.text.TK_DisableTkPolarity), (8 bytes).
    Removing tk.o(.text.TK_SetCompCapBankData), (152 bytes).
    Removing tk.o(.ARM.exidx.text.TK_SetCompCapBankData), (8 bytes).
    Removing tk.o(.text.TK_SetRefKeyCapBankData), (32 bytes).
    Removing tk.o(.ARM.exidx.text.TK_SetRefKeyCapBankData), (8 bytes).
    Removing tk.o(.text.TK_SetRefCapBankData), (152 bytes).
    Removing tk.o(.ARM.exidx.text.TK_SetRefCapBankData), (8 bytes).
    Removing tk.o(.text.TK_SetScanThreshold), (168 bytes).
    Removing tk.o(.ARM.exidx.text.TK_SetScanThreshold), (8 bytes).
    Removing tk.o(.text.TK_EnableInt), (24 bytes).
    Removing tk.o(.ARM.exidx.text.TK_EnableInt), (8 bytes).
    Removing tk.o(.text.TK_DisableInt), (24 bytes).
    Removing tk.o(.ARM.exidx.text.TK_DisableInt), (8 bytes).
    Removing tk.o(.text.TK_DisableAllChannel), (56 bytes).
    Removing tk.o(.ARM.exidx.text.TK_DisableAllChannel), (8 bytes).
    Removing tk.o(.text.TK_ClearTKIF), (56 bytes).
    Removing tk.o(.ARM.exidx.text.TK_ClearTKIF), (8 bytes).
    Removing tk.o(.text.TK_EnableScanAll), (108 bytes).
    Removing tk.o(.ARM.exidx.text.TK_EnableScanAll), (8 bytes).
    Removing tk.o(.text.TK_DisableScanAll), (20 bytes).
    Removing tk.o(.ARM.exidx.text.TK_DisableScanAll), (8 bytes).
    Removing acmp.o(.text), (0 bytes).
    Removing acmp.o(.text.ACMP_Open), (52 bytes).
    Removing acmp.o(.ARM.exidx.text.ACMP_Open), (8 bytes).
    Removing acmp.o(.text.ACMP_Close), (24 bytes).
    Removing acmp.o(.ARM.exidx.text.ACMP_Close), (8 bytes).
    Removing bpwm.o(.text), (0 bytes).
    Removing bpwm.o(.text.BPWM_ConfigCaptureChannel), (404 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ConfigCaptureChannel), (8 bytes).
    Removing bpwm.o(.text.BPWM_ConfigOutputChannel), (564 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ConfigOutputChannel), (8 bytes).
    Removing bpwm.o(.text.BPWM_Start), (16 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_Start), (8 bytes).
    Removing bpwm.o(.text.BPWM_Stop), (16 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_Stop), (8 bytes).
    Removing bpwm.o(.text.BPWM_ForceStop), (20 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ForceStop), (8 bytes).
    Removing bpwm.o(.text.BPWM_EnableADCTrigger), (104 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_EnableADCTrigger), (8 bytes).
    Removing bpwm.o(.text.BPWM_DisableADCTrigger), (60 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_DisableADCTrigger), (8 bytes).
    Removing bpwm.o(.text.BPWM_ClearADCTriggerFlag), (28 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ClearADCTriggerFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_GetADCTriggerFlag), (30 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_GetADCTriggerFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_EnableCapture), (38 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_EnableCapture), (8 bytes).
    Removing bpwm.o(.text.BPWM_DisableCapture), (38 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_DisableCapture), (8 bytes).
    Removing bpwm.o(.text.BPWM_EnableOutput), (22 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_EnableOutput), (8 bytes).
    Removing bpwm.o(.text.BPWM_DisableOutput), (22 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_DisableOutput), (8 bytes).
    Removing bpwm.o(.text.BPWM_EnableCaptureInt), (30 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_EnableCaptureInt), (8 bytes).
    Removing bpwm.o(.text.BPWM_DisableCaptureInt), (30 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_DisableCaptureInt), (8 bytes).
    Removing bpwm.o(.text.BPWM_ClearCaptureIntFlag), (26 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ClearCaptureIntFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_GetCaptureIntFlag), (54 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_GetCaptureIntFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_EnableDutyInt), (28 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_EnableDutyInt), (8 bytes).
    Removing bpwm.o(.text.BPWM_DisableDutyInt), (32 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_DisableDutyInt), (8 bytes).
    Removing bpwm.o(.text.BPWM_ClearDutyIntFlag), (28 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ClearDutyIntFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_GetDutyIntFlag), (32 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_GetDutyIntFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_EnablePeriodInt), (26 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_EnablePeriodInt), (8 bytes).
    Removing bpwm.o(.text.BPWM_DisablePeriodInt), (24 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_DisablePeriodInt), (8 bytes).
    Removing bpwm.o(.text.BPWM_ClearPeriodIntFlag), (20 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ClearPeriodIntFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_GetPeriodIntFlag), (24 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_GetPeriodIntFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_EnableZeroInt), (22 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_EnableZeroInt), (8 bytes).
    Removing bpwm.o(.text.BPWM_DisableZeroInt), (22 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_DisableZeroInt), (8 bytes).
    Removing bpwm.o(.text.BPWM_ClearZeroIntFlag), (18 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ClearZeroIntFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_GetZeroIntFlag), (20 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_GetZeroIntFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_EnableLoadMode), (26 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_EnableLoadMode), (8 bytes).
    Removing bpwm.o(.text.BPWM_DisableLoadMode), (26 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_DisableLoadMode), (8 bytes).
    Removing bpwm.o(.text.BPWM_SetClockSource), (18 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_SetClockSource), (8 bytes).
    Removing bpwm.o(.text.BPWM_GetWrapAroundFlag), (22 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_GetWrapAroundFlag), (8 bytes).
    Removing bpwm.o(.text.BPWM_ClearWrapAroundFlag), (20 bytes).
    Removing bpwm.o(.ARM.exidx.text.BPWM_ClearWrapAroundFlag), (8 bytes).
    Removing crc.o(.text), (0 bytes).
    Removing crc.o(.text.CRC_Open), (56 bytes).
    Removing crc.o(.ARM.exidx.text.CRC_Open), (8 bytes).
    Removing crc.o(.text.CRC_GetChecksum), (104 bytes).
    Removing crc.o(.ARM.exidx.text.CRC_GetChecksum), (8 bytes).
    Removing crypto.o(.text), (0 bytes).
    Removing crypto.o(.text.AES_Open), (68 bytes).
    Removing crypto.o(.ARM.exidx.text.AES_Open), (8 bytes).
    Removing crypto.o(.text.AES_Start), (48 bytes).
    Removing crypto.o(.ARM.exidx.text.AES_Start), (8 bytes).
    Removing crypto.o(.text.AES_SetKey), (84 bytes).
    Removing crypto.o(.ARM.exidx.text.AES_SetKey), (8 bytes).
    Removing crypto.o(.text.AES_SetInitVect), (72 bytes).
    Removing crypto.o(.ARM.exidx.text.AES_SetInitVect), (8 bytes).
    Removing crypto.o(.text.AES_SetDMATransfer), (90 bytes).
    Removing crypto.o(.ARM.exidx.text.AES_SetDMATransfer), (8 bytes).
    Removing crypto.o(.bss.g_AES_au32CTL), (4 bytes).
    Removing dac.o(.text), (0 bytes).
    Removing dac.o(.text.DAC_Open), (40 bytes).
    Removing dac.o(.ARM.exidx.text.DAC_Open), (8 bytes).
    Removing dac.o(.text.DAC_Close), (20 bytes).
    Removing dac.o(.ARM.exidx.text.DAC_Close), (8 bytes).
    Removing dac.o(.text.DAC_SetDelayTime), (64 bytes).
    Removing dac.o(.ARM.exidx.text.DAC_SetDelayTime), (8 bytes).
    Removing eadc.o(.text), (0 bytes).
    Removing eadc.o(.text.EADC_Open), (80 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_Open), (8 bytes).
    Removing eadc.o(.text.EADC_Close), (18 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_Close), (8 bytes).
    Removing eadc.o(.text.EADC_ConfigSampleModule), (56 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_ConfigSampleModule), (8 bytes).
    Removing eadc.o(.text.EADC_SetTriggerDelayTime), (60 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_SetTriggerDelayTime), (8 bytes).
    Removing eadc.o(.text.EADC_SetExtendSampleTime), (100 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_SetExtendSampleTime), (8 bytes).
    Removing eadc.o(.bss.g_EADC_i32ErrCode), (4 bytes).
    Removing ebi.o(.text), (0 bytes).
    Removing ebi.o(.text.EBI_Open), (400 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_Open), (8 bytes).
    Removing ebi.o(.text.EBI_Close), (36 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_Close), (8 bytes).
    Removing ebi.o(.text.EBI_SetBusTiming), (76 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_SetBusTiming), (8 bytes).
    Removing fmc.o(.text), (0 bytes).
    Removing fmc.o(.text.FMC_SetBootSource), (32 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_SetBootSource), (8 bytes).
    Removing fmc.o(.text.FMC_Close), (16 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Close), (8 bytes).
    Removing fmc.o(.text.FMC_GetBootSource), (16 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_GetBootSource), (8 bytes).
    Removing fmc.o(.text.FMC_Open), (16 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Open), (8 bytes).
    Removing fmc.o(.text.FMC_ReadConfig), (72 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_ReadConfig), (8 bytes).
    Removing fmc.o(.text.FMC_Read), (144 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Read), (8 bytes).
    Removing fmc.o(.text.FMC_WriteConfig), (96 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_WriteConfig), (8 bytes).
    Removing fmc.o(.text.FMC_Write), (164 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Write), (8 bytes).
    Removing fmc.o(.text.FMC_GetChkSum), (20 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_GetChkSum), (8 bytes).
    Removing fmc.o(.text.FMC_GetCheckSum), (260 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_GetCheckSum), (8 bytes).
    Removing fmc.o(.text.FMC_CheckAllOne), (332 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_CheckAllOne), (8 bytes).
    Removing fmc.o(.text.FMC_Is_XOM_Actived), (68 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Is_XOM_Actived), (8 bytes).
    Removing fmc.o(.text.FMC_Config_XOM), (560 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Config_XOM), (8 bytes).
    Removing fmc.o(.text.FMC_Erase_XOM), (252 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Erase_XOM), (8 bytes).
    Removing fmc.o(.text.FMC_Erase), (180 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Erase), (8 bytes).
    Removing fmc.o(.text.FMC_Write128), (660 bytes).
    Removing fmc.o(.ARM.exidx.text.FMC_Write128), (8 bytes).
    Removing fmc.o(.bss.g_FMC_i32ErrCode), (4 bytes).
    Removing i2c.o(.text), (0 bytes).
    Removing i2c.o(.text.I2C_Open), (96 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_Open), (8 bytes).
    Removing i2c.o(.text.I2C_Close), (92 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_Close), (8 bytes).
    Removing i2c.o(.text.I2C_ClearTimeoutFlag), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_ClearTimeoutFlag), (8 bytes).
    Removing i2c.o(.text.I2C_Trigger), (120 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_Trigger), (8 bytes).
    Removing i2c.o(.text.I2C_DisableInt), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_DisableInt), (8 bytes).
    Removing i2c.o(.text.I2C_EnableInt), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_EnableInt), (8 bytes).
    Removing i2c.o(.text.I2C_GetBusClockFreq), (60 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_GetBusClockFreq), (8 bytes).
    Removing i2c.o(.text.I2C_SetBusClockFreq), (88 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SetBusClockFreq), (8 bytes).
    Removing i2c.o(.text.I2C_GetIntFlag), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_GetIntFlag), (8 bytes).
    Removing i2c.o(.text.I2C_GetStatus), (12 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_GetStatus), (8 bytes).
    Removing i2c.o(.text.I2C_GetData), (14 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_GetData), (8 bytes).
    Removing i2c.o(.text.I2C_SetData), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SetData), (8 bytes).
    Removing i2c.o(.text.I2C_SetSlaveAddr), (102 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SetSlaveAddr), (8 bytes).
    Removing i2c.o(.text.I2C_SetSlaveAddrMask), (94 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SetSlaveAddrMask), (8 bytes).
    Removing i2c.o(.text.I2C_EnableTimeout), (52 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_EnableTimeout), (8 bytes).
    Removing i2c.o(.text.I2C_DisableTimeout), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_DisableTimeout), (8 bytes).
    Removing i2c.o(.text.I2C_EnableWakeup), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_EnableWakeup), (8 bytes).
    Removing i2c.o(.text.I2C_DisableWakeup), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_DisableWakeup), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusGetStatus), (12 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusGetStatus), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusClearInterruptFlag), (18 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusClearInterruptFlag), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusSetPacketByteCount), (16 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusSetPacketByteCount), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusOpen), (54 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusOpen), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusClose), (14 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusClose), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusPECTxEnable), (56 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusPECTxEnable), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusGetPECValue), (14 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusGetPECValue), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusIdleTimeout), (76 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusIdleTimeout), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusTimeout), (102 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusTimeout), (8 bytes).
    Removing i2c.o(.text.I2C_SMBusClockLoTimeout), (102 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_SMBusClockLoTimeout), (8 bytes).
    Removing i2c.o(.text.I2C_WriteByte), (484 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_WriteByte), (8 bytes).
    Removing i2c.o(.text.I2C_WriteMultiBytes), (496 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_WriteMultiBytes), (8 bytes).
    Removing i2c.o(.text.I2C_WriteByteOneReg), (516 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_WriteByteOneReg), (8 bytes).
    Removing i2c.o(.text.I2C_WriteMultiBytesOneReg), (512 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_WriteMultiBytesOneReg), (8 bytes).
    Removing i2c.o(.text.I2C_WriteByteTwoRegs), (552 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_WriteByteTwoRegs), (8 bytes).
    Removing i2c.o(.text.I2C_WriteMultiBytesTwoRegs), (548 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_WriteMultiBytesTwoRegs), (8 bytes).
    Removing i2c.o(.text.I2C_ReadByte), (332 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_ReadByte), (8 bytes).
    Removing i2c.o(.text.I2C_ReadMultiBytes), (368 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_ReadMultiBytes), (8 bytes).
    Removing i2c.o(.text.I2C_ReadByteOneReg), (684 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_ReadByteOneReg), (8 bytes).
    Removing i2c.o(.text.I2C_ReadMultiBytesOneReg), (720 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_ReadMultiBytesOneReg), (8 bytes).
    Removing i2c.o(.text.I2C_ReadByteTwoRegs), (712 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_ReadByteTwoRegs), (8 bytes).
    Removing i2c.o(.text.I2C_ReadMultiBytesTwoRegs), (748 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_ReadMultiBytesTwoRegs), (8 bytes).
    Removing i2c.o(.bss.g_I2C_i32ErrCode), (4 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.text.LCD_Open), (376 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Open), (8 bytes).
    Removing lcd.o(.text.LCD_SetAllPixels), (68 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetAllPixels), (8 bytes).
    Removing lcd.o(.text.LCD_Close), (36 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Close), (8 bytes).
    Removing lcd.o(.text.LCD_SetPixel), (100 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetPixel), (8 bytes).
    Removing lcd.o(.text.LCD_EnableBlink), (148 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_EnableBlink), (8 bytes).
    Removing lcd.o(.text.LCD_DisableBlink), (16 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_DisableBlink), (8 bytes).
    Removing lcd.o(.text.LCD_EnableInt), (24 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_EnableInt), (8 bytes).
    Removing lcd.o(.text.LCD_DisableInt), (24 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_DisableInt), (8 bytes).
    Removing lcd.o(.text.LCD_SetSavingMode), (828 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetSavingMode), (8 bytes).
    Removing lcd.o(.bss.g_LCDFrameRate), (4 bytes).
    Removing lcd.o(.rodata.cst16), (16 bytes).
    Removing pdma.o(.text), (0 bytes).
    Removing pdma.o(.text.PDMA_Open), (84 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_Open), (8 bytes).
    Removing pdma.o(.text.PDMA_Close), (18 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_Close), (8 bytes).
    Removing pdma.o(.text.PDMA_SetTransferCnt), (60 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_SetTransferCnt), (8 bytes).
    Removing pdma.o(.text.PDMA_SetStride), (76 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_SetStride), (8 bytes).
    Removing pdma.o(.text.PDMA_SetTransferAddr), (78 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_SetTransferAddr), (8 bytes).
    Removing pdma.o(.text.PDMA_SetTransferMode), (360 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_SetTransferMode), (8 bytes).
    Removing pdma.o(.text.PDMA_SetBurstType), (46 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_SetBurstType), (8 bytes).
    Removing pdma.o(.text.PDMA_EnableTimeout), (28 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_EnableTimeout), (8 bytes).
    Removing pdma.o(.text.PDMA_DisableTimeout), (28 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_DisableTimeout), (8 bytes).
    Removing pdma.o(.text.PDMA_SetTimeOut), (128 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_SetTimeOut), (8 bytes).
    Removing pdma.o(.text.PDMA_Trigger), (44 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_Trigger), (8 bytes).
    Removing pdma.o(.text.PDMA_EnableInt), (94 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_EnableInt), (8 bytes).
    Removing pdma.o(.text.PDMA_DisableInt), (94 bytes).
    Removing pdma.o(.ARM.exidx.text.PDMA_DisableInt), (8 bytes).
    Removing pdma.o(.bss.u8ChSelect), (8 bytes).
    Removing pwm.o(.text), (0 bytes).
    Removing pwm.o(.text.PWM_ConfigCaptureChannel), (500 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ConfigCaptureChannel), (8 bytes).
    Removing pwm.o(.text.PWM_ConfigOutputChannel), (664 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ConfigOutputChannel), (8 bytes).
    Removing pwm.o(.text.PWM_Start), (64 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_Start), (8 bytes).
    Removing pwm.o(.text.PWM_Stop), (62 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_Stop), (8 bytes).
    Removing pwm.o(.text.PWM_ForceStop), (64 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ForceStop), (8 bytes).
    Removing pwm.o(.text.PWM_EnableADCTrigger), (104 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableADCTrigger), (8 bytes).
    Removing pwm.o(.text.PWM_DisableADCTrigger), (60 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableADCTrigger), (8 bytes).
    Removing pwm.o(.text.PWM_ClearADCTriggerFlag), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearADCTriggerFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetADCTriggerFlag), (30 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetADCTriggerFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnableFaultBrake), (392 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableFaultBrake), (8 bytes).
    Removing pwm.o(.text.PWM_EnableCapture), (38 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableCapture), (8 bytes).
    Removing pwm.o(.text.PWM_DisableCapture), (38 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableCapture), (8 bytes).
    Removing pwm.o(.text.PWM_EnableOutput), (22 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableOutput), (8 bytes).
    Removing pwm.o(.text.PWM_DisableOutput), (22 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableOutput), (8 bytes).
    Removing pwm.o(.text.PWM_EnableDeadZone), (60 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableDeadZone), (8 bytes).
    Removing pwm.o(.text.PWM_DisableDeadZone), (30 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableDeadZone), (8 bytes).
    Removing pwm.o(.text.PWM_EnableCaptureInt), (30 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableCaptureInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisableCaptureInt), (30 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableCaptureInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearCaptureIntFlag), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearCaptureIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetCaptureIntFlag), (54 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetCaptureIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnableDutyInt), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableDutyInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisableDutyInt), (32 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableDutyInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearDutyIntFlag), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearDutyIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetDutyIntFlag), (32 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetDutyIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnableLoadMode), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableLoadMode), (8 bytes).
    Removing pwm.o(.text.PWM_DisableLoadMode), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableLoadMode), (8 bytes).
    Removing pwm.o(.text.PWM_EnableFaultBrakeInt), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableFaultBrakeInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisableFaultBrakeInt), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableFaultBrakeInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearFaultBrakeIntFlag), (22 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearFaultBrakeIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetFaultBrakeIntFlag), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetFaultBrakeIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnablePeriodInt), (34 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnablePeriodInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisablePeriodInt), (32 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisablePeriodInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearPeriodIntFlag), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearPeriodIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetPeriodIntFlag), (32 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetPeriodIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnableZeroInt), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableZeroInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisableZeroInt), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableZeroInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearZeroIntFlag), (24 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearZeroIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetZeroIntFlag), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetZeroIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_SetClockSource), (38 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_SetClockSource), (8 bytes).
    Removing pwm.o(.text.PWM_EnableBrakeNoiseFilter), (52 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableBrakeNoiseFilter), (8 bytes).
    Removing pwm.o(.text.PWM_DisableBrakeNoiseFilter), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableBrakeNoiseFilter), (8 bytes).
    Removing pwm.o(.text.PWM_EnableBrakePinInverse), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableBrakePinInverse), (8 bytes).
    Removing pwm.o(.text.PWM_DisableBrakePinInverse), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableBrakePinInverse), (8 bytes).
    Removing pwm.o(.text.PWM_SetBrakePinSource), (42 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_SetBrakePinSource), (8 bytes).
    Removing pwm.o(.text.PWM_GetWrapAroundFlag), (28 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetWrapAroundFlag), (8 bytes).
    Removing pwm.o(.text.PWM_ClearWrapAroundFlag), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearWrapAroundFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnablePDMA), (68 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnablePDMA), (8 bytes).
    Removing pwm.o(.text.PWM_DisablePDMA), (32 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisablePDMA), (8 bytes).
    Removing qspi.o(.text), (0 bytes).
    Removing qspi.o(.text.QSPI_Open), (408 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_Open), (8 bytes).
    Removing qspi.o(.text.QSPI_Close), (32 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_Close), (8 bytes).
    Removing qspi.o(.text.QSPI_ClearRxFIFO), (20 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_ClearRxFIFO), (8 bytes).
    Removing qspi.o(.text.QSPI_ClearTxFIFO), (20 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_ClearTxFIFO), (8 bytes).
    Removing qspi.o(.text.QSPI_DisableAutoSS), (18 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_DisableAutoSS), (8 bytes).
    Removing qspi.o(.text.QSPI_EnableAutoSS), (36 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_EnableAutoSS), (8 bytes).
    Removing qspi.o(.text.QSPI_SetBusClock), (296 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_SetBusClock), (8 bytes).
    Removing qspi.o(.text.QSPI_SetFIFO), (38 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_SetFIFO), (8 bytes).
    Removing qspi.o(.text.QSPI_GetBusClock), (120 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_GetBusClock), (8 bytes).
    Removing qspi.o(.text.QSPI_EnableInt), (280 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_EnableInt), (8 bytes).
    Removing qspi.o(.text.QSPI_DisableInt), (280 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_DisableInt), (8 bytes).
    Removing qspi.o(.text.QSPI_GetIntFlag), (446 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_GetIntFlag), (8 bytes).
    Removing qspi.o(.text.QSPI_ClearIntFlag), (194 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_ClearIntFlag), (8 bytes).
    Removing qspi.o(.text.QSPI_GetStatus), (330 bytes).
    Removing qspi.o(.ARM.exidx.text.QSPI_GetStatus), (8 bytes).
    Removing rtc.o(.text), (0 bytes).
    Removing rtc.o(.text.RTC_Open), (108 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_Open), (8 bytes).
    Removing rtc.o(.text.RTC_SetDateAndTime), (332 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetDateAndTime), (8 bytes).
    Removing rtc.o(.text.RTC_Close), (16 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_Close), (8 bytes).
    Removing rtc.o(.text.RTC_32KCalibration), (184 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_32KCalibration), (8 bytes).
    Removing rtc.o(.text.RTC_GetDateAndTime), (528 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_GetDateAndTime), (8 bytes).
    Removing rtc.o(.text.RTC_GetAlarmDateAndTime), (528 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_GetAlarmDateAndTime), (8 bytes).
    Removing rtc.o(.text.RTC_SetAlarmDateAndTime), (320 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetAlarmDateAndTime), (8 bytes).
    Removing rtc.o(.text.RTC_SetDate), (144 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetDate), (8 bytes).
    Removing rtc.o(.text.RTC_SetTime), (184 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetTime), (8 bytes).
    Removing rtc.o(.text.RTC_SetAlarmDate), (128 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetAlarmDate), (8 bytes).
    Removing rtc.o(.text.RTC_SetAlarmTime), (184 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetAlarmTime), (8 bytes).
    Removing rtc.o(.text.RTC_SetAlarmDateMask), (88 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetAlarmDateMask), (8 bytes).
    Removing rtc.o(.text.RTC_SetAlarmTimeMask), (88 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetAlarmTimeMask), (8 bytes).
    Removing rtc.o(.text.RTC_GetDayOfWeek), (16 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_GetDayOfWeek), (8 bytes).
    Removing rtc.o(.text.RTC_SetTickPeriod), (28 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_SetTickPeriod), (8 bytes).
    Removing rtc.o(.text.RTC_EnableInt), (24 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_EnableInt), (8 bytes).
    Removing rtc.o(.text.RTC_DisableInt), (32 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_DisableInt), (8 bytes).
    Removing rtc.o(.text.RTC_EnableSpareAccess), (16 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_EnableSpareAccess), (8 bytes).
    Removing rtc.o(.text.RTC_DisableSpareRegister), (16 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_DisableSpareRegister), (8 bytes).
    Removing rtc.o(.text.RTC_StaticTamperEnable), (112 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_StaticTamperEnable), (8 bytes).
    Removing rtc.o(.text.RTC_StaticTamperDisable), (80 bytes).
    Removing rtc.o(.ARM.exidx.text.RTC_StaticTamperDisable), (8 bytes).
    Removing rtc.o(.bss.g_u32HiYear), (4 bytes).
    Removing rtc.o(.bss.g_u32LoYear), (4 bytes).
    Removing rtc.o(.bss.g_u32HiMonth), (4 bytes).
    Removing rtc.o(.bss.g_u32LoMonth), (4 bytes).
    Removing rtc.o(.bss.g_u32HiDay), (4 bytes).
    Removing rtc.o(.bss.g_u32LoDay), (4 bytes).
    Removing rtc.o(.bss.g_u32HiHour), (4 bytes).
    Removing rtc.o(.bss.g_u32LoHour), (4 bytes).
    Removing rtc.o(.bss.g_u32HiMin), (4 bytes).
    Removing rtc.o(.bss.g_u32LoMin), (4 bytes).
    Removing rtc.o(.bss.g_u32HiSec), (4 bytes).
    Removing rtc.o(.bss.g_u32LoSec), (4 bytes).
    Removing sc.o(.text), (0 bytes).
    Removing sc.o(.text.SC_IsCardInserted), (96 bytes).
    Removing sc.o(.ARM.exidx.text.SC_IsCardInserted), (8 bytes).
    Removing sc.o(.text.SC_ClearFIFO), (32 bytes).
    Removing sc.o(.ARM.exidx.text.SC_ClearFIFO), (8 bytes).
    Removing sc.o(.text.SC_Close), (62 bytes).
    Removing sc.o(.ARM.exidx.text.SC_Close), (8 bytes).
    Removing sc.o(.text.SC_Open), (128 bytes).
    Removing sc.o(.ARM.exidx.text.SC_Open), (8 bytes).
    Removing sc.o(.text.SC_ResetReader), (164 bytes).
    Removing sc.o(.ARM.exidx.text.SC_ResetReader), (8 bytes).
    Removing sc.o(.text.SC_SetBlockGuardTime), (36 bytes).
    Removing sc.o(.ARM.exidx.text.SC_SetBlockGuardTime), (8 bytes).
    Removing sc.o(.text.SC_SetCharGuardTime), (46 bytes).
    Removing sc.o(.ARM.exidx.text.SC_SetCharGuardTime), (8 bytes).
    Removing sc.o(.text.SC_StopAllTimer), (32 bytes).
    Removing sc.o(.ARM.exidx.text.SC_StopAllTimer), (8 bytes).
    Removing sc.o(.text.SC_StartTimer), (224 bytes).
    Removing sc.o(.ARM.exidx.text.SC_StartTimer), (8 bytes).
    Removing sc.o(.text.SC_StopTimer), (76 bytes).
    Removing sc.o(.ARM.exidx.text.SC_StopTimer), (8 bytes).
    Removing sc.o(.text.SC_GetInterfaceClock), (176 bytes).
    Removing sc.o(.ARM.exidx.text.SC_GetInterfaceClock), (8 bytes).
    Removing sc.o(.bss.u32CardStateIgnore), (4 bytes).
    Removing scuart.o(.text), (0 bytes).
    Removing scuart.o(.text.SCUART_Close), (22 bytes).
    Removing scuart.o(.ARM.exidx.text.SCUART_Close), (8 bytes).
    Removing scuart.o(.text.SCUART_Open), (72 bytes).
    Removing scuart.o(.ARM.exidx.text.SCUART_Open), (8 bytes).
    Removing scuart.o(.text.SCUART_GetClock), (164 bytes).
    Removing scuart.o(.ARM.exidx.text.SCUART_GetClock), (8 bytes).
    Removing scuart.o(.text.SCUART_Read), (64 bytes).
    Removing scuart.o(.ARM.exidx.text.SCUART_Read), (8 bytes).
    Removing scuart.o(.text.SCUART_SetLineConfig), (108 bytes).
    Removing scuart.o(.ARM.exidx.text.SCUART_SetLineConfig), (8 bytes).
    Removing scuart.o(.text.SCUART_SetTimeoutCnt), (16 bytes).
    Removing scuart.o(.ARM.exidx.text.SCUART_SetTimeoutCnt), (8 bytes).
    Removing scuart.o(.text.SCUART_Write), (152 bytes).
    Removing scuart.o(.ARM.exidx.text.SCUART_Write), (8 bytes).
    Removing scuart.o(.bss.g_SCUART_i32ErrCode), (4 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.text.SPI_Open), (608 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_Open), (8 bytes).
    Removing spi.o(.text.SPI_Close), (84 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_Close), (8 bytes).
    Removing spi.o(.text.SPI_ClearRxFIFO), (20 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_ClearRxFIFO), (8 bytes).
    Removing spi.o(.text.SPI_ClearTxFIFO), (20 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_ClearTxFIFO), (8 bytes).
    Removing spi.o(.text.SPI_DisableAutoSS), (18 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_DisableAutoSS), (8 bytes).
    Removing spi.o(.text.SPI_EnableAutoSS), (36 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_EnableAutoSS), (8 bytes).
    Removing spi.o(.text.SPI_SetBusClock), (440 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_SetBusClock), (8 bytes).
    Removing spi.o(.text.SPI_SetFIFO), (38 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_SetFIFO), (8 bytes).
    Removing spi.o(.text.SPI_GetBusClock), (228 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_GetBusClock), (8 bytes).
    Removing spi.o(.text.SPI_EnableInt), (256 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_EnableInt), (8 bytes).
    Removing spi.o(.text.SPI_DisableInt), (256 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_DisableInt), (8 bytes).
    Removing spi.o(.text.SPI_GetIntFlag), (408 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_GetIntFlag), (8 bytes).
    Removing spi.o(.text.SPI_ClearIntFlag), (174 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_ClearIntFlag), (8 bytes).
    Removing spi.o(.text.SPI_GetStatus), (330 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_GetStatus), (8 bytes).
    Removing spi.o(.text.SPI_GetStatus2), (46 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_GetStatus2), (8 bytes).
    Removing spi.o(.text.SPII2S_Open), (376 bytes).
    Removing spi.o(.ARM.exidx.text.SPII2S_Open), (8 bytes).
    Removing spi.o(.text.SPII2S_GetSourceClockFreq), (208 bytes).
    Removing spi.o(.ARM.exidx.text.SPII2S_GetSourceClockFreq), (8 bytes).
    Removing spi.o(.text.SPII2S_Close), (18 bytes).
    Removing spi.o(.ARM.exidx.text.SPII2S_Close), (8 bytes).
    Removing spi.o(.text.SPII2S_EnableInt), (206 bytes).
    Removing spi.o(.ARM.exidx.text.SPII2S_EnableInt), (8 bytes).
    Removing spi.o(.text.SPII2S_DisableInt), (206 bytes).
    Removing spi.o(.ARM.exidx.text.SPII2S_DisableInt), (8 bytes).
    Removing spi.o(.text.SPII2S_EnableMCLK), (120 bytes).
    Removing spi.o(.ARM.exidx.text.SPII2S_EnableMCLK), (8 bytes).
    Removing spi.o(.text.SPII2S_DisableMCLK), (20 bytes).
    Removing spi.o(.ARM.exidx.text.SPII2S_DisableMCLK), (8 bytes).
    Removing spi.o(.text.SPII2S_SetFIFO), (38 bytes).
    Removing spi.o(.ARM.exidx.text.SPII2S_SetFIFO), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.text.TIMER_Open), (114 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Open), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_GetModuleClock), (8 bytes).
    Removing timer.o(.text.TIMER_Close), (18 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Close), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Delay), (8 bytes).
    Removing timer.o(.text.TIMER_EnableCapture), (40 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableCapture), (8 bytes).
    Removing timer.o(.text.TIMER_CaptureSelect), (68 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_CaptureSelect), (8 bytes).
    Removing timer.o(.text.TIMER_DisableCapture), (18 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableCapture), (8 bytes).
    Removing timer.o(.text.TIMER_SetTriggerSource), (26 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_SetTriggerSource), (8 bytes).
    Removing timer.o(.text.TIMER_SetTriggerTarget), (28 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_SetTriggerTarget), (8 bytes).
    Removing timer.o(.text.TIMER_EnableEventCounter), (36 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableEventCounter), (8 bytes).
    Removing timer.o(.text.TIMER_DisableEventCounter), (20 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableEventCounter), (8 bytes).
    Removing timer.o(.text.TIMER_EnableFreqCounter), (112 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableFreqCounter), (8 bytes).
    Removing timer.o(.text.TIMER_DisableFreqCounter), (20 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableFreqCounter), (8 bytes).
    Removing timer.o(.text.TIMER_ResetCounter), (108 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_ResetCounter), (8 bytes).
    Removing timer_pwm.o(.text), (0 bytes).
    Removing timer_pwm.o(.text.TPWM_ConfigOutputFreqAndDuty), (232 bytes).
    Removing timer_pwm.o(.ARM.exidx.text.TPWM_ConfigOutputFreqAndDuty), (8 bytes).
    Removing timer_pwm.o(.text.TPWM_EnableCounter), (18 bytes).
    Removing timer_pwm.o(.ARM.exidx.text.TPWM_EnableCounter), (8 bytes).
    Removing timer_pwm.o(.text.TPWM_DisableCounter), (18 bytes).
    Removing timer_pwm.o(.ARM.exidx.text.TPWM_DisableCounter), (8 bytes).
    Removing timer_pwm.o(.text.TPWM_EnableTrigger), (40 bytes).
    Removing timer_pwm.o(.ARM.exidx.text.TPWM_EnableTrigger), (8 bytes).
    Removing timer_pwm.o(.text.TPWM_DisableTrigger), (20 bytes).
    Removing timer_pwm.o(.ARM.exidx.text.TPWM_DisableTrigger), (8 bytes).
    Removing usbd.o(.text), (0 bytes).
    Removing usbd.o(.text.USBD_Open), (84 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_Open), (8 bytes).
    Removing usbd.o(.text.USBD_Start), (40 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_Start), (8 bytes).
    Removing usbd.o(.text.USBD_GetSetupPacket), (24 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_GetSetupPacket), (8 bytes).
    Removing usbd.o(.text.USBD_MemCopy), (42 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_MemCopy), (8 bytes).
    Removing usbd.o(.text.USBD_ProcessSetupPacket), (148 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_ProcessSetupPacket), (8 bytes).
    Removing usbd.o(.text.USBD_StandardRequest), (884 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_StandardRequest), (8 bytes).
    Removing usbd.o(.text.USBD_GetDescriptor), (696 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_GetDescriptor), (8 bytes).
    Removing usbd.o(.text.USBD_PrepareCtrlIn), (156 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_PrepareCtrlIn), (8 bytes).
    Removing usbd.o(.text.USBD_PrepareCtrlOut), (56 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_PrepareCtrlOut), (8 bytes).
    Removing usbd.o(.text.USBD_GetStall), (96 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_GetStall), (8 bytes).
    Removing usbd.o(.text.USBD_SetStall), (104 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_SetStall), (8 bytes).
    Removing usbd.o(.text.USBD_CtrlIn), (244 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_CtrlIn), (8 bytes).
    Removing usbd.o(.text.USBD_CtrlOut), (176 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_CtrlOut), (8 bytes).
    Removing usbd.o(.text.USBD_SwReset), (132 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_SwReset), (8 bytes).
    Removing usbd.o(.text.USBD_SetVendorRequest), (20 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_SetVendorRequest), (8 bytes).
    Removing usbd.o(.text.USBD_SetConfigCallback), (20 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_SetConfigCallback), (8 bytes).
    Removing usbd.o(.text.USBD_LockEpStall), (20 bytes).
    Removing usbd.o(.ARM.exidx.text.USBD_LockEpStall), (8 bytes).
    Removing usbd.o(.bss.g_USBD_au8SetupPacket), (8 bytes).
    Removing usbd.o(.bss.g_USBD_u8RemoteWakeupEn), (1 bytes).
    Removing usbd.o(.bss.g_USBD_pfnVendorRequest), (4 bytes).
    Removing usbd.o(.bss.g_USBD_pfnClassRequest), (4 bytes).
    Removing usbd.o(.bss.g_USBD_pfnSetInterface), (4 bytes).
    Removing usbd.o(.bss.g_USBD_pfnSetConfigCallback), (4 bytes).
    Removing usbd.o(.bss.g_USBD_u32EpStallLock), (4 bytes).
    Removing usbd.o(.bss.g_USBD_sINFO), (4 bytes).
    Removing usbd.o(.data.s_USBD_u32CtrlMaxPktSize), (4 bytes).
    Removing usbd.o(.bss.s_USBD_u32CtrlOutToggle), (4 bytes).
    Removing usbd.o(.bss.s_USBD_u8CtrlInZeroFlag), (1 bytes).
    Removing usbd.o(.bss.s_USBD_pu8CtrlInPointer), (4 bytes).
    Removing usbd.o(.bss.s_USBD_u32CtrlInSize), (4 bytes).
    Removing usbd.o(.bss.s_USBD_u32UsbConfig), (4 bytes).
    Removing usbd.o(.bss.s_USBD_u32UsbAltInterface), (4 bytes).
    Removing usbd.o(.bss.s_USBD_u32UsbAddr), (4 bytes).
    Removing usbd.o(.bss.s_USBD_pu8CtrlOutPointer), (4 bytes).
    Removing usbd.o(.bss.s_USBD_u32CtrlOutSize), (4 bytes).
    Removing usbd.o(.bss.s_USBD_u32CtrlOutSizeLimit), (4 bytes).
    Removing usci_i2c.o(.text), (0 bytes).
    Removing usci_i2c.o(.text.UI2C_Open), (180 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_Open), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_Close), (18 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_Close), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_ClearTimeoutFlag), (14 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_ClearTimeoutFlag), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_Trigger), (124 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_Trigger), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_DisableInt), (176 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_DisableInt), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_EnableInt), (176 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_EnableInt), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_GetBusClockFreq), (84 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_GetBusClockFreq), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_SetBusClockFreq), (120 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_SetBusClockFreq), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_GetIntFlag), (292 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_GetIntFlag), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_ClearIntFlag), (160 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_ClearIntFlag), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_GetData), (12 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_GetData), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_SetData), (18 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_SetData), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_SetSlaveAddr), (66 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_SetSlaveAddr), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_SetSlaveAddrMask), (42 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_SetSlaveAddrMask), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_EnableTimeout), (48 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_EnableTimeout), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_DisableTimeout), (32 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_DisableTimeout), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_EnableWakeup), (32 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_EnableWakeup), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_DisableWakeup), (18 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_DisableWakeup), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_WriteByte), (318 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_WriteByte), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_WriteMultiBytes), (286 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_WriteMultiBytes), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_WriteByteOneReg), (334 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_WriteByteOneReg), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_WriteMultiBytesOneReg), (328 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_WriteMultiBytesOneReg), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_WriteByteTwoRegs), (358 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_WriteByteTwoRegs), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_WriteMultiBytesTwoRegs), (368 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_WriteMultiBytesTwoRegs), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_ReadByte), (324 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_ReadByte), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_ReadMultiBytes), (358 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_ReadMultiBytes), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_ReadByteOneReg), (434 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_ReadByteOneReg), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_ReadMultiBytesOneReg), (464 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_ReadMultiBytesOneReg), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_ReadByteTwoRegs), (456 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_ReadByteTwoRegs), (8 bytes).
    Removing usci_i2c.o(.text.UI2C_ReadMultiBytesTwoRegs), (486 bytes).
    Removing usci_i2c.o(.ARM.exidx.text.UI2C_ReadMultiBytesTwoRegs), (8 bytes).
    Removing usci_spi.o(.text), (0 bytes).
    Removing usci_spi.o(.text.USPI_Open), (288 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_Open), (8 bytes).
    Removing usci_spi.o(.text.USPI_Close), (18 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_Close), (8 bytes).
    Removing usci_spi.o(.text.USPI_ClearRxBuf), (20 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_ClearRxBuf), (8 bytes).
    Removing usci_spi.o(.text.USPI_ClearTxBuf), (18 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_ClearTxBuf), (8 bytes).
    Removing usci_spi.o(.text.USPI_DisableAutoSS), (18 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_DisableAutoSS), (8 bytes).
    Removing usci_spi.o(.text.USPI_EnableAutoSS), (38 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_EnableAutoSS), (8 bytes).
    Removing usci_spi.o(.text.USPI_SetBusClock), (120 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_SetBusClock), (8 bytes).
    Removing usci_spi.o(.text.USPI_GetBusClock), (92 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_GetBusClock), (8 bytes).
    Removing usci_spi.o(.text.USPI_EnableInt), (268 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_EnableInt), (8 bytes).
    Removing usci_spi.o(.text.USPI_DisableInt), (268 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_DisableInt), (8 bytes).
    Removing usci_spi.o(.text.USPI_GetIntFlag), (454 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_GetIntFlag), (8 bytes).
    Removing usci_spi.o(.text.USPI_ClearIntFlag), (232 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_ClearIntFlag), (8 bytes).
    Removing usci_spi.o(.text.USPI_GetStatus), (288 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_GetStatus), (8 bytes).
    Removing usci_spi.o(.text.USPI_EnableWakeup), (18 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_EnableWakeup), (8 bytes).
    Removing usci_spi.o(.text.USPI_DisableWakeup), (18 bytes).
    Removing usci_spi.o(.ARM.exidx.text.USPI_DisableWakeup), (8 bytes).
    Removing usci_uart.o(.text), (0 bytes).
    Removing usci_uart.o(.text.UUART_ClearIntFlag), (152 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_ClearIntFlag), (8 bytes).
    Removing usci_uart.o(.text.UUART_GetIntFlag), (296 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_GetIntFlag), (8 bytes).
    Removing usci_uart.o(.text.UUART_Close), (14 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_Close), (8 bytes).
    Removing usci_uart.o(.text.UUART_DisableInt), (180 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_DisableInt), (8 bytes).
    Removing usci_uart.o(.text.UUART_EnableInt), (180 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_EnableInt), (8 bytes).
    Removing usci_uart.o(.text.UUART_Open), (540 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_Open), (8 bytes).
    Removing usci_uart.o(.text.UUART_Read), (94 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_Read), (8 bytes).
    Removing usci_uart.o(.text.UUART_SetLine_Config), (620 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_SetLine_Config), (8 bytes).
    Removing usci_uart.o(.text.UUART_Write), (96 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_Write), (8 bytes).
    Removing usci_uart.o(.text.UUART_EnableWakeup), (30 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_EnableWakeup), (8 bytes).
    Removing usci_uart.o(.text.UUART_DisableWakeup), (30 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_DisableWakeup), (8 bytes).
    Removing usci_uart.o(.text.UUART_EnableFlowCtrl), (38 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_EnableFlowCtrl), (8 bytes).
    Removing usci_uart.o(.text.UUART_DisableFlowCtrl), (18 bytes).
    Removing usci_uart.o(.ARM.exidx.text.UUART_DisableFlowCtrl), (8 bytes).
    Removing wdt.o(.text), (0 bytes).
    Removing wdt.o(.text.WDT_Open), (52 bytes).
    Removing wdt.o(.ARM.exidx.text.WDT_Open), (8 bytes).
    Removing wwdt.o(.text), (0 bytes).
    Removing wwdt.o(.text.WWDT_Open), (44 bytes).
    Removing wwdt.o(.ARM.exidx.text.WWDT_Open), (8 bytes).
    Removing wit_c_sdk.o(.text), (0 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitSerialWriteRegister), (8 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitSerialDataIn), (8 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.__CaliSum), (8 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.CopeWitData), (8 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.__CRC16), (8 bytes).
    Removing wit_c_sdk.o(.text.WitI2cFuncRegister), (68 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitI2cFuncRegister), (8 bytes).
    Removing wit_c_sdk.o(.text.WitCanWriteRegister), (40 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitCanWriteRegister), (8 bytes).
    Removing wit_c_sdk.o(.text.WitCanDataIn), (136 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitCanDataIn), (8 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitRegisterCallBack), (8 bytes).
    Removing wit_c_sdk.o(.text.WitWriteReg), (348 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitWriteReg), (8 bytes).
    Removing wit_c_sdk.o(.text.WitReadReg), (544 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitReadReg), (8 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitInit), (8 bytes).
    Removing wit_c_sdk.o(.text.WitDeInit), (72 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitDeInit), (8 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitDelayMsRegister), (8 bytes).
    Removing wit_c_sdk.o(.text.CheckRange), (70 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.CheckRange), (8 bytes).
    Removing wit_c_sdk.o(.text.WitStartAccCali), (112 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitStartAccCali), (8 bytes).
    Removing wit_c_sdk.o(.text.WitStopAccCali), (108 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitStopAccCali), (8 bytes).
    Removing wit_c_sdk.o(.text.WitStartMagCali), (112 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitStartMagCali), (8 bytes).
    Removing wit_c_sdk.o(.text.WitStopMagCali), (112 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitStopMagCali), (8 bytes).
    Removing wit_c_sdk.o(.text.WitSetUartBaud), (140 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitSetUartBaud), (8 bytes).
    Removing wit_c_sdk.o(.text.WitSetCanBaud), (140 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitSetCanBaud), (8 bytes).
    Removing wit_c_sdk.o(.text.WitSetBandwidth), (140 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitSetBandwidth), (8 bytes).
    Removing wit_c_sdk.o(.text.WitSetOutputRate), (140 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitSetOutputRate), (8 bytes).
    Removing wit_c_sdk.o(.text.WitSetContent), (144 bytes).
    Removing wit_c_sdk.o(.ARM.exidx.text.WitSetContent), (8 bytes).
    Removing wit_c_sdk.o(.bss.p_WitI2cWriteFunc), (4 bytes).
    Removing wit_c_sdk.o(.bss.p_WitI2cReadFunc), (4 bytes).
    Removing wit_c_sdk.o(.bss.p_WitCanWriteFunc), (4 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.System_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.SYS_UnlockReg), (8 bytes).
    Removing main.o(.ARM.exidx.text.SYS_LockReg), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.Write_Data_Modbus), (8 bytes).
    Removing main.o(.ARM.exidx.text.delay), (8 bytes).
    Removing main.o(.ARM.exidx.text.SensorUartSend), (8 bytes).
    Removing main.o(.ARM.exidx.text.SensorDataUpdata), (8 bytes).
    Removing main.o(.ARM.exidx.text.Delayms), (8 bytes).
    Removing main.o(.ARM.exidx.text.crc16), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing clk_conf.o(.text), (0 bytes).
    Removing clk_conf.o(.ARM.exidx.text.Clock_Init), (8 bytes).
    Removing periph_conf.o(.text), (0 bytes).
    Removing periph_conf.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing periph_conf.o(.ARM.exidx.text.UART0_Init), (8 bytes).
    Removing periph_conf.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing periph_conf.o(.ARM.exidx.text.UART1_Init), (8 bytes).
    Removing periph_conf.o(.ARM.exidx.text.UART2_Init), (8 bytes).
    Removing periph_conf.o(.ARM.exidx.text.Periph_Init), (8 bytes).
    Removing pin_conf.o(.text), (0 bytes).
    Removing pin_conf.o(.ARM.exidx.text.Pin_Init), (8 bytes).
    Removing int_handler.o(.text), (0 bytes).
    Removing int_handler.o(.ARM.exidx.text.UART0_IRQHandler), (8 bytes).
    Removing int_handler.o(.ARM.exidx.text.robot_Run), (8 bytes).
    Removing int_handler.o(.ARM.exidx.text.robot_Rotate), (8 bytes).
    Removing int_handler.o(.ARM.exidx.text.robot_Stop), (8 bytes).
    Removing int_handler.o(.ARM.exidx.text.Write_Data_Modbus), (8 bytes).
    Removing int_handler.o(.ARM.exidx.text.UART2_IRQHandler), (8 bytes).
    Removing int_handler.o(.ARM.exidx.text.crc16), (8 bytes).

1034 unused section(s) (total 58728 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdlib/abs.c            0x00000000   Number         0  siabs.o ABSOLUTE
    ../clib/microlib/stdlib/abs.c            0x00000000   Number         0  ilabs.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/microlib/fpscalb.c              0x00000000   Number         0  dscalb.o ABSOLUTE
    ../mathlib/cos.c                         0x00000000   Number         0  cos.o ABSOLUTE
    ../mathlib/cos_i.c                       0x00000000   Number         0  cos_i.o ABSOLUTE
    ../mathlib/dunder.c                      0x00000000   Number         0  dunder.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    ../mathlib/poly.c                        0x00000000   Number         0  poly.o ABSOLUTE
    ../mathlib/rred.c                        0x00000000   Number         0  rred.o ABSOLUTE
    ../mathlib/sin.c                         0x00000000   Number         0  sin.o ABSOLUTE
    ../mathlib/sin_i.c                       0x00000000   Number         0  sin_i.o ABSOLUTE
    ..\..\..\..\Library\Device\Nuvoton\M251\Source\ARM\startup_M251.s 0x00000000   Number         0  startup_m251.o ABSOLUTE
    acmp.c                                   0x00000000   Number         0  acmp.o ABSOLUTE
    bpwm.c                                   0x00000000   Number         0  bpwm.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    clk.c                                    0x00000000   Number         0  clk.o ABSOLUTE
    clk_conf.c                               0x00000000   Number         0  clk_conf.o ABSOLUTE
    crc.c                                    0x00000000   Number         0  crc.o ABSOLUTE
    crypto.c                                 0x00000000   Number         0  crypto.o ABSOLUTE
    dac.c                                    0x00000000   Number         0  dac.o ABSOLUTE
    eadc.c                                   0x00000000   Number         0  eadc.o ABSOLUTE
    ebi.c                                    0x00000000   Number         0  ebi.o ABSOLUTE
    fmc.c                                    0x00000000   Number         0  fmc.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    i2c.c                                    0x00000000   Number         0  i2c.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    int_handler.c                            0x00000000   Number         0  int_handler.o ABSOLUTE
    lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    pdma.c                                   0x00000000   Number         0  pdma.o ABSOLUTE
    periph_conf.c                            0x00000000   Number         0  periph_conf.o ABSOLUTE
    pin_conf.c                               0x00000000   Number         0  pin_conf.o ABSOLUTE
    pwm.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    qspi.c                                   0x00000000   Number         0  qspi.o ABSOLUTE
    retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    rtc.c                                    0x00000000   Number         0  rtc.o ABSOLUTE
    sc.c                                     0x00000000   Number         0  sc.o ABSOLUTE
    scuart.c                                 0x00000000   Number         0  scuart.o ABSOLUTE
    spi.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    sys.c                                    0x00000000   Number         0  sys.o ABSOLUTE
    system_M251.c                            0x00000000   Number         0  system_m251.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    timer_pwm.c                              0x00000000   Number         0  timer_pwm.o ABSOLUTE
    tk.c                                     0x00000000   Number         0  tk.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    usbd.c                                   0x00000000   Number         0  usbd.o ABSOLUTE
    usci_i2c.c                               0x00000000   Number         0  usci_i2c.o ABSOLUTE
    usci_spi.c                               0x00000000   Number         0  usci_spi.o ABSOLUTE
    usci_uart.c                              0x00000000   Number         0  usci_uart.o ABSOLUTE
    wdt.c                                    0x00000000   Number         0  wdt.o ABSOLUTE
    wit_c_sdk.c                              0x00000000   Number         0  wit_c_sdk.o ABSOLUTE
    wwdt.c                                   0x00000000   Number         0  wwdt.o ABSOLUTE
    RESET                                    0x00000000   Section      320  startup_m251.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000140   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000140   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000144   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000148   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000148   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000148   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000150   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000150   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000150   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000150   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x00000154   Section      132  startup_m251.o(.text)
    .text                                    0x000001d8   Section        0  siabs.o(.text)
    .text                                    0x000001e0   Section        0  memcpya.o(.text)
    .text                                    0x00000204   Section        0  fmul.o(.text)
    .text                                    0x0000027e   Section        0  fdiv.o(.text)
    .text                                    0x000002fc   Section        0  dadd.o(.text)
    .text                                    0x00000460   Section        0  dmul.o(.text)
    .text                                    0x00000530   Section        0  fflti.o(.text)
    .text                                    0x00000548   Section        0  dflti.o(.text)
    .text                                    0x00000570   Section        0  dfixi.o(.text)
    .text                                    0x000005b8   Section        0  f2d.o(.text)
    .text                                    0x000005e0   Section        0  uldiv.o(.text)
    .text                                    0x00000640   Section        0  llshl.o(.text)
    .text                                    0x00000660   Section        0  llushr.o(.text)
    .text                                    0x00000682   Section        0  llsshr.o(.text)
    .text                                    0x000006a8   Section        0  iusefp.o(.text)
    .text                                    0x000006a8   Section        0  fepilogue.o(.text)
    .text                                    0x0000072a   Section        0  depilogue.o(.text)
    .text                                    0x000007e8   Section        0  ddiv.o(.text)
    .text                                    0x000008d8   Section        0  dfixul.o(.text)
    .text                                    0x00000918   Section       40  cdrcmple.o(.text)
    .text                                    0x00000940   Section       36  init.o(.text)
    .text                                    0x00000964   Section        0  uidiv_div0.o(.text)
    .text                                    0x000009a2   Section        0  dscalb.o(.text)
    .text                                    0x000009d0   Section        0  dfltui.o(.text)
    [Anonymous Symbol]                       0x000009ec   Section        0  clk.o(.text.CLK_EnableModuleClock)
    __arm_cp.20_0                            0x00000a1c   Number         4  clk.o(.text.CLK_EnableModuleClock)
    [Anonymous Symbol]                       0x00000a20   Section        0  clk.o(.text.CLK_EnableXtalRC)
    [Anonymous Symbol]                       0x00000a34   Section        0  clk.o(.text.CLK_GetPCLK0Freq)
    [Anonymous Symbol]                       0x00000ab4   Section        0  clk.o(.text.CLK_GetPCLK1Freq)
    [Anonymous Symbol]                       0x00000b38   Section        0  clk.o(.text.CLK_GetPLLClockFreq)
    __arm_cp.10_0                            0x00000bd8   Number         4  clk.o(.text.CLK_GetPLLClockFreq)
    __arm_cp.10_1                            0x00000bdc   Number         4  clk.o(.text.CLK_GetPLLClockFreq)
    __arm_cp.10_2                            0x00000be0   Number         4  clk.o(.text.CLK_GetPLLClockFreq)
    __arm_cp.10_3                            0x00000be4   Number         4  clk.o(.text.CLK_GetPLLClockFreq)
    [Anonymous Symbol]                       0x00000be8   Section        0  clk.o(.text.CLK_SetHCLK)
    __arm_cp.14_1                            0x00000c44   Number         4  clk.o(.text.CLK_SetHCLK)
    [Anonymous Symbol]                       0x00000c48   Section        0  clk.o(.text.CLK_SetModuleClock)
    __arm_cp.16_0                            0x00000ce0   Number         4  clk.o(.text.CLK_SetModuleClock)
    __arm_cp.16_1                            0x00000ce4   Number         4  clk.o(.text.CLK_SetModuleClock)
    [Anonymous Symbol]                       0x00000ce8   Section        0  clk.o(.text.CLK_WaitClockReady)
    __arm_cp.13_0                            0x00000d2c   Number         4  clk.o(.text.CLK_WaitClockReady)
    __arm_cp.13_1                            0x00000d30   Number         4  clk.o(.text.CLK_WaitClockReady)
    __arm_cp.13_2                            0x00000d34   Number         4  clk.o(.text.CLK_WaitClockReady)
    [Anonymous Symbol]                       0x00000d38   Section        0  clk_conf.o(.text.Clock_Init)
    __arm_cp.0_0                             0x00000dec   Number         4  clk_conf.o(.text.Clock_Init)
    __arm_cp.0_1                             0x00000df0   Number         4  clk_conf.o(.text.Clock_Init)
    __arm_cp.0_2                             0x00000df4   Number         4  clk_conf.o(.text.Clock_Init)
    __arm_cp.0_3                             0x00000df8   Number         4  clk_conf.o(.text.Clock_Init)
    __arm_cp.0_4                             0x00000dfc   Number         4  clk_conf.o(.text.Clock_Init)
    __arm_cp.0_5                             0x00000e00   Number         4  clk_conf.o(.text.Clock_Init)
    __arm_cp.0_6                             0x00000e04   Number         4  clk_conf.o(.text.Clock_Init)
    CopeWitData                              0x00000e09   Thumb Code   328  wit_c_sdk.o(.text.CopeWitData)
    [Anonymous Symbol]                       0x00000e08   Section        0  wit_c_sdk.o(.text.CopeWitData)
    __arm_cp.3_0                             0x00000f50   Number         4  wit_c_sdk.o(.text.CopeWitData)
    __arm_cp.3_1                             0x00000f54   Number         4  wit_c_sdk.o(.text.CopeWitData)
    __arm_cp.3_2                             0x00000f58   Number         4  wit_c_sdk.o(.text.CopeWitData)
    Delayms                                  0x00000f5d   Thumb Code    24  main.o(.text.Delayms)
    [Anonymous Symbol]                       0x00000f5c   Section        0  main.o(.text.Delayms)
    __arm_cp.8_0                             0x00000f74   Number         4  main.o(.text.Delayms)
    DumpStack                                0x00000f79   Thumb Code     8  retarget.o(.text.DumpStack)
    [Anonymous Symbol]                       0x00000f78   Section        0  retarget.o(.text.DumpStack)
    [Anonymous Symbol]                       0x00000f80   Section        0  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_0                             0x00000fbc   Number         4  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_1                             0x00000fc0   Number         4  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_2                             0x00000fc4   Number         4  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_3                             0x00000fc8   Number         4  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_4                             0x00000fcc   Number         4  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_5                             0x00000fd0   Number         4  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_6                             0x00000fd4   Number         4  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_7                             0x00000fd8   Number         4  periph_conf.o(.text.GPIO_Init)
    __arm_cp.0_8                             0x00000fdc   Number         4  periph_conf.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x00000fe0   Section        0  retarget.o(.text.GetChar)
    [Anonymous Symbol]                       0x00000ff8   Section        0  periph_conf.o(.text.Periph_Init)
    [Anonymous Symbol]                       0x0000100c   Section        0  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_0                             0x00001054   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_1                             0x00001058   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_2                             0x0000105c   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_3                             0x00001060   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_4                             0x00001064   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_5                             0x00001068   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_6                             0x0000106c   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_7                             0x00001070   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_8                             0x00001074   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_9                             0x00001078   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_10                            0x0000107c   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_11                            0x00001080   Number         4  pin_conf.o(.text.Pin_Init)
    __arm_cp.0_12                            0x00001084   Number         4  pin_conf.o(.text.Pin_Init)
    [Anonymous Symbol]                       0x00001088   Section        0  retarget.o(.text.ProcessHardFault)
    __arm_cp.1_0                             0x000010f8   Number         4  retarget.o(.text.ProcessHardFault)
    __arm_cp.1_1                             0x000010fc   Number         4  retarget.o(.text.ProcessHardFault)
    __arm_cp.1_2                             0x00001100   Number         4  retarget.o(.text.ProcessHardFault)
    [Anonymous Symbol]                       0x00001104   Section        0  retarget.o(.text.SH_Return)
    SYS_LockReg                              0x00001115   Thumb Code     8  main.o(.text.SYS_LockReg)
    [Anonymous Symbol]                       0x00001114   Section        0  main.o(.text.SYS_LockReg)
    SYS_UnlockReg                            0x0000111d   Thumb Code    32  main.o(.text.SYS_UnlockReg)
    [Anonymous Symbol]                       0x0000111c   Section        0  main.o(.text.SYS_UnlockReg)
    __arm_cp.1_0                             0x0000113c   Number         4  main.o(.text.SYS_UnlockReg)
    [Anonymous Symbol]                       0x00001140   Section        0  retarget.o(.text.SendChar)
    [Anonymous Symbol]                       0x00001150   Section        0  retarget.o(.text.SendChar_ToUART)
    __arm_cp.3_0                             0x00001190   Number         4  retarget.o(.text.SendChar_ToUART)
    __arm_cp.3_1                             0x00001194   Number         4  retarget.o(.text.SendChar_ToUART)
    SensorDataUpdata                         0x00001199   Thumb Code   164  main.o(.text.SensorDataUpdata)
    [Anonymous Symbol]                       0x00001198   Section        0  main.o(.text.SensorDataUpdata)
    __arm_cp.7_0                             0x0000123c   Number         4  main.o(.text.SensorDataUpdata)
    SensorUartSend                           0x00001241   Thumb Code    24  main.o(.text.SensorUartSend)
    [Anonymous Symbol]                       0x00001240   Section        0  main.o(.text.SensorUartSend)
    __arm_cp.6_0                             0x00001258   Number         4  main.o(.text.SensorUartSend)
    [Anonymous Symbol]                       0x0000125c   Section        0  system_m251.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_0                             0x000012bc   Number         4  system_m251.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_1                             0x000012c0   Number         4  system_m251.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_2                             0x000012c4   Number         4  system_m251.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_3                             0x000012c8   Number         4  system_m251.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_5                             0x000012cc   Number         4  system_m251.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_7                             0x000012d0   Number         4  system_m251.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x000012d4   Section        0  system_m251.o(.text.SystemInit)
    __arm_cp.1_0                             0x000012ec   Number         4  system_m251.o(.text.SystemInit)
    __arm_cp.1_1                             0x000012f0   Number         4  system_m251.o(.text.SystemInit)
    __arm_cp.1_2                             0x000012f4   Number         4  system_m251.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000012f8   Section        0  main.o(.text.System_Init)
    [Anonymous Symbol]                       0x00001310   Section        0  timer.o(.text.TIMER_Delay)
    __arm_cp.3_0                             0x00001474   Number         4  timer.o(.text.TIMER_Delay)
    __arm_cp.3_1                             0x00001478   Number         4  timer.o(.text.TIMER_Delay)
    __arm_cp.3_2                             0x0000147c   Number         4  timer.o(.text.TIMER_Delay)
    __arm_cp.3_3                             0x00001480   Number         4  timer.o(.text.TIMER_Delay)
    [Anonymous Symbol]                       0x00001484   Section        0  timer.o(.text.TIMER_GetModuleClock)
    __arm_cp.1_0                             0x00001538   Number         4  timer.o(.text.TIMER_GetModuleClock)
    __arm_cp.1_1                             0x0000153c   Number         4  timer.o(.text.TIMER_GetModuleClock)
    __arm_cp.1_2                             0x00001540   Number         4  timer.o(.text.TIMER_GetModuleClock)
    __arm_cp.1_3                             0x00001544   Number         4  timer.o(.text.TIMER_GetModuleClock)
    __arm_cp.1_4                             0x00001548   Number         4  timer.o(.text.TIMER_GetModuleClock)
    [Anonymous Symbol]                       0x0000154c   Section        0  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_0                             0x000017c4   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_1                             0x000017c8   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_2                             0x000017cc   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_3                             0x000017d0   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_4                             0x000017d4   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_6                             0x000017d8   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_7                             0x000017dc   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_8                             0x000017e0   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_10                            0x000017e4   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_11                            0x000017e8   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_12                            0x000017ec   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_13                            0x000017f0   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_14                            0x000017f4   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_15                            0x000017f8   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_16                            0x000017fc   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_17                            0x00001800   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_18                            0x00001804   Number         4  int_handler.o(.text.UART0_IRQHandler)
    __arm_cp.0_19                            0x00001808   Number         4  int_handler.o(.text.UART0_IRQHandler)
    [Anonymous Symbol]                       0x0000180c   Section        0  periph_conf.o(.text.UART0_Init)
    __arm_cp.1_0                             0x00001838   Number         4  periph_conf.o(.text.UART0_Init)
    __arm_cp.1_1                             0x0000183c   Number         4  periph_conf.o(.text.UART0_Init)
    [Anonymous Symbol]                       0x00001840   Section        0  periph_conf.o(.text.UART1_Init)
    __arm_cp.3_1                             0x00001858   Number         4  periph_conf.o(.text.UART1_Init)
    [Anonymous Symbol]                       0x0000185c   Section        0  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_0                             0x00001974   Number         4  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_1                             0x00001978   Number         4  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_3                             0x0000197c   Number         4  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_4                             0x00001980   Number         4  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_5                             0x00001984   Number         4  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_6                             0x00001988   Number         4  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_7                             0x0000198c   Number         4  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_8                             0x00001990   Number         4  int_handler.o(.text.UART2_IRQHandler)
    __arm_cp.5_9                             0x00001994   Number         4  int_handler.o(.text.UART2_IRQHandler)
    [Anonymous Symbol]                       0x00001998   Section        0  periph_conf.o(.text.UART2_Init)
    __arm_cp.4_1                             0x000019c4   Number         4  periph_conf.o(.text.UART2_Init)
    [Anonymous Symbol]                       0x000019c8   Section        0  uart.o(.text.UART_ClearIntFlag)
    __arm_cp.0_0                             0x00001a54   Number         4  uart.o(.text.UART_ClearIntFlag)
    __arm_cp.0_1                             0x00001a58   Number         4  uart.o(.text.UART_ClearIntFlag)
    [Anonymous Symbol]                       0x00001a5c   Section        0  uart.o(.text.UART_EnableInt)
    [Anonymous Symbol]                       0x00001a70   Section        0  uart.o(.text.UART_Open)
    __arm_cp.6_0                             0x00001bf0   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_1                             0x00001bf4   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_2                             0x00001bf8   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_3                             0x00001bfc   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_4                             0x00001c00   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_5                             0x00001c04   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_6                             0x00001c08   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_7                             0x00001c0c   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_8                             0x00001c10   Number         4  uart.o(.text.UART_Open)
    __arm_cp.6_9                             0x00001c14   Number         4  uart.o(.text.UART_Open)
    [Anonymous Symbol]                       0x00001c18   Section        0  uart.o(.text.UART_Write)
    [Anonymous Symbol]                       0x00001c84   Section        0  wit_c_sdk.o(.text.WitDelayMsRegister)
    __arm_cp.13_0                            0x00001ca8   Number         4  wit_c_sdk.o(.text.WitDelayMsRegister)
    [Anonymous Symbol]                       0x00001cac   Section        0  wit_c_sdk.o(.text.WitInit)
    __arm_cp.11_1                            0x00001ce0   Number         4  wit_c_sdk.o(.text.WitInit)
    [Anonymous Symbol]                       0x00001ce4   Section        0  wit_c_sdk.o(.text.WitRegisterCallBack)
    [Anonymous Symbol]                       0x00001d08   Section        0  wit_c_sdk.o(.text.WitSerialDataIn)
    __arm_cp.1_0                             0x00001ee8   Number         4  wit_c_sdk.o(.text.WitSerialDataIn)
    __arm_cp.1_1                             0x00001eec   Number         4  wit_c_sdk.o(.text.WitSerialDataIn)
    __arm_cp.1_2                             0x00001ef0   Number         4  wit_c_sdk.o(.text.WitSerialDataIn)
    __arm_cp.1_3                             0x00001ef4   Number         4  wit_c_sdk.o(.text.WitSerialDataIn)
    __arm_cp.1_4                             0x00001ef8   Number         4  wit_c_sdk.o(.text.WitSerialDataIn)
    __arm_cp.1_5                             0x00001efc   Number         4  wit_c_sdk.o(.text.WitSerialDataIn)
    [Anonymous Symbol]                       0x00001f00   Section        0  wit_c_sdk.o(.text.WitSerialWriteRegister)
    __arm_cp.0_0                             0x00001f24   Number         4  wit_c_sdk.o(.text.WitSerialWriteRegister)
    Write_Data_Modbus                        0x00001f29   Thumb Code   104  main.o(.text.Write_Data_Modbus)
    [Anonymous Symbol]                       0x00001f28   Section        0  main.o(.text.Write_Data_Modbus)
    Write_Data_Modbus                        0x00001f91   Thumb Code   104  int_handler.o(.text.Write_Data_Modbus)
    [Anonymous Symbol]                       0x00001f90   Section        0  int_handler.o(.text.Write_Data_Modbus)
    __arm_cp.4_0                             0x00001ff8   Number         4  int_handler.o(.text.Write_Data_Modbus)
    __arm_cp.4_2                             0x00001ffc   Number         4  int_handler.o(.text.Write_Data_Modbus)
    __CRC16                                  0x00002001   Thumb Code   104  wit_c_sdk.o(.text.__CRC16)
    [Anonymous Symbol]                       0x00002000   Section        0  wit_c_sdk.o(.text.__CRC16)
    __arm_cp.4_0                             0x00002068   Number         4  wit_c_sdk.o(.text.__CRC16)
    __arm_cp.4_1                             0x0000206c   Number         4  wit_c_sdk.o(.text.__CRC16)
    __CaliSum                                0x00002071   Thumb Code    58  wit_c_sdk.o(.text.__CaliSum)
    [Anonymous Symbol]                       0x00002070   Section        0  wit_c_sdk.o(.text.__CaliSum)
    __NVIC_EnableIRQ                         0x000020ad   Thumb Code    48  periph_conf.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x000020ac   Section        0  periph_conf.o(.text.__NVIC_EnableIRQ)
    __arm_cp.2_0                             0x000020dc   Number         4  periph_conf.o(.text.__NVIC_EnableIRQ)
    crc16                                    0x000020e1   Thumb Code    88  main.o(.text.crc16)
    [Anonymous Symbol]                       0x000020e0   Section        0  main.o(.text.crc16)
    __arm_cp.9_0                             0x00002138   Number         4  main.o(.text.crc16)
    __arm_cp.9_1                             0x0000213c   Number         4  main.o(.text.crc16)
    crc16                                    0x00002141   Thumb Code    88  int_handler.o(.text.crc16)
    [Anonymous Symbol]                       0x00002140   Section        0  int_handler.o(.text.crc16)
    __arm_cp.6_0                             0x00002198   Number         4  int_handler.o(.text.crc16)
    __arm_cp.6_1                             0x0000219c   Number         4  int_handler.o(.text.crc16)
    delay                                    0x000021a1   Thumb Code    20  main.o(.text.delay)
    [Anonymous Symbol]                       0x000021a0   Section        0  main.o(.text.delay)
    [Anonymous Symbol]                       0x000021b4   Section        0  retarget.o(.text.fputc)
    [Anonymous Symbol]                       0x000021c8   Section        0  main.o(.text.main)
    __arm_cp.3_0                             0x0000228c   Number         4  main.o(.text.main)
    __arm_cp.3_1                             0x00002290   Number         4  main.o(.text.main)
    __arm_cp.3_2                             0x00002294   Number         4  main.o(.text.main)
    __arm_cp.3_3                             0x00002298   Number         4  main.o(.text.main)
    __arm_cp.3_4                             0x0000229c   Number         4  main.o(.text.main)
    __arm_cp.3_5                             0x000022a0   Number         4  main.o(.text.main)
    __arm_cp.3_6                             0x000022a4   Number         4  main.o(.text.main)
    __arm_cp.3_7                             0x000022a8   Number         4  main.o(.text.main)
    robot_Rotate                             0x000022ad   Thumb Code    80  int_handler.o(.text.robot_Rotate)
    [Anonymous Symbol]                       0x000022ac   Section        0  int_handler.o(.text.robot_Rotate)
    robot_Run                                0x000022fd   Thumb Code   512  int_handler.o(.text.robot_Run)
    [Anonymous Symbol]                       0x000022fc   Section        0  int_handler.o(.text.robot_Run)
    __arm_cp.1_0                             0x000024fc   Number         4  int_handler.o(.text.robot_Run)
    __arm_cp.1_1                             0x00002500   Number         4  int_handler.o(.text.robot_Run)
    __arm_cp.1_2                             0x00002504   Number         4  int_handler.o(.text.robot_Run)
    __arm_cp.1_3                             0x00002508   Number         4  int_handler.o(.text.robot_Run)
    __arm_cp.1_7                             0x0000250c   Number         4  int_handler.o(.text.robot_Run)
    __arm_cp.1_8                             0x00002510   Number         4  int_handler.o(.text.robot_Run)
    __arm_cp.1_9                             0x00002514   Number         4  int_handler.o(.text.robot_Run)
    robot_Stop                               0x00002519   Thumb Code   120  int_handler.o(.text.robot_Stop)
    [Anonymous Symbol]                       0x00002518   Section        0  int_handler.o(.text.robot_Stop)
    __arm_cp.3_0                             0x00002590   Number         4  int_handler.o(.text.robot_Stop)
    __arm_cp.3_1                             0x00002594   Number         4  int_handler.o(.text.robot_Stop)
    __arm_cp.3_2                             0x00002598   Number         4  int_handler.o(.text.robot_Stop)
    __arm_cp.3_3                             0x0000259c   Number         4  int_handler.o(.text.robot_Stop)
    __arm_cp.3_4                             0x000025a0   Number         4  int_handler.o(.text.robot_Stop)
    i.__0printf                              0x000025a4   Section        0  printfa.o(i.__0printf)
    i.__ARM_clz                              0x000025c4   Section        0  depilogue.o(i.__ARM_clz)
    i.__ARM_common_ll_muluu                  0x000025f2   Section        0  rred.o(i.__ARM_common_ll_muluu)
    i.__ARM_fpclassify                       0x00002624   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__ieee754_rem_pio2                     0x00002650   Section        0  rred.o(i.__ieee754_rem_pio2)
    i.__kernel_cos                           0x000029ec   Section        0  cos_i.o(i.__kernel_cos)
    i.__kernel_poly                          0x00002ae0   Section        0  poly.o(i.__kernel_poly)
    i.__kernel_sin                           0x00002b8c   Section        0  sin_i.o(i.__kernel_sin)
    i.__mathlib_dbl_infnan                   0x00002c78   Section        0  dunder.o(i.__mathlib_dbl_infnan)
    i.__mathlib_dbl_invalid                  0x00002c82   Section        0  dunder.o(i.__mathlib_dbl_invalid)
    i.__mathlib_dbl_underflow                0x00002c94   Section        0  dunder.o(i.__mathlib_dbl_underflow)
    i.__scatterload_copy                     0x00002ca8   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00002cb6   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00002cb8   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.__set_errno                            0x00002cc8   Section        0  errno.o(i.__set_errno)
    _fp_digits                               0x00002cd5   Thumb Code   344  printfa.o(i._fp_digits)
    i._fp_digits                             0x00002cd4   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x00002e49   Thumb Code  1754  printfa.o(i._printf_core)
    i._printf_core                           0x00002e48   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x00003535   Thumb Code    32  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x00003534   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x00003555   Thumb Code    44  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x00003554   Section        0  printfa.o(i._printf_pre_padding)
    i.cos                                    0x00003580   Section        0  cos.o(i.cos)
    i.sin                                    0x00003618   Section        0  sin.o(i.sin)
    C                                        0x000036b8   Data          48  cos_i.o(.constdata)
    .constdata                               0x000036b8   Section       48  cos_i.o(.constdata)
    pio2s                                    0x000036e8   Data          48  rred.o(.constdata)
    .constdata                               0x000036e8   Section      204  rred.o(.constdata)
    twooverpi                                0x00003718   Data         156  rred.o(.constdata)
    S                                        0x000037b8   Data          40  sin_i.o(.constdata)
    .constdata                               0x000037b8   Section       40  sin_i.o(.constdata)
    [Anonymous Symbol]                       0x000037e0   Section        0  uart.o(.rodata..L__const.UART_Open.au32ClkTbl)
    __auchCRCHi                              0x000037f8   Data         256  wit_c_sdk.o(.rodata.__auchCRCHi)
    [Anonymous Symbol]                       0x000037f8   Section        0  wit_c_sdk.o(.rodata.__auchCRCHi)
    __auchCRCLo                              0x000038f8   Data         256  wit_c_sdk.o(.rodata.__auchCRCLo)
    [Anonymous Symbol]                       0x000038f8   Section        0  wit_c_sdk.o(.rodata.__auchCRCLo)
    [Anonymous Symbol]                       0x000039f8   Section        0  timer.o(.rodata.cst32)
    [Anonymous Symbol]                       0x00003a38   Section        0  retarget.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003a47   Section        0  int_handler.o(.rodata.str1.1)
    table_crc_hi                             0x00003a98   Data         256  main.o(.rodata.table_crc_hi)
    [Anonymous Symbol]                       0x00003a98   Section        0  main.o(.rodata.table_crc_hi)
    table_crc_hi                             0x00003b98   Data         256  int_handler.o(.rodata.table_crc_hi)
    [Anonymous Symbol]                       0x00003b98   Section        0  int_handler.o(.rodata.table_crc_hi)
    table_crc_lo                             0x00003c98   Data         256  main.o(.rodata.table_crc_lo)
    [Anonymous Symbol]                       0x00003c98   Section        0  main.o(.rodata.table_crc_lo)
    table_crc_lo                             0x00003d98   Data         256  int_handler.o(.rodata.table_crc_lo)
    [Anonymous Symbol]                       0x00003d98   Section        0  int_handler.o(.rodata.table_crc_lo)
    _errno                                   0x20000000   Data           4  errno.o(.data)
    .data                                    0x20000000   Section        4  errno.o(.data)
    ACC_ADDR                                 0x20000004   Data           2  main.o(.data.ACC_ADDR)
    [Anonymous Symbol]                       0x20000004   Section        0  main.o(.data.ACC_ADDR)
    CTRL_CMD                                 0x20000006   Data           2  main.o(.data.CTRL_CMD)
    [Anonymous Symbol]                       0x20000006   Section        0  main.o(.data.CTRL_CMD)
    CTRL_CMD                                 0x20000008   Data           2  int_handler.o(.data.CTRL_CMD)
    [Anonymous Symbol]                       0x20000008   Section        0  int_handler.o(.data.CTRL_CMD)
    DEC_ADDR                                 0x20000010   Data           2  main.o(.data.DEC_ADDR)
    [Anonymous Symbol]                       0x20000010   Section        0  main.o(.data.DEC_ADDR)
    SPEED_ADDR                               0x20000018   Data           2  int_handler.o(.data.SPEED_ADDR)
    [Anonymous Symbol]                       0x20000018   Section        0  int_handler.o(.data.SPEED_ADDR)
    g_ICE_Connected                          0x20000020   Data           4  retarget.o(.data.g_ICE_Connected)
    [Anonymous Symbol]                       0x20000020   Section        0  retarget.o(.data.g_ICE_Connected)
    s_ucAddr                                 0x20000024   Data           1  wit_c_sdk.o(.data.s_ucAddr)
    [Anonymous Symbol]                       0x20000024   Section        0  wit_c_sdk.o(.data.s_ucAddr)
    dir1                                     0x2000007c   Data           1  int_handler.o(.bss.dir1)
    [Anonymous Symbol]                       0x2000007c   Section        0  int_handler.o(.bss.dir1)
    dir2                                     0x2000007d   Data           1  int_handler.o(.bss.dir2)
    [Anonymous Symbol]                       0x2000007d   Section        0  int_handler.o(.bss.dir2)
    dir3                                     0x2000007e   Data           1  int_handler.o(.bss.dir3)
    [Anonymous Symbol]                       0x2000007e   Section        0  int_handler.o(.bss.dir3)
    fAcc                                     0x20000080   Data          12  int_handler.o(.bss.fAcc)
    [Anonymous Symbol]                       0x20000080   Section        0  int_handler.o(.bss.fAcc)
    fAngle                                   0x2000008c   Data          12  int_handler.o(.bss.fAngle)
    [Anonymous Symbol]                       0x2000008c   Section        0  int_handler.o(.bss.fAngle)
    fGyro                                    0x20000098   Data          12  int_handler.o(.bss.fGyro)
    [Anonymous Symbol]                       0x20000098   Section        0  int_handler.o(.bss.fGyro)
    offSet_z                                 0x200000a8   Data           4  int_handler.o(.bss.offSet_z)
    [Anonymous Symbol]                       0x200000a8   Section        0  int_handler.o(.bss.offSet_z)
    p_WitDelaymsFunc                         0x200000ac   Data           4  wit_c_sdk.o(.bss.p_WitDelaymsFunc)
    [Anonymous Symbol]                       0x200000ac   Section        0  wit_c_sdk.o(.bss.p_WitDelaymsFunc)
    p_WitRegUpdateCbFunc                     0x200000b0   Data           4  wit_c_sdk.o(.bss.p_WitRegUpdateCbFunc)
    [Anonymous Symbol]                       0x200000b0   Section        0  wit_c_sdk.o(.bss.p_WitRegUpdateCbFunc)
    p_WitSerialWriteFunc                     0x200000b4   Data           4  wit_c_sdk.o(.bss.p_WitSerialWriteFunc)
    [Anonymous Symbol]                       0x200000b4   Section        0  wit_c_sdk.o(.bss.p_WitSerialWriteFunc)
    s_cDataUpdate                            0x200001d8   Data           1  main.o(.bss.s_cDataUpdate)
    [Anonymous Symbol]                       0x200001d8   Section        0  main.o(.bss.s_cDataUpdate)
    s_cDataUpdate                            0x200001d9   Data           1  int_handler.o(.bss.s_cDataUpdate)
    [Anonymous Symbol]                       0x200001d9   Section        0  int_handler.o(.bss.s_cDataUpdate)
    s_ucWitDataBuff                          0x200001da   Data         256  wit_c_sdk.o(.bss.s_ucWitDataBuff)
    [Anonymous Symbol]                       0x200001da   Section        0  wit_c_sdk.o(.bss.s_ucWitDataBuff)
    s_uiProtoclo                             0x200002dc   Data           4  wit_c_sdk.o(.bss.s_uiProtoclo)
    [Anonymous Symbol]                       0x200002dc   Section        0  wit_c_sdk.o(.bss.s_uiProtoclo)
    s_uiReadRegIndex                         0x200002e0   Data           4  wit_c_sdk.o(.bss.s_uiReadRegIndex)
    [Anonymous Symbol]                       0x200002e0   Section        0  wit_c_sdk.o(.bss.s_uiReadRegIndex)
    s_uiWitDataCnt                           0x200002e4   Data           4  wit_c_sdk.o(.bss.s_uiWitDataCnt)
    [Anonymous Symbol]                       0x200002e4   Section        0  wit_c_sdk.o(.bss.s_uiWitDataCnt)
    speed1                                   0x200002e8   Data           4  int_handler.o(.bss.speed1)
    [Anonymous Symbol]                       0x200002e8   Section        0  int_handler.o(.bss.speed1)
    speed2                                   0x200002ec   Data           4  int_handler.o(.bss.speed2)
    [Anonymous Symbol]                       0x200002ec   Section        0  int_handler.o(.bss.speed2)
    speed3                                   0x200002f0   Data           4  int_handler.o(.bss.speed3)
    [Anonymous Symbol]                       0x200002f0   Section        0  int_handler.o(.bss.speed3)
    x                                        0x200002f4   Data           4  int_handler.o(.bss.x)
    [Anonymous Symbol]                       0x200002f4   Section        0  int_handler.o(.bss.x)
    STACK                                    0x200002f8   Section     2048  startup_m251.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$8M$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_m251.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x00000140   Data           0  startup_m251.o(RESET)
    __Vectors_Size                           0x00000140   Number         0  startup_m251.o ABSOLUTE
    __main                                   0x00000141   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000141   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000145   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000149   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000149   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000149   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000149   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000151   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000151   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000155   Thumb Code    56  startup_m251.o(.text)
    NMI_Handler                              0x0000018d   Thumb Code     2  startup_m251.o(.text)
    HardFault_Handler                        0x0000018f   Thumb Code    16  startup_m251.o(.text)
    SVC_Handler                              0x0000019f   Thumb Code     2  startup_m251.o(.text)
    PendSV_Handler                           0x000001a1   Thumb Code     2  startup_m251.o(.text)
    SysTick_Handler                          0x000001a3   Thumb Code     2  startup_m251.o(.text)
    ACMP01_IRQHandler                        0x000001a5   Thumb Code     0  startup_m251.o(.text)
    BOD_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    BPWM0_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    BPWM1_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    BRAKE0_IRQHandler                        0x000001a5   Thumb Code     0  startup_m251.o(.text)
    BRAKE1_IRQHandler                        0x000001a5   Thumb Code     0  startup_m251.o(.text)
    CLKFAIL_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    CRPT_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    DAC_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    DEFAULT_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EADC_INT0_IRQHandler                     0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EADC_INT1_IRQHandler                     0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EADC_INT2_IRQHandler                     0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EADC_INT3_IRQHandler                     0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EINT0_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EINT1_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EINT2_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EINT3_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EINT4_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    EINT5_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    GPA_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    GPB_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    GPC_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    GPD_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    GPE_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    GPF_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    I2C0_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    I2C1_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    IRCTRIM_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    LCD_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    OPA_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PDMA_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PSIO_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PWM0_P0_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PWM0_P1_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PWM0_P2_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PWM1_P0_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PWM1_P1_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PWM1_P2_IRQHandler                       0x000001a5   Thumb Code     0  startup_m251.o(.text)
    PWRWU_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    QSPI0_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    RTC_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    SC0_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    SPI0_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    SPI1_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    TAMPER_IRQHandler                        0x000001a5   Thumb Code     0  startup_m251.o(.text)
    TK_IRQHandler                            0x000001a5   Thumb Code     0  startup_m251.o(.text)
    TMR0_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    TMR1_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    TMR2_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    TMR3_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    UART1_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    UART3_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    USBD_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    USCI0_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    USCI1_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    USCI2_IRQHandler                         0x000001a5   Thumb Code     0  startup_m251.o(.text)
    WDT_IRQHandler                           0x000001a5   Thumb Code     0  startup_m251.o(.text)
    WWDT_IRQHandler                          0x000001a5   Thumb Code     0  startup_m251.o(.text)
    SH_DoCommand                             0x000001a9   Thumb Code    10  startup_m251.o(.text)
    __PC                                     0x000001b3   Thumb Code     6  startup_m251.o(.text)
    abs                                      0x000001d9   Thumb Code     8  siabs.o(.text)
    __aeabi_memcpy                           0x000001e1   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001e1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001e1   Thumb Code     0  memcpya.o(.text)
    __aeabi_fmul                             0x00000205   Thumb Code   122  fmul.o(.text)
    __aeabi_fdiv                             0x0000027f   Thumb Code   124  fdiv.o(.text)
    __aeabi_dadd                             0x000002fd   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x00000445   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x00000451   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x00000461   Thumb Code   202  dmul.o(.text)
    __aeabi_i2f                              0x00000531   Thumb Code    22  fflti.o(.text)
    __aeabi_i2d                              0x00000549   Thumb Code    34  dflti.o(.text)
    __aeabi_d2iz                             0x00000571   Thumb Code    62  dfixi.o(.text)
    __aeabi_f2d                              0x000005b9   Thumb Code    40  f2d.o(.text)
    __aeabi_uldivmod                         0x000005e1   Thumb Code    96  uldiv.o(.text)
    __aeabi_llsl                             0x00000641   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x00000641   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00000661   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x00000661   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x00000683   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x00000683   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x000006a9   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x000006a9   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x000006b9   Thumb Code   114  fepilogue.o(.text)
    _double_round                            0x0000072b   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x00000745   Thumb Code   164  depilogue.o(.text)
    __aeabi_ddiv                             0x000007e9   Thumb Code   234  ddiv.o(.text)
    __aeabi_d2ulz                            0x000008d9   Thumb Code    54  dfixul.o(.text)
    __aeabi_cdrcmple                         0x00000919   Thumb Code    38  cdrcmple.o(.text)
    __scatterload                            0x00000941   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000941   Thumb Code     0  init.o(.text)
    __aeabi_uidiv$div0                       0x00000965   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x00000965   Thumb Code    62  uidiv_div0.o(.text)
    __ARM_scalbn                             0x000009a3   Thumb Code    44  dscalb.o(.text)
    scalbn                                   0x000009a3   Thumb Code     0  dscalb.o(.text)
    __aeabi_ui2d                             0x000009d1   Thumb Code    24  dfltui.o(.text)
    CLK_EnableModuleClock                    0x000009ed   Thumb Code    48  clk.o(.text.CLK_EnableModuleClock)
    CLK_EnableXtalRC                         0x00000a21   Thumb Code    20  clk.o(.text.CLK_EnableXtalRC)
    CLK_GetPCLK0Freq                         0x00000a35   Thumb Code   128  clk.o(.text.CLK_GetPCLK0Freq)
    CLK_GetPCLK1Freq                         0x00000ab5   Thumb Code   132  clk.o(.text.CLK_GetPCLK1Freq)
    CLK_GetPLLClockFreq                      0x00000b39   Thumb Code   160  clk.o(.text.CLK_GetPLLClockFreq)
    CLK_SetHCLK                              0x00000be9   Thumb Code    92  clk.o(.text.CLK_SetHCLK)
    CLK_SetModuleClock                       0x00000c49   Thumb Code   152  clk.o(.text.CLK_SetModuleClock)
    CLK_WaitClockReady                       0x00000ce9   Thumb Code    68  clk.o(.text.CLK_WaitClockReady)
    Clock_Init                               0x00000d39   Thumb Code   180  clk_conf.o(.text.Clock_Init)
    GPIO_Init                                0x00000f81   Thumb Code    60  periph_conf.o(.text.GPIO_Init)
    GetChar                                  0x00000fe1   Thumb Code    24  retarget.o(.text.GetChar)
    Periph_Init                              0x00000ff9   Thumb Code    20  periph_conf.o(.text.Periph_Init)
    Pin_Init                                 0x0000100d   Thumb Code    72  pin_conf.o(.text.Pin_Init)
    ProcessHardFault                         0x00001089   Thumb Code   112  retarget.o(.text.ProcessHardFault)
    SH_Return                                0x00001105   Thumb Code    14  retarget.o(.text.SH_Return)
    SendChar                                 0x00001141   Thumb Code    16  retarget.o(.text.SendChar)
    SendChar_ToUART                          0x00001151   Thumb Code    64  retarget.o(.text.SendChar_ToUART)
    SystemCoreClockUpdate                    0x0000125d   Thumb Code    96  system_m251.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x000012d5   Thumb Code    24  system_m251.o(.text.SystemInit)
    System_Init                              0x000012f9   Thumb Code    24  main.o(.text.System_Init)
    TIMER_Delay                              0x00001311   Thumb Code   356  timer.o(.text.TIMER_Delay)
    TIMER_GetModuleClock                     0x00001485   Thumb Code   180  timer.o(.text.TIMER_GetModuleClock)
    UART0_IRQHandler                         0x0000154d   Thumb Code   632  int_handler.o(.text.UART0_IRQHandler)
    UART0_Init                               0x0000180d   Thumb Code    44  periph_conf.o(.text.UART0_Init)
    UART1_Init                               0x00001841   Thumb Code    24  periph_conf.o(.text.UART1_Init)
    UART2_IRQHandler                         0x0000185d   Thumb Code   280  int_handler.o(.text.UART2_IRQHandler)
    UART2_Init                               0x00001999   Thumb Code    44  periph_conf.o(.text.UART2_Init)
    UART_ClearIntFlag                        0x000019c9   Thumb Code   140  uart.o(.text.UART_ClearIntFlag)
    UART_EnableInt                           0x00001a5d   Thumb Code    20  uart.o(.text.UART_EnableInt)
    UART_Open                                0x00001a71   Thumb Code   384  uart.o(.text.UART_Open)
    UART_Write                               0x00001c19   Thumb Code   106  uart.o(.text.UART_Write)
    WitDelayMsRegister                       0x00001c85   Thumb Code    36  wit_c_sdk.o(.text.WitDelayMsRegister)
    WitInit                                  0x00001cad   Thumb Code    52  wit_c_sdk.o(.text.WitInit)
    WitRegisterCallBack                      0x00001ce5   Thumb Code    36  wit_c_sdk.o(.text.WitRegisterCallBack)
    WitSerialDataIn                          0x00001d09   Thumb Code   480  wit_c_sdk.o(.text.WitSerialDataIn)
    WitSerialWriteRegister                   0x00001f01   Thumb Code    36  wit_c_sdk.o(.text.WitSerialWriteRegister)
    fputc                                    0x000021b5   Thumb Code    20  retarget.o(.text.fputc)
    main                                     0x000021c9   Thumb Code   196  main.o(.text.main)
    __0printf                                0x000025a5   Thumb Code    24  printfa.o(i.__0printf)
    __1printf                                0x000025a5   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x000025a5   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x000025a5   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x000025a5   Thumb Code     0  printfa.o(i.__0printf)
    __ARM_clz                                0x000025c5   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __ARM_common_ll_muluu                    0x000025f3   Thumb Code    50  rred.o(i.__ARM_common_ll_muluu)
    __ARM_fpclassify                         0x00002625   Thumb Code    40  fpclassify.o(i.__ARM_fpclassify)
    __ieee754_rem_pio2                       0x00002651   Thumb Code   838  rred.o(i.__ieee754_rem_pio2)
    __kernel_cos                             0x000029ed   Thumb Code   224  cos_i.o(i.__kernel_cos)
    __kernel_poly                            0x00002ae1   Thumb Code   172  poly.o(i.__kernel_poly)
    __kernel_sin                             0x00002b8d   Thumb Code   222  sin_i.o(i.__kernel_sin)
    __mathlib_dbl_infnan                     0x00002c79   Thumb Code    10  dunder.o(i.__mathlib_dbl_infnan)
    __mathlib_dbl_invalid                    0x00002c83   Thumb Code    16  dunder.o(i.__mathlib_dbl_invalid)
    __mathlib_dbl_underflow                  0x00002c95   Thumb Code    14  dunder.o(i.__mathlib_dbl_underflow)
    __scatterload_copy                       0x00002ca9   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00002cb7   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00002cb9   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    __set_errno                              0x00002cc9   Thumb Code     6  errno.o(i.__set_errno)
    cos                                      0x00003581   Thumb Code   142  cos.o(i.cos)
    sin                                      0x00003619   Thumb Code   146  sin.o(i.sin)
    gau32ClkSrcTbl                           0x00003a18   Data          32  system_m251.o(.rodata.gau32ClkSrcTbl)
    Region$$Table$$Base                      0x00003e98   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003eb8   Number         0  anon$$obj.o(Region$$Table)
    CyclesPerUs                              0x2000000c   Data           4  system_m251.o(.data.CyclesPerUs)
    PllClock                                 0x20000014   Data           4  system_m251.o(.data.PllClock)
    SystemCoreClock                          0x2000001c   Data           4  system_m251.o(.data.SystemCoreClock)
    __stdout                                 0x20000028   Data          84  retarget.o(.bss.__stdout)
    g_CLK_i32ErrCode                         0x200000a4   Data           4  clk.o(.bss.g_CLK_i32ErrCode)
    sReg                                     0x200000b8   Data         288  wit_c_sdk.o(.bss.sReg)
    __initial_sp                             0x20000af8   Data           0  startup_m251.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000155

  Load Region LR_1 (Base: 0x00000000, Size: 0x00003ee0, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003eb8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000140   Data   RO           20    RESET               startup_m251.o
    0x00000140   0x00000140   0x00000000   Code   RO         1375  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x00000140   0x00000140   0x00000004   Code   RO         1455    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x00000144   0x00000144   0x00000004   Code   RO         1458    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x00000148   0x00000148   0x00000000   Code   RO         1460    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x00000148   0x00000148   0x00000000   Code   RO         1462    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x00000148   0x00000148   0x00000008   Code   RO         1463    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x00000150   0x00000150   0x00000000   Code   RO         1465    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x00000150   0x00000150   0x00000000   Code   RO         1467    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x00000150   0x00000150   0x00000004   Code   RO         1456    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x00000154   0x00000154   0x00000084   Code   RO           21  * .text               startup_m251.o
    0x000001d8   0x000001d8   0x00000008   Code   RO         1376    .text               mc_p.l(siabs.o)
    0x000001e0   0x000001e0   0x00000024   Code   RO         1380    .text               mc_p.l(memcpya.o)
    0x00000204   0x00000204   0x0000007a   Code   RO         1412    .text               mf_p.l(fmul.o)
    0x0000027e   0x0000027e   0x0000007c   Code   RO         1414    .text               mf_p.l(fdiv.o)
    0x000002fa   0x000002fa   0x00000002   PAD
    0x000002fc   0x000002fc   0x00000164   Code   RO         1416    .text               mf_p.l(dadd.o)
    0x00000460   0x00000460   0x000000d0   Code   RO         1418    .text               mf_p.l(dmul.o)
    0x00000530   0x00000530   0x00000016   Code   RO         1420    .text               mf_p.l(fflti.o)
    0x00000546   0x00000546   0x00000002   PAD
    0x00000548   0x00000548   0x00000028   Code   RO         1422    .text               mf_p.l(dflti.o)
    0x00000570   0x00000570   0x00000048   Code   RO         1424    .text               mf_p.l(dfixi.o)
    0x000005b8   0x000005b8   0x00000028   Code   RO         1426    .text               mf_p.l(f2d.o)
    0x000005e0   0x000005e0   0x00000060   Code   RO         1473    .text               mc_p.l(uldiv.o)
    0x00000640   0x00000640   0x00000020   Code   RO         1475    .text               mc_p.l(llshl.o)
    0x00000660   0x00000660   0x00000022   Code   RO         1477    .text               mc_p.l(llushr.o)
    0x00000682   0x00000682   0x00000026   Code   RO         1479    .text               mc_p.l(llsshr.o)
    0x000006a8   0x000006a8   0x00000000   Code   RO         1488    .text               mc_p.l(iusefp.o)
    0x000006a8   0x000006a8   0x00000082   Code   RO         1489    .text               mf_p.l(fepilogue.o)
    0x0000072a   0x0000072a   0x000000be   Code   RO         1491    .text               mf_p.l(depilogue.o)
    0x000007e8   0x000007e8   0x000000f0   Code   RO         1495    .text               mf_p.l(ddiv.o)
    0x000008d8   0x000008d8   0x00000040   Code   RO         1497    .text               mf_p.l(dfixul.o)
    0x00000918   0x00000918   0x00000028   Code   RO         1499    .text               mf_p.l(cdrcmple.o)
    0x00000940   0x00000940   0x00000024   Code   RO         1505    .text               mc_p.l(init.o)
    0x00000964   0x00000964   0x0000003e   Code   RO         1509    .text               mc_p.l(uidiv_div0.o)
    0x000009a2   0x000009a2   0x0000002c   Code   RO         1515    .text               mf_p.l(dscalb.o)
    0x000009ce   0x000009ce   0x00000002   PAD
    0x000009d0   0x000009d0   0x0000001c   Code   RO         1517    .text               mf_p.l(dfltui.o)
    0x000009ec   0x000009ec   0x00000034   Code   RO           68    .text.CLK_EnableModuleClock  clk.o
    0x00000a20   0x00000a20   0x00000014   Code   RO           64    .text.CLK_EnableXtalRC  clk.o
    0x00000a34   0x00000a34   0x00000080   Code   RO           40    .text.CLK_GetPCLK0Freq  clk.o
    0x00000ab4   0x00000ab4   0x00000084   Code   RO           42    .text.CLK_GetPCLK1Freq  clk.o
    0x00000b38   0x00000b38   0x000000b0   Code   RO           48    .text.CLK_GetPLLClockFreq  clk.o
    0x00000be8   0x00000be8   0x00000060   Code   RO           56    .text.CLK_SetHCLK   clk.o
    0x00000c48   0x00000c48   0x000000a0   Code   RO           60    .text.CLK_SetModuleClock  clk.o
    0x00000ce8   0x00000ce8   0x00000050   Code   RO           54    .text.CLK_WaitClockReady  clk.o
    0x00000d38   0x00000d38   0x000000d0   Code   RO         1295    .text.Clock_Init    clk_conf.o
    0x00000e08   0x00000e08   0x00000154   Code   RO         1198    .text.CopeWitData   wit_c_sdk.o
    0x00000f5c   0x00000f5c   0x0000001c   Code   RO         1277    .text.Delayms       main.o
    0x00000f78   0x00000f78   0x00000008   Code   RO          131    .text.DumpStack     retarget.o
    0x00000f80   0x00000f80   0x00000060   Code   RO         1303    .text.GPIO_Init     periph_conf.o
    0x00000fe0   0x00000fe0   0x00000018   Code   RO          137    .text.GetChar       retarget.o
    0x00000ff8   0x00000ff8   0x00000014   Code   RO         1313    .text.Periph_Init   periph_conf.o
    0x0000100c   0x0000100c   0x0000007c   Code   RO         1322    .text.Pin_Init      pin_conf.o
    0x00001088   0x00001088   0x0000007c   Code   RO          129    .text.ProcessHardFault  retarget.o
    0x00001104   0x00001104   0x0000000e   Code   RO          127    .text.SH_Return     retarget.o
    0x00001112   0x00001112   0x00000002   PAD
    0x00001114   0x00001114   0x00000008   Code   RO         1265    .text.SYS_LockReg   main.o
    0x0000111c   0x0000111c   0x00000024   Code   RO         1263    .text.SYS_UnlockReg  main.o
    0x00001140   0x00001140   0x00000010   Code   RO          135    .text.SendChar      retarget.o
    0x00001150   0x00001150   0x00000048   Code   RO          133    .text.SendChar_ToUART  retarget.o
    0x00001198   0x00001198   0x000000a8   Code   RO         1275    .text.SensorDataUpdata  main.o
    0x00001240   0x00001240   0x0000001c   Code   RO         1273    .text.SensorUartSend  main.o
    0x0000125c   0x0000125c   0x00000078   Code   RO            2    .text.SystemCoreClockUpdate  system_m251.o
    0x000012d4   0x000012d4   0x00000024   Code   RO            4    .text.SystemInit    system_m251.o
    0x000012f8   0x000012f8   0x00000018   Code   RO         1261    .text.System_Init   main.o
    0x00001310   0x00001310   0x00000174   Code   RO          932    .text.TIMER_Delay   timer.o
    0x00001484   0x00001484   0x000000c8   Code   RO          928    .text.TIMER_GetModuleClock  timer.o
    0x0000154c   0x0000154c   0x000002c0   Code   RO         1330    .text.UART0_IRQHandler  int_handler.o
    0x0000180c   0x0000180c   0x00000034   Code   RO         1305    .text.UART0_Init    periph_conf.o
    0x00001840   0x00001840   0x0000001c   Code   RO         1309    .text.UART1_Init    periph_conf.o
    0x0000185c   0x0000185c   0x0000013c   Code   RO         1340    .text.UART2_IRQHandler  int_handler.o
    0x00001998   0x00001998   0x00000030   Code   RO         1311    .text.UART2_Init    periph_conf.o
    0x000019c8   0x000019c8   0x00000094   Code   RO          191    .text.UART_ClearIntFlag  uart.o
    0x00001a5c   0x00001a5c   0x00000014   Code   RO          201    .text.UART_EnableInt  uart.o
    0x00001a70   0x00001a70   0x000001a8   Code   RO          203    .text.UART_Open     uart.o
    0x00001c18   0x00001c18   0x0000006a   Code   RO          217    .text.UART_Write    uart.o
    0x00001c82   0x00001c82   0x00000002   PAD
    0x00001c84   0x00001c84   0x00000028   Code   RO         1218    .text.WitDelayMsRegister  wit_c_sdk.o
    0x00001cac   0x00001cac   0x00000038   Code   RO         1214    .text.WitInit       wit_c_sdk.o
    0x00001ce4   0x00001ce4   0x00000024   Code   RO         1208    .text.WitRegisterCallBack  wit_c_sdk.o
    0x00001d08   0x00001d08   0x000001f8   Code   RO         1194    .text.WitSerialDataIn  wit_c_sdk.o
    0x00001f00   0x00001f00   0x00000028   Code   RO         1192    .text.WitSerialWriteRegister  wit_c_sdk.o
    0x00001f28   0x00001f28   0x00000068   Code   RO         1269    .text.Write_Data_Modbus  main.o
    0x00001f90   0x00001f90   0x00000070   Code   RO         1338    .text.Write_Data_Modbus  int_handler.o
    0x00002000   0x00002000   0x00000070   Code   RO         1200    .text.__CRC16       wit_c_sdk.o
    0x00002070   0x00002070   0x0000003a   Code   RO         1196    .text.__CaliSum     wit_c_sdk.o
    0x000020aa   0x000020aa   0x00000002   PAD
    0x000020ac   0x000020ac   0x00000034   Code   RO         1307    .text.__NVIC_EnableIRQ  periph_conf.o
    0x000020e0   0x000020e0   0x00000060   Code   RO         1279    .text.crc16         main.o
    0x00002140   0x00002140   0x00000060   Code   RO         1342    .text.crc16         int_handler.o
    0x000021a0   0x000021a0   0x00000014   Code   RO         1271    .text.delay         main.o
    0x000021b4   0x000021b4   0x00000014   Code   RO          145    .text.fputc         retarget.o
    0x000021c8   0x000021c8   0x000000e4   Code   RO         1267    .text.main          main.o
    0x000022ac   0x000022ac   0x00000050   Code   RO         1334    .text.robot_Rotate  int_handler.o
    0x000022fc   0x000022fc   0x0000021c   Code   RO         1332    .text.robot_Run     int_handler.o
    0x00002518   0x00002518   0x0000008c   Code   RO         1336    .text.robot_Stop    int_handler.o
    0x000025a4   0x000025a4   0x00000020   Code   RO         1385    i.__0printf         mc_p.l(printfa.o)
    0x000025c4   0x000025c4   0x0000002e   Code   RO         1493    i.__ARM_clz         mf_p.l(depilogue.o)
    0x000025f2   0x000025f2   0x00000032   Code   RO         1450    i.__ARM_common_ll_muluu  m_ps.l(rred.o)
    0x00002624   0x00002624   0x0000002c   Code   RO         1501    i.__ARM_fpclassify  m_ps.l(fpclassify.o)
    0x00002650   0x00002650   0x0000039c   Code   RO         1445    i.__ieee754_rem_pio2  m_ps.l(rred.o)
    0x000029ec   0x000029ec   0x000000f4   Code   RO         1428    i.__kernel_cos      m_ps.l(cos_i.o)
    0x00002ae0   0x00002ae0   0x000000ac   Code   RO         1503    i.__kernel_poly     m_ps.l(poly.o)
    0x00002b8c   0x00002b8c   0x000000ec   Code   RO         1452    i.__kernel_sin      m_ps.l(sin_i.o)
    0x00002c78   0x00002c78   0x0000000a   Code   RO         1432    i.__mathlib_dbl_infnan  m_ps.l(dunder.o)
    0x00002c82   0x00002c82   0x00000010   Code   RO         1434    i.__mathlib_dbl_invalid  m_ps.l(dunder.o)
    0x00002c92   0x00002c92   0x00000002   PAD
    0x00002c94   0x00002c94   0x00000014   Code   RO         1437    i.__mathlib_dbl_underflow  m_ps.l(dunder.o)
    0x00002ca8   0x00002ca8   0x0000000e   Code   RO         1521    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00002cb6   0x00002cb6   0x00000002   Code   RO         1522    i.__scatterload_null  mc_p.l(handlers.o)
    0x00002cb8   0x00002cb8   0x0000000e   Code   RO         1523    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00002cc6   0x00002cc6   0x00000002   PAD
    0x00002cc8   0x00002cc8   0x0000000c   Code   RO         1483    i.__set_errno       mc_p.l(errno.o)
    0x00002cd4   0x00002cd4   0x00000174   Code   RO         1392    i._fp_digits        mc_p.l(printfa.o)
    0x00002e48   0x00002e48   0x000006ec   Code   RO         1393    i._printf_core      mc_p.l(printfa.o)
    0x00003534   0x00003534   0x00000020   Code   RO         1394    i._printf_post_padding  mc_p.l(printfa.o)
    0x00003554   0x00003554   0x0000002c   Code   RO         1395    i._printf_pre_padding  mc_p.l(printfa.o)
    0x00003580   0x00003580   0x00000098   Code   RO         1368    i.cos               m_ps.l(cos.o)
    0x00003618   0x00003618   0x0000009c   Code   RO         1372    i.sin               m_ps.l(sin.o)
    0x000036b4   0x000036b4   0x00000004   PAD
    0x000036b8   0x000036b8   0x00000030   Data   RO         1429    .constdata          m_ps.l(cos_i.o)
    0x000036e8   0x000036e8   0x000000cc   Data   RO         1447    .constdata          m_ps.l(rred.o)
    0x000037b4   0x000037b4   0x00000004   PAD
    0x000037b8   0x000037b8   0x00000028   Data   RO         1453    .constdata          m_ps.l(sin_i.o)
    0x000037e0   0x000037e0   0x00000018   Data   RO          221    .rodata..L__const.UART_Open.au32ClkTbl  uart.o
    0x000037f8   0x000037f8   0x00000100   Data   RO         1252    .rodata.__auchCRCHi  wit_c_sdk.o
    0x000038f8   0x000038f8   0x00000100   Data   RO         1253    .rodata.__auchCRCLo  wit_c_sdk.o
    0x000039f8   0x000039f8   0x00000020   Data   RO          954    .rodata.cst32       timer.o
    0x00003a18   0x00003a18   0x00000020   Data   RO           11    .rodata.gau32ClkSrcTbl  system_m251.o
    0x00003a38   0x00003a38   0x0000000f   Data   RO          152    .rodata.str1.1      retarget.o
    0x00003a47   0x00003a47   0x00000051   Data   RO         1344    .rodata.str1.1      int_handler.o
    0x00003a98   0x00003a98   0x00000100   Data   RO         1284    .rodata.table_crc_hi  main.o
    0x00003b98   0x00003b98   0x00000100   Data   RO         1359    .rodata.table_crc_hi  int_handler.o
    0x00003c98   0x00003c98   0x00000100   Data   RO         1285    .rodata.table_crc_lo  main.o
    0x00003d98   0x00003d98   0x00000100   Data   RO         1360    .rodata.table_crc_lo  int_handler.o
    0x00003e98   0x00003e98   0x00000020   Data   RO         1520    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00003eb8, Size: 0x00000028, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003eb8   0x00000004   Data   RW         1484    .data               mc_p.l(errno.o)
    0x20000004   0x00003ebc   0x00000002   Data   RW         1282    .data.ACC_ADDR      main.o
    0x20000006   0x00003ebe   0x00000002   Data   RW         1281    .data.CTRL_CMD      main.o
    0x20000008   0x00003ec0   0x00000002   Data   RW         1351    .data.CTRL_CMD      int_handler.o
    0x2000000a   0x00003ec2   0x00000002   PAD
    0x2000000c   0x00003ec4   0x00000004   Data   RW            9    .data.CyclesPerUs   system_m251.o
    0x20000010   0x00003ec8   0x00000002   Data   RW         1283    .data.DEC_ADDR      main.o
    0x20000012   0x00003eca   0x00000002   PAD
    0x20000014   0x00003ecc   0x00000004   Data   RW           10    .data.PllClock      system_m251.o
    0x20000018   0x00003ed0   0x00000002   Data   RW         1347    .data.SPEED_ADDR    int_handler.o
    0x2000001a   0x00003ed2   0x00000002   PAD
    0x2000001c   0x00003ed4   0x00000004   Data   RW            8    .data.SystemCoreClock  system_m251.o
    0x20000020   0x00003ed8   0x00000004   Data   RW          151    .data.g_ICE_Connected  retarget.o
    0x20000024   0x00003edc   0x00000001   Data   RW         1250    .data.s_ucAddr      wit_c_sdk.o


    Execution Region ER_ZI (Exec base: 0x20000028, Load base: 0x00003ee0, Size: 0x00000ad0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000028        -       0x00000054   Zero   RW          153    .bss.__stdout       retarget.o
    0x2000007c        -       0x00000001   Zero   RW         1354    .bss.dir1           int_handler.o
    0x2000007d        -       0x00000001   Zero   RW         1353    .bss.dir2           int_handler.o
    0x2000007e        -       0x00000001   Zero   RW         1352    .bss.dir3           int_handler.o
    0x2000007f   0x00003ee0   0x00000001   PAD
    0x20000080        -       0x0000000c   Zero   RW         1356    .bss.fAcc           int_handler.o
    0x2000008c        -       0x0000000c   Zero   RW         1345    .bss.fAngle         int_handler.o
    0x20000098        -       0x0000000c   Zero   RW         1357    .bss.fGyro          int_handler.o
    0x200000a4        -       0x00000004   Zero   RW           98    .bss.g_CLK_i32ErrCode  clk.o
    0x200000a8        -       0x00000004   Zero   RW         1346    .bss.offSet_z       int_handler.o
    0x200000ac        -       0x00000004   Zero   RW         1251    .bss.p_WitDelaymsFunc  wit_c_sdk.o
    0x200000b0        -       0x00000004   Zero   RW         1241    .bss.p_WitRegUpdateCbFunc  wit_c_sdk.o
    0x200000b4        -       0x00000004   Zero   RW         1240    .bss.p_WitSerialWriteFunc  wit_c_sdk.o
    0x200000b8        -       0x00000120   Zero   RW         1245    .bss.sReg           wit_c_sdk.o
    0x200001d8        -       0x00000001   Zero   RW         1286    .bss.s_cDataUpdate  main.o
    0x200001d9        -       0x00000001   Zero   RW         1355    .bss.s_cDataUpdate  int_handler.o
    0x200001da        -       0x00000100   Zero   RW         1242    .bss.s_ucWitDataBuff  wit_c_sdk.o
    0x200002da   0x00003ee0   0x00000002   PAD
    0x200002dc        -       0x00000004   Zero   RW         1244    .bss.s_uiProtoclo   wit_c_sdk.o
    0x200002e0        -       0x00000004   Zero   RW         1246    .bss.s_uiReadRegIndex  wit_c_sdk.o
    0x200002e4        -       0x00000004   Zero   RW         1243    .bss.s_uiWitDataCnt  wit_c_sdk.o
    0x200002e8        -       0x00000004   Zero   RW         1350    .bss.speed1         int_handler.o
    0x200002ec        -       0x00000004   Zero   RW         1349    .bss.speed2         int_handler.o
    0x200002f0        -       0x00000004   Zero   RW         1348    .bss.speed3         int_handler.o
    0x200002f4        -       0x00000004   Zero   RW         1358    .bss.x              int_handler.o
    0x200002f8        -       0x00000800   Zero   RW           18    STACK               startup_m251.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       844         44          0          0          4      10590   clk.o
       208         28          0          0          0       1408   clk_conf.o
      1988        172        593          4         60       4734   int_handler.o
       740         56        512          6          1       5091   main.o
       296         56          0          0          0       3801   periph_conf.o
       124         52          0          0          0       2021   pin_conf.o
       278         20         15          4         84       3236   retarget.o
       132         36        320          0       2048        860   startup_m251.o
       156         36         32         12          0       4101   system_m251.o
       572         36         32          0          0       5264   timer.o
       698         48         24          0          0       5932   uart.o
      1186         56        512          1        568       7950   wit_c_sdk.o

    ----------------------------------------------------------------------
      7228        640       2072         36       2768      54988   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          0          9          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       152         10          0          0          0        104   cos.o
       244         20         48          0          0         92   cos_i.o
        46          6          0          0          0        204   dunder.o
        44          4          0          0          0         60   fpclassify.o
       172          0          0          0          0         76   poly.o
       974         86        204          0          0        200   rred.o
       156         10          0          0          0        104   sin.o
       236         14         40          0          0        100   sin_i.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        12          6          0          4          0         60   errno.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
      2252         98          0          0          0        412   printfa.o
         8          0          0          0          0         60   siabs.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o
        40          2          0          0          0         68   cdrcmple.o
       356          4          0          0          0        140   dadd.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        72         10          0          0          0         72   dfixi.o
        64         10          0          0          0         68   dfixul.o
        40          6          0          0          0         68   dflti.o
        28          4          0          0          0         68   dfltui.o
       208          6          0          0          0         88   dmul.o
        44          0          0          0          0         72   dscalb.o
        40          0          0          0          0         60   f2d.o
       124          0          0          0          0         72   fdiv.o
       130          0          0          0          0        144   fepilogue.o
        22          0          0          0          0         68   fflti.o
       122          0          0          0          0         72   fmul.o

    ----------------------------------------------------------------------
      6460        322        296          4          0       3320   Library Totals
        14          4          4          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2024        150        292          0          0        940   m_ps.l
      2656        120          0          4          0       1020   mc_p.l
      1766         48          0          0          0       1360   mf_p.l

    ----------------------------------------------------------------------
      6460        322        296          4          0       3320   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13688        962       2368         40       2768      56580   Grand Totals
     13688        962       2368         40       2768      56580   ELF Image Totals
     13688        962       2368         40          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16056 (  15.68kB)
    Total RW  Size (RW Data + ZI Data)              2808 (   2.74kB)
    Total ROM Size (Code + RO Data + RW Data)      16096 (  15.72kB)

==============================================================================

